/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/apollo-server-core";
exports.ids = ["vendor-chunks/apollo-server-core"];
exports.modules = {

/***/ "(rsc)/./node_modules/apollo-server-core/dist/ApolloServer.js":
/*!**************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/ApolloServer.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isImplicitlyInstallablePlugin = exports.ApolloServerBase = void 0;\nconst mock_1 = __webpack_require__(/*! @graphql-tools/mock */ \"(rsc)/./node_modules/@graphql-tools/mock/cjs/index.js\");\nconst schema_1 = __webpack_require__(/*! @graphql-tools/schema */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/index.js\");\nconst loglevel_1 = __importDefault(__webpack_require__(/*! loglevel */ \"(rsc)/./node_modules/loglevel/lib/loglevel.js\"));\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst resolvable_1 = __importDefault(__webpack_require__(/*! @josephg/resolvable */ \"(rsc)/./node_modules/@josephg/resolvable/index.js\"));\nconst utils_keyvaluecache_1 = __webpack_require__(/*! @apollo/utils.keyvaluecache */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/index.js\");\nconst schemaHash_1 = __webpack_require__(/*! ./utils/schemaHash */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/schemaHash.js\");\nconst requestPipeline_1 = __webpack_require__(/*! ./requestPipeline */ \"(rsc)/./node_modules/apollo-server-core/dist/requestPipeline.js\");\nconst apollo_server_env_1 = __webpack_require__(/*! apollo-server-env */ \"(rsc)/./node_modules/apollo-server-env/dist/index.js\");\nconst apollo_tools_1 = __webpack_require__(/*! @apollographql/apollo-tools */ \"(rsc)/./node_modules/@apollographql/apollo-tools/lib/index.js\");\nconst runHttpQuery_1 = __webpack_require__(/*! ./runHttpQuery */ \"(rsc)/./node_modules/apollo-server-core/dist/runHttpQuery.js\");\nconst isNodeLike_1 = __importDefault(__webpack_require__(/*! ./utils/isNodeLike */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/isNodeLike.js\"));\nconst determineApolloConfig_1 = __webpack_require__(/*! ./determineApolloConfig */ \"(rsc)/./node_modules/apollo-server-core/dist/determineApolloConfig.js\");\nconst plugin_1 = __webpack_require__(/*! ./plugin */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/index.js\");\nconst internalPlugin_1 = __webpack_require__(/*! ./internalPlugin */ \"(rsc)/./node_modules/apollo-server-core/dist/internalPlugin.js\");\nconst cachePolicy_1 = __webpack_require__(/*! ./cachePolicy */ \"(rsc)/./node_modules/apollo-server-core/dist/cachePolicy.js\");\nconst schemaManager_1 = __webpack_require__(/*! ./utils/schemaManager */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/schemaManager.js\");\nconst uuid = __importStar(__webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/index.js\"));\nconst UnboundedCache_1 = __webpack_require__(/*! ./utils/UnboundedCache */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/UnboundedCache.js\");\nconst NoIntrospection = (context) => ({\n    Field(node) {\n        if (node.name.value === '__schema' || node.name.value === '__type') {\n            context.reportError(new graphql_1.GraphQLError('GraphQL introspection is not allowed by Apollo Server, but the query contained __schema or __type. To enable introspection, pass introspection: true to ApolloServer in production', [node]));\n        }\n    },\n});\nclass UnreachableCaseError extends Error {\n    constructor(val) {\n        super(`Unreachable case: ${val}`);\n    }\n}\nconst recommendedCsrfPreventionRequestHeaders = [\n    'x-apollo-operation-name',\n    'apollo-require-preflight',\n];\nclass ApolloServerBase {\n    constructor(config) {\n        var _a, _b;\n        this.graphqlPath = '/graphql';\n        this.requestOptions = Object.create(null);\n        this.plugins = [];\n        this.toDispose = new Set();\n        this.toDisposeLast = new Set();\n        this.drainServers = null;\n        this.landingPage = null;\n        if (!config)\n            throw new Error('ApolloServer requires options.');\n        this.config = {\n            ...config,\n            nodeEnv: (_a = config.nodeEnv) !== null && _a !== void 0 ? _a : \"development\",\n        };\n        const { context, resolvers, schema, modules, typeDefs, parseOptions = {}, introspection, plugins, gateway, apollo, stopOnTerminationSignals, mocks, mockEntireSchema, documentStore, csrfPrevention, ...requestOptions } = this.config;\n        if (config.logger) {\n            this.logger = config.logger;\n        }\n        else {\n            const loglevelLogger = loglevel_1.default.getLogger('apollo-server');\n            if (this.config.debug === true) {\n                loglevelLogger.setLevel(loglevel_1.default.levels.DEBUG);\n            }\n            else {\n                loglevelLogger.setLevel(loglevel_1.default.levels.INFO);\n            }\n            this.logger = loglevelLogger;\n        }\n        this.apolloConfig = (0, determineApolloConfig_1.determineApolloConfig)(apollo, this.logger);\n        if (gateway && (modules || schema || typeDefs || resolvers)) {\n            throw new Error('Cannot define both `gateway` and any of: `modules`, `schema`, `typeDefs`, or `resolvers`');\n        }\n        this.parseOptions = parseOptions;\n        this.context = context;\n        this.csrfPreventionRequestHeaders =\n            csrfPrevention === true\n                ? recommendedCsrfPreventionRequestHeaders\n                : csrfPrevention === false\n                    ? null\n                    : csrfPrevention === undefined\n                        ? null\n                        : (_b = csrfPrevention.requestHeaders) !== null && _b !== void 0 ? _b : recommendedCsrfPreventionRequestHeaders;\n        const isDev = this.config.nodeEnv !== 'production';\n        this.stopOnTerminationSignals =\n            typeof stopOnTerminationSignals === 'boolean'\n                ? stopOnTerminationSignals\n                : isNodeLike_1.default &&\n                    this.config.nodeEnv !== 'test' &&\n                    !this.serverlessFramework();\n        if ((typeof introspection === 'boolean' && !introspection) ||\n            (introspection === undefined && !isDev)) {\n            const noIntro = [NoIntrospection];\n            requestOptions.validationRules = requestOptions.validationRules\n                ? requestOptions.validationRules.concat(noIntro)\n                : noIntro;\n        }\n        if (requestOptions.cache === 'bounded') {\n            requestOptions.cache = new utils_keyvaluecache_1.InMemoryLRUCache();\n        }\n        if (!requestOptions.cache) {\n            requestOptions.cache = new UnboundedCache_1.UnboundedCache();\n            if (!isDev &&\n                (requestOptions.persistedQueries === undefined ||\n                    (requestOptions.persistedQueries &&\n                        !requestOptions.persistedQueries.cache))) {\n                this.logger.warn('Persisted queries are enabled and are using an unbounded cache. Your server' +\n                    ' is vulnerable to denial of service attacks via memory exhaustion. ' +\n                    'Set `cache: \"bounded\"` or `persistedQueries: false` in your ApolloServer ' +\n                    'constructor, or see https://go.apollo.dev/s/cache-backends for other alternatives.');\n            }\n        }\n        if (requestOptions.persistedQueries !== false) {\n            const { cache: apqCache = requestOptions.cache, ...apqOtherOptions } = requestOptions.persistedQueries || Object.create(null);\n            requestOptions.persistedQueries = {\n                cache: new utils_keyvaluecache_1.PrefixingKeyValueCache(apqCache, requestPipeline_1.APQ_CACHE_PREFIX),\n                ...apqOtherOptions,\n            };\n        }\n        else {\n            delete requestOptions.persistedQueries;\n        }\n        this.requestOptions = requestOptions;\n        this.ensurePluginInstantiation(plugins, isDev);\n        if (gateway) {\n            this.state = {\n                phase: 'initialized',\n                schemaManager: new schemaManager_1.SchemaManager({\n                    gateway,\n                    apolloConfig: this.apolloConfig,\n                    schemaDerivedDataProvider: (schema) => this.generateSchemaDerivedData(schema),\n                    logger: this.logger,\n                }),\n            };\n        }\n        else {\n            this.state = {\n                phase: 'initialized',\n                schemaManager: new schemaManager_1.SchemaManager({\n                    apiSchema: this.maybeAddMocksToConstructedSchema(this.constructSchema()),\n                    schemaDerivedDataProvider: (schema) => this.generateSchemaDerivedData(schema),\n                    logger: this.logger,\n                }),\n            };\n        }\n        if (this.serverlessFramework()) {\n            this._start().catch((e) => this.logStartupError(e));\n        }\n    }\n    async start() {\n        if (this.serverlessFramework()) {\n            throw new Error('When using an ApolloServer subclass from a serverless framework ' +\n                \"package, you don't need to call start(); just call createHandler().\");\n        }\n        return await this._start();\n    }\n    async _start() {\n        var _a;\n        if (this.state.phase !== 'initialized') {\n            throw new Error(`called start() with surprising state ${this.state.phase}`);\n        }\n        const schemaManager = this.state.schemaManager;\n        const barrier = (0, resolvable_1.default)();\n        this.state = {\n            phase: 'starting',\n            barrier,\n            schemaManager,\n        };\n        try {\n            const executor = await schemaManager.start();\n            this.toDispose.add(async () => {\n                await schemaManager.stop();\n            });\n            if (executor) {\n                this.requestOptions.executor = executor;\n            }\n            const schemaDerivedData = schemaManager.getSchemaDerivedData();\n            const service = {\n                logger: this.logger,\n                schema: schemaDerivedData.schema,\n                schemaHash: schemaDerivedData.schemaHash,\n                apollo: this.apolloConfig,\n                serverlessFramework: this.serverlessFramework(),\n            };\n            if ((_a = this.requestOptions.persistedQueries) === null || _a === void 0 ? void 0 : _a.cache) {\n                service.persistedQueries = {\n                    cache: this.requestOptions.persistedQueries.cache,\n                };\n            }\n            const taggedServerListeners = (await Promise.all(this.plugins.map(async (plugin) => ({\n                serverListener: plugin.serverWillStart && (await plugin.serverWillStart(service)),\n                installedImplicitly: isImplicitlyInstallablePlugin(plugin) &&\n                    plugin.__internal_installed_implicitly__,\n            })))).filter((maybeTaggedServerListener) => typeof maybeTaggedServerListener.serverListener === 'object');\n            taggedServerListeners.forEach(({ serverListener: { schemaDidLoadOrUpdate } }) => {\n                if (schemaDidLoadOrUpdate) {\n                    try {\n                        schemaManager.onSchemaLoadOrUpdate(schemaDidLoadOrUpdate);\n                    }\n                    catch (e) {\n                        if (e instanceof schemaManager_1.GatewayIsTooOldError) {\n                            throw new Error([\n                                `One of your plugins uses the 'schemaDidLoadOrUpdate' hook,`,\n                                `but your gateway version is too old to support this hook.`,\n                                `Please update your version of @apollo/gateway to at least 0.35.0.`,\n                            ].join(' '));\n                        }\n                        throw e;\n                    }\n                }\n            });\n            const serverWillStops = taggedServerListeners.flatMap((l) => l.serverListener.serverWillStop\n                ? [l.serverListener.serverWillStop]\n                : []);\n            if (serverWillStops.length) {\n                this.toDispose.add(async () => {\n                    await Promise.all(serverWillStops.map((serverWillStop) => serverWillStop()));\n                });\n            }\n            const drainServerCallbacks = taggedServerListeners.flatMap((l) => l.serverListener.drainServer ? [l.serverListener.drainServer] : []);\n            if (drainServerCallbacks.length) {\n                this.drainServers = async () => {\n                    await Promise.all(drainServerCallbacks.map((drainServer) => drainServer()));\n                };\n            }\n            let taggedServerListenersWithRenderLandingPage = taggedServerListeners.filter((l) => l.serverListener.renderLandingPage);\n            if (taggedServerListenersWithRenderLandingPage.length > 1) {\n                taggedServerListenersWithRenderLandingPage =\n                    taggedServerListenersWithRenderLandingPage.filter((l) => !l.installedImplicitly);\n            }\n            if (taggedServerListenersWithRenderLandingPage.length > 1) {\n                throw Error('Only one plugin can implement renderLandingPage.');\n            }\n            else if (taggedServerListenersWithRenderLandingPage.length) {\n                this.landingPage = await taggedServerListenersWithRenderLandingPage[0]\n                    .serverListener.renderLandingPage();\n            }\n            else {\n                this.landingPage = null;\n            }\n            this.state = {\n                phase: 'started',\n                schemaManager,\n            };\n            this.maybeRegisterTerminationSignalHandlers(['SIGINT', 'SIGTERM']);\n        }\n        catch (error) {\n            this.state = { phase: 'failed to start', error: error };\n            throw error;\n        }\n        finally {\n            barrier.resolve();\n        }\n    }\n    maybeRegisterTerminationSignalHandlers(signals) {\n        if (!this.stopOnTerminationSignals) {\n            return;\n        }\n        let receivedSignal = false;\n        const signalHandler = async (signal) => {\n            if (receivedSignal) {\n                return;\n            }\n            receivedSignal = true;\n            try {\n                await this.stop();\n            }\n            catch (e) {\n                this.logger.error(`stop() threw during ${signal} shutdown`);\n                this.logger.error(e);\n                process.exit(1);\n            }\n            process.kill(process.pid, signal);\n        };\n        signals.forEach((signal) => {\n            process.on(signal, signalHandler);\n            this.toDisposeLast.add(async () => {\n                process.removeListener(signal, signalHandler);\n            });\n        });\n    }\n    async _ensureStarted() {\n        while (true) {\n            switch (this.state.phase) {\n                case 'initialized':\n                    throw new Error('You need to call `server.start()` before using your Apollo Server.');\n                case 'starting':\n                    await this.state.barrier;\n                    break;\n                case 'failed to start':\n                    this.logStartupError(this.state.error);\n                    throw new Error('This data graph is missing a valid configuration. More details may be available in the server logs.');\n                case 'started':\n                case 'draining':\n                    return this.state.schemaManager.getSchemaDerivedData();\n                case 'stopping':\n                    throw new Error('Cannot execute GraphQL operations while the server is stopping.');\n                case 'stopped':\n                    throw new Error('Cannot execute GraphQL operations after the server has stopped.');\n                default:\n                    throw new UnreachableCaseError(this.state);\n            }\n        }\n    }\n    async ensureStarted() {\n        await this._ensureStarted();\n    }\n    assertStarted(methodName) {\n        if (this.state.phase !== 'started' && this.state.phase !== 'draining') {\n            throw new Error('You must `await server.start()` before calling `server.' +\n                methodName +\n                '()`');\n        }\n    }\n    logStartupError(err) {\n        this.logger.error('An error occurred during Apollo Server startup. All GraphQL requests ' +\n            'will now fail. The startup error was: ' +\n            ((err === null || err === void 0 ? void 0 : err.message) || err));\n    }\n    constructSchema() {\n        const { schema, modules, typeDefs, resolvers, parseOptions } = this.config;\n        if (schema) {\n            return schema;\n        }\n        if (modules) {\n            const { schema, errors } = (0, apollo_tools_1.buildServiceDefinition)(modules);\n            if (errors && errors.length > 0) {\n                throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n            }\n            return schema;\n        }\n        if (!typeDefs) {\n            throw Error('Apollo Server requires either an existing schema, modules or typeDefs');\n        }\n        const augmentedTypeDefs = Array.isArray(typeDefs) ? typeDefs : [typeDefs];\n        return (0, schema_1.makeExecutableSchema)({\n            typeDefs: augmentedTypeDefs,\n            resolvers,\n            parseOptions,\n        });\n    }\n    maybeAddMocksToConstructedSchema(schema) {\n        const { mocks, mockEntireSchema } = this.config;\n        if (mocks === false) {\n            return schema;\n        }\n        if (!mocks && typeof mockEntireSchema === 'undefined') {\n            return schema;\n        }\n        return (0, mock_1.addMocksToSchema)({\n            schema,\n            mocks: mocks === true || typeof mocks === 'undefined' ? {} : mocks,\n            preserveResolvers: typeof mockEntireSchema === 'undefined' ? false : !mockEntireSchema,\n        });\n    }\n    generateSchemaDerivedData(schema) {\n        const schemaHash = (0, schemaHash_1.generateSchemaHash)(schema);\n        return {\n            schema,\n            schemaHash,\n            documentStore: this.config.documentStore === undefined\n                ? new utils_keyvaluecache_1.InMemoryLRUCache()\n                : this.config.documentStore === null\n                    ? null\n                    : new utils_keyvaluecache_1.PrefixingKeyValueCache(this.config.documentStore, `${uuid.v4()}:`),\n        };\n    }\n    async stop() {\n        var _a;\n        switch (this.state.phase) {\n            case 'initialized':\n            case 'starting':\n            case 'failed to start':\n                throw Error('apolloServer.stop() should only be called after `await apolloServer.start()` has succeeded');\n            case 'stopped':\n                if (this.state.stopError) {\n                    throw this.state.stopError;\n                }\n                return;\n            case 'stopping':\n            case 'draining': {\n                await this.state.barrier;\n                const state = this.state;\n                if (state.phase !== 'stopped') {\n                    throw Error(`Surprising post-stopping state ${state.phase}`);\n                }\n                if (state.stopError) {\n                    throw state.stopError;\n                }\n                return;\n            }\n            case 'started':\n                break;\n            default:\n                throw new UnreachableCaseError(this.state);\n        }\n        const barrier = (0, resolvable_1.default)();\n        this.state = {\n            phase: 'draining',\n            schemaManager: this.state.schemaManager,\n            barrier,\n        };\n        try {\n            await ((_a = this.drainServers) === null || _a === void 0 ? void 0 : _a.call(this));\n            this.state = { phase: 'stopping', barrier };\n            await Promise.all([...this.toDispose].map((dispose) => dispose()));\n            await Promise.all([...this.toDisposeLast].map((dispose) => dispose()));\n        }\n        catch (stopError) {\n            this.state = { phase: 'stopped', stopError: stopError };\n            barrier.resolve();\n            throw stopError;\n        }\n        this.state = { phase: 'stopped', stopError: null };\n    }\n    serverlessFramework() {\n        return false;\n    }\n    ensurePluginInstantiation(userPlugins = [], isDev) {\n        this.plugins = userPlugins.map((plugin) => {\n            if (typeof plugin === 'function') {\n                return plugin();\n            }\n            return plugin;\n        });\n        const alreadyHavePluginWithInternalId = (id) => this.plugins.some((p) => (0, internalPlugin_1.pluginIsInternal)(p) && p.__internal_plugin_id__() === id);\n        {\n            if (!alreadyHavePluginWithInternalId('CacheControl')) {\n                this.plugins.push((0, plugin_1.ApolloServerPluginCacheControl)());\n            }\n        }\n        {\n            const alreadyHavePlugin = alreadyHavePluginWithInternalId('UsageReporting');\n            if (!alreadyHavePlugin && this.apolloConfig.key) {\n                if (this.apolloConfig.graphRef) {\n                    this.plugins.unshift((0, plugin_1.ApolloServerPluginUsageReporting)());\n                }\n                else {\n                    this.logger.warn('You have specified an Apollo key but have not specified a graph ref; usage ' +\n                        'reporting is disabled. To enable usage reporting, set the `APOLLO_GRAPH_REF` ' +\n                        'environment variable to `your-graph-id@your-graph-variant`. To disable this ' +\n                        'warning, install `ApolloServerPluginUsageReportingDisabled`.');\n                }\n            }\n        }\n        {\n            const alreadyHavePlugin = alreadyHavePluginWithInternalId('SchemaReporting');\n            const enabledViaEnvVar = process.env.APOLLO_SCHEMA_REPORTING === 'true';\n            if (!alreadyHavePlugin && enabledViaEnvVar) {\n                if (this.apolloConfig.key) {\n                    const options = {};\n                    this.plugins.push((0, plugin_1.ApolloServerPluginSchemaReporting)(options));\n                }\n                else {\n                    throw new Error(\"You've enabled schema reporting by setting the APOLLO_SCHEMA_REPORTING \" +\n                        'environment variable to true, but you also need to provide your ' +\n                        'Apollo API key, via the APOLLO_KEY environment ' +\n                        'variable or via `new ApolloServer({apollo: {key})');\n                }\n            }\n        }\n        {\n            const alreadyHavePlugin = alreadyHavePluginWithInternalId('InlineTrace');\n            if (!alreadyHavePlugin) {\n                this.plugins.push((0, plugin_1.ApolloServerPluginInlineTrace)({ __onlyIfSchemaIsFederated: true }));\n            }\n        }\n        const alreadyHavePlugin = alreadyHavePluginWithInternalId('LandingPageDisabled');\n        if (!alreadyHavePlugin) {\n            const plugin = isDev\n                ? (0, plugin_1.ApolloServerPluginLandingPageLocalDefault)()\n                : (0, plugin_1.ApolloServerPluginLandingPageProductionDefault)();\n            if (!isImplicitlyInstallablePlugin(plugin)) {\n                throw Error('default landing page plugin should be implicitly installable?');\n            }\n            plugin.__internal_installed_implicitly__ = true;\n            this.plugins.push(plugin);\n        }\n    }\n    async graphQLServerOptions(integrationContextArgument) {\n        const { schema, schemaHash, documentStore } = await this._ensureStarted();\n        let context = this.context ? this.context : {};\n        try {\n            context =\n                typeof this.context === 'function'\n                    ? await this.context(integrationContextArgument || {})\n                    : context;\n        }\n        catch (error) {\n            context = () => {\n                throw error;\n            };\n        }\n        return {\n            schema,\n            schemaHash,\n            logger: this.logger,\n            plugins: this.plugins,\n            documentStore,\n            dangerouslyDisableValidation: this.config.dangerouslyDisableValidation,\n            context,\n            parseOptions: this.parseOptions,\n            ...this.requestOptions,\n        };\n    }\n    async executeOperation(request, integrationContextArgument) {\n        if (this.state.phase === 'initialized') {\n            await this._start();\n        }\n        const options = await this.graphQLServerOptions(integrationContextArgument);\n        if (typeof options.context === 'function') {\n            options.context = options.context();\n        }\n        else if (typeof options.context === 'object') {\n            options.context = (0, runHttpQuery_1.cloneObject)(options.context);\n        }\n        const requestCtx = {\n            logger: this.logger,\n            schema: options.schema,\n            schemaHash: options.schemaHash,\n            request: {\n                ...request,\n                query: request.query && typeof request.query !== 'string'\n                    ? (0, graphql_1.print)(request.query)\n                    : request.query,\n            },\n            context: options.context || Object.create(null),\n            cache: options.cache,\n            metrics: {},\n            response: {\n                http: {\n                    headers: new apollo_server_env_1.Headers(),\n                },\n            },\n            debug: options.debug,\n            overallCachePolicy: (0, cachePolicy_1.newCachePolicy)(),\n            requestIsBatched: false,\n        };\n        return (0, requestPipeline_1.processGraphQLRequest)(options, requestCtx);\n    }\n    getLandingPage() {\n        this.assertStarted('getLandingPage');\n        return this.landingPage;\n    }\n}\nexports.ApolloServerBase = ApolloServerBase;\nfunction isImplicitlyInstallablePlugin(p) {\n    return '__internal_installed_implicitly__' in p;\n}\nexports.isImplicitlyInstallablePlugin = isImplicitlyInstallablePlugin;\n//# sourceMappingURL=ApolloServer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/ApolloServer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/cachePolicy.js":
/*!*************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/cachePolicy.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.newCachePolicy = void 0;\nconst apollo_server_types_1 = __webpack_require__(/*! apollo-server-types */ \"(rsc)/./node_modules/apollo-server-types/dist/index.js\");\nfunction newCachePolicy() {\n    return {\n        maxAge: undefined,\n        scope: undefined,\n        restrict(hint) {\n            if (hint.maxAge !== undefined &&\n                (this.maxAge === undefined || hint.maxAge < this.maxAge)) {\n                this.maxAge = hint.maxAge;\n            }\n            if (hint.scope !== undefined && this.scope !== apollo_server_types_1.CacheScope.Private) {\n                this.scope = hint.scope;\n            }\n        },\n        replace(hint) {\n            if (hint.maxAge !== undefined) {\n                this.maxAge = hint.maxAge;\n            }\n            if (hint.scope !== undefined) {\n                this.scope = hint.scope;\n            }\n        },\n        policyIfCacheable() {\n            var _a;\n            if (this.maxAge === undefined || this.maxAge === 0) {\n                return null;\n            }\n            return { maxAge: this.maxAge, scope: (_a = this.scope) !== null && _a !== void 0 ? _a : apollo_server_types_1.CacheScope.Public };\n        },\n    };\n}\nexports.newCachePolicy = newCachePolicy;\n//# sourceMappingURL=cachePolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvY2FjaGVQb2xpY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLDhCQUE4QixtQkFBTyxDQUFDLG1GQUFxQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixTQUFTO0FBQ1Q7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXGNhY2hlUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5uZXdDYWNoZVBvbGljeSA9IHZvaWQgMDtcbmNvbnN0IGFwb2xsb19zZXJ2ZXJfdHlwZXNfMSA9IHJlcXVpcmUoXCJhcG9sbG8tc2VydmVyLXR5cGVzXCIpO1xuZnVuY3Rpb24gbmV3Q2FjaGVQb2xpY3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWF4QWdlOiB1bmRlZmluZWQsXG4gICAgICAgIHNjb3BlOiB1bmRlZmluZWQsXG4gICAgICAgIHJlc3RyaWN0KGhpbnQpIHtcbiAgICAgICAgICAgIGlmIChoaW50Lm1heEFnZSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgKHRoaXMubWF4QWdlID09PSB1bmRlZmluZWQgfHwgaGludC5tYXhBZ2UgPCB0aGlzLm1heEFnZSkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1heEFnZSA9IGhpbnQubWF4QWdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGhpbnQuc2NvcGUgIT09IHVuZGVmaW5lZCAmJiB0aGlzLnNjb3BlICE9PSBhcG9sbG9fc2VydmVyX3R5cGVzXzEuQ2FjaGVTY29wZS5Qcml2YXRlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zY29wZSA9IGhpbnQuc2NvcGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlcGxhY2UoaGludCkge1xuICAgICAgICAgICAgaWYgKGhpbnQubWF4QWdlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1heEFnZSA9IGhpbnQubWF4QWdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGhpbnQuc2NvcGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2NvcGUgPSBoaW50LnNjb3BlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBwb2xpY3lJZkNhY2hlYWJsZSgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmICh0aGlzLm1heEFnZSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMubWF4QWdlID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyBtYXhBZ2U6IHRoaXMubWF4QWdlLCBzY29wZTogKF9hID0gdGhpcy5zY29wZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogYXBvbGxvX3NlcnZlcl90eXBlc18xLkNhY2hlU2NvcGUuUHVibGljIH07XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMubmV3Q2FjaGVQb2xpY3kgPSBuZXdDYWNoZVBvbGljeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhY2hlUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/cachePolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/determineApolloConfig.js":
/*!***********************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/determineApolloConfig.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.determineApolloConfig = void 0;\nconst createSHA_1 = __importDefault(__webpack_require__(/*! ./utils/createSHA */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/createSHA.js\"));\nfunction determineApolloConfig(input, logger) {\n    var _a, _b, _c;\n    const apolloConfig = {};\n    const { APOLLO_KEY, APOLLO_GRAPH_REF, APOLLO_GRAPH_ID, APOLLO_GRAPH_VARIANT, } = process.env;\n    if (input === null || input === void 0 ? void 0 : input.key) {\n        apolloConfig.key = input.key.trim();\n    }\n    else if (APOLLO_KEY) {\n        apolloConfig.key = APOLLO_KEY.trim();\n    }\n    if (((_a = input === null || input === void 0 ? void 0 : input.key) !== null && _a !== void 0 ? _a : APOLLO_KEY) !== apolloConfig.key) {\n        logger.warn('The provided API key has unexpected leading or trailing whitespace. ' +\n            'Apollo Server will trim the key value before use.');\n    }\n    if (apolloConfig.key) {\n        assertValidHeaderValue(apolloConfig.key);\n    }\n    if (apolloConfig.key) {\n        apolloConfig.keyHash = (0, createSHA_1.default)('sha512')\n            .update(apolloConfig.key)\n            .digest('hex');\n    }\n    if (input === null || input === void 0 ? void 0 : input.graphRef) {\n        apolloConfig.graphRef = input.graphRef;\n    }\n    else if (APOLLO_GRAPH_REF) {\n        apolloConfig.graphRef = APOLLO_GRAPH_REF;\n    }\n    const graphId = (_b = input === null || input === void 0 ? void 0 : input.graphId) !== null && _b !== void 0 ? _b : APOLLO_GRAPH_ID;\n    const graphVariant = (_c = input === null || input === void 0 ? void 0 : input.graphVariant) !== null && _c !== void 0 ? _c : APOLLO_GRAPH_VARIANT;\n    if (apolloConfig.graphRef) {\n        if (graphId) {\n            throw new Error('Cannot specify both graph ref and graph ID. Please use ' +\n                '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph ID.');\n        }\n        if (graphVariant) {\n            throw new Error('Cannot specify both graph ref and graph variant. Please use ' +\n                '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph variant.');\n        }\n    }\n    else if (graphId) {\n        apolloConfig.graphRef = graphVariant\n            ? `${graphId}@${graphVariant}`\n            : graphId;\n    }\n    return apolloConfig;\n}\nexports.determineApolloConfig = determineApolloConfig;\nfunction assertValidHeaderValue(value) {\n    const invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/g;\n    if (invalidHeaderCharRegex.test(value)) {\n        const invalidChars = value.match(invalidHeaderCharRegex);\n        throw new Error(`The API key provided to Apollo Server contains characters which are invalid as HTTP header values. The following characters found in the key are invalid: ${invalidChars.join(', ')}. Valid header values may only contain ASCII visible characters. If you think there is an issue with your key, please contact Apollo support.`);\n    }\n}\n//# sourceMappingURL=determineApolloConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvZGV0ZXJtaW5lQXBvbGxvQ29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCLG9DQUFvQyxtQkFBTyxDQUFDLDBGQUFtQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVFQUF1RTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVEsR0FBRyxhQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUxBQXFMLHdCQUF3QjtBQUM3TTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFxkZXRlcm1pbmVBcG9sbG9Db25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRldGVybWluZUFwb2xsb0NvbmZpZyA9IHZvaWQgMDtcbmNvbnN0IGNyZWF0ZVNIQV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3V0aWxzL2NyZWF0ZVNIQVwiKSk7XG5mdW5jdGlvbiBkZXRlcm1pbmVBcG9sbG9Db25maWcoaW5wdXQsIGxvZ2dlcikge1xuICAgIHZhciBfYSwgX2IsIF9jO1xuICAgIGNvbnN0IGFwb2xsb0NvbmZpZyA9IHt9O1xuICAgIGNvbnN0IHsgQVBPTExPX0tFWSwgQVBPTExPX0dSQVBIX1JFRiwgQVBPTExPX0dSQVBIX0lELCBBUE9MTE9fR1JBUEhfVkFSSUFOVCwgfSA9IHByb2Nlc3MuZW52O1xuICAgIGlmIChpbnB1dCA9PT0gbnVsbCB8fCBpbnB1dCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5wdXQua2V5KSB7XG4gICAgICAgIGFwb2xsb0NvbmZpZy5rZXkgPSBpbnB1dC5rZXkudHJpbSgpO1xuICAgIH1cbiAgICBlbHNlIGlmIChBUE9MTE9fS0VZKSB7XG4gICAgICAgIGFwb2xsb0NvbmZpZy5rZXkgPSBBUE9MTE9fS0VZLnRyaW0oKTtcbiAgICB9XG4gICAgaWYgKCgoX2EgPSBpbnB1dCA9PT0gbnVsbCB8fCBpbnB1dCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5wdXQua2V5KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBBUE9MTE9fS0VZKSAhPT0gYXBvbGxvQ29uZmlnLmtleSkge1xuICAgICAgICBsb2dnZXIud2FybignVGhlIHByb3ZpZGVkIEFQSSBrZXkgaGFzIHVuZXhwZWN0ZWQgbGVhZGluZyBvciB0cmFpbGluZyB3aGl0ZXNwYWNlLiAnICtcbiAgICAgICAgICAgICdBcG9sbG8gU2VydmVyIHdpbGwgdHJpbSB0aGUga2V5IHZhbHVlIGJlZm9yZSB1c2UuJyk7XG4gICAgfVxuICAgIGlmIChhcG9sbG9Db25maWcua2V5KSB7XG4gICAgICAgIGFzc2VydFZhbGlkSGVhZGVyVmFsdWUoYXBvbGxvQ29uZmlnLmtleSk7XG4gICAgfVxuICAgIGlmIChhcG9sbG9Db25maWcua2V5KSB7XG4gICAgICAgIGFwb2xsb0NvbmZpZy5rZXlIYXNoID0gKDAsIGNyZWF0ZVNIQV8xLmRlZmF1bHQpKCdzaGE1MTInKVxuICAgICAgICAgICAgLnVwZGF0ZShhcG9sbG9Db25maWcua2V5KVxuICAgICAgICAgICAgLmRpZ2VzdCgnaGV4Jyk7XG4gICAgfVxuICAgIGlmIChpbnB1dCA9PT0gbnVsbCB8fCBpbnB1dCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5wdXQuZ3JhcGhSZWYpIHtcbiAgICAgICAgYXBvbGxvQ29uZmlnLmdyYXBoUmVmID0gaW5wdXQuZ3JhcGhSZWY7XG4gICAgfVxuICAgIGVsc2UgaWYgKEFQT0xMT19HUkFQSF9SRUYpIHtcbiAgICAgICAgYXBvbGxvQ29uZmlnLmdyYXBoUmVmID0gQVBPTExPX0dSQVBIX1JFRjtcbiAgICB9XG4gICAgY29uc3QgZ3JhcGhJZCA9IChfYiA9IGlucHV0ID09PSBudWxsIHx8IGlucHV0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbnB1dC5ncmFwaElkKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBBUE9MTE9fR1JBUEhfSUQ7XG4gICAgY29uc3QgZ3JhcGhWYXJpYW50ID0gKF9jID0gaW5wdXQgPT09IG51bGwgfHwgaW5wdXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGlucHV0LmdyYXBoVmFyaWFudCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogQVBPTExPX0dSQVBIX1ZBUklBTlQ7XG4gICAgaWYgKGFwb2xsb0NvbmZpZy5ncmFwaFJlZikge1xuICAgICAgICBpZiAoZ3JhcGhJZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3Qgc3BlY2lmeSBib3RoIGdyYXBoIHJlZiBhbmQgZ3JhcGggSUQuIFBsZWFzZSB1c2UgJyArXG4gICAgICAgICAgICAgICAgJ2BhcG9sbG8uZ3JhcGhSZWZgIG9yIGBBUE9MTE9fR1JBUEhfUkVGYCB3aXRob3V0IGFsc28gc2V0dGluZyB0aGUgZ3JhcGggSUQuJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGdyYXBoVmFyaWFudCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3Qgc3BlY2lmeSBib3RoIGdyYXBoIHJlZiBhbmQgZ3JhcGggdmFyaWFudC4gUGxlYXNlIHVzZSAnICtcbiAgICAgICAgICAgICAgICAnYGFwb2xsby5ncmFwaFJlZmAgb3IgYEFQT0xMT19HUkFQSF9SRUZgIHdpdGhvdXQgYWxzbyBzZXR0aW5nIHRoZSBncmFwaCB2YXJpYW50LicpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGdyYXBoSWQpIHtcbiAgICAgICAgYXBvbGxvQ29uZmlnLmdyYXBoUmVmID0gZ3JhcGhWYXJpYW50XG4gICAgICAgICAgICA/IGAke2dyYXBoSWR9QCR7Z3JhcGhWYXJpYW50fWBcbiAgICAgICAgICAgIDogZ3JhcGhJZDtcbiAgICB9XG4gICAgcmV0dXJuIGFwb2xsb0NvbmZpZztcbn1cbmV4cG9ydHMuZGV0ZXJtaW5lQXBvbGxvQ29uZmlnID0gZGV0ZXJtaW5lQXBvbGxvQ29uZmlnO1xuZnVuY3Rpb24gYXNzZXJ0VmFsaWRIZWFkZXJWYWx1ZSh2YWx1ZSkge1xuICAgIGNvbnN0IGludmFsaWRIZWFkZXJDaGFyUmVnZXggPSAvW15cXHRcXHgyMC1cXHg3ZVxceDgwLVxceGZmXS9nO1xuICAgIGlmIChpbnZhbGlkSGVhZGVyQ2hhclJlZ2V4LnRlc3QodmFsdWUpKSB7XG4gICAgICAgIGNvbnN0IGludmFsaWRDaGFycyA9IHZhbHVlLm1hdGNoKGludmFsaWRIZWFkZXJDaGFyUmVnZXgpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBBUEkga2V5IHByb3ZpZGVkIHRvIEFwb2xsbyBTZXJ2ZXIgY29udGFpbnMgY2hhcmFjdGVycyB3aGljaCBhcmUgaW52YWxpZCBhcyBIVFRQIGhlYWRlciB2YWx1ZXMuIFRoZSBmb2xsb3dpbmcgY2hhcmFjdGVycyBmb3VuZCBpbiB0aGUga2V5IGFyZSBpbnZhbGlkOiAke2ludmFsaWRDaGFycy5qb2luKCcsICcpfS4gVmFsaWQgaGVhZGVyIHZhbHVlcyBtYXkgb25seSBjb250YWluIEFTQ0lJIHZpc2libGUgY2hhcmFjdGVycy4gSWYgeW91IHRoaW5rIHRoZXJlIGlzIGFuIGlzc3VlIHdpdGggeW91ciBrZXksIHBsZWFzZSBjb250YWN0IEFwb2xsbyBzdXBwb3J0LmApO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldGVybWluZUFwb2xsb0NvbmZpZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/determineApolloConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/gql.js":
/*!*****************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/gql.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.gql = void 0;\nconst graphql_tag_1 = __importDefault(__webpack_require__(/*! graphql-tag */ \"(rsc)/./node_modules/graphql-tag/lib/index.js\"));\nexports.gql = graphql_tag_1.default;\n//# sourceMappingURL=gql.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvZ3FsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsV0FBVztBQUNYLHNDQUFzQyxtQkFBTyxDQUFDLGtFQUFhO0FBQzNELFdBQVc7QUFDWCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXGdxbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ3FsID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF90YWdfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZ3JhcGhxbC10YWdcIikpO1xuZXhwb3J0cy5ncWwgPSBncmFwaHFsX3RhZ18xLmRlZmF1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/gql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/graphqlOptions.js":
/*!****************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/graphqlOptions.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.resolveGraphqlOptions = void 0;\nasync function resolveGraphqlOptions(options, ...args) {\n    if (typeof options === 'function') {\n        return await options(...args);\n    }\n    else {\n        return options;\n    }\n}\nexports.resolveGraphqlOptions = resolveGraphqlOptions;\n//# sourceMappingURL=graphqlOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvZ3JhcGhxbE9wdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFxncmFwaHFsT3B0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVzb2x2ZUdyYXBocWxPcHRpb25zID0gdm9pZCAwO1xuYXN5bmMgZnVuY3Rpb24gcmVzb2x2ZUdyYXBocWxPcHRpb25zKG9wdGlvbnMsIC4uLmFyZ3MpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IG9wdGlvbnMoLi4uYXJncyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gb3B0aW9ucztcbiAgICB9XG59XG5leHBvcnRzLnJlc29sdmVHcmFwaHFsT3B0aW9ucyA9IHJlc29sdmVHcmFwaHFsT3B0aW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyYXBocWxPcHRpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/graphqlOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApolloServerBase = exports.convertNodeHttpToRequest = exports.formatApolloErrors = exports.UserInputError = exports.ForbiddenError = exports.AuthenticationError = exports.ValidationError = exports.SyntaxError = exports.toApolloError = exports.ApolloError = exports.resolveGraphqlOptions = exports.isHttpQueryError = exports.HttpQueryError = exports.runHttpQuery = void 0;\nvar runHttpQuery_1 = __webpack_require__(/*! ./runHttpQuery */ \"(rsc)/./node_modules/apollo-server-core/dist/runHttpQuery.js\");\nObject.defineProperty(exports, \"runHttpQuery\", ({ enumerable: true, get: function () { return runHttpQuery_1.runHttpQuery; } }));\nObject.defineProperty(exports, \"HttpQueryError\", ({ enumerable: true, get: function () { return runHttpQuery_1.HttpQueryError; } }));\nObject.defineProperty(exports, \"isHttpQueryError\", ({ enumerable: true, get: function () { return runHttpQuery_1.isHttpQueryError; } }));\nvar graphqlOptions_1 = __webpack_require__(/*! ./graphqlOptions */ \"(rsc)/./node_modules/apollo-server-core/dist/graphqlOptions.js\");\nObject.defineProperty(exports, \"resolveGraphqlOptions\", ({ enumerable: true, get: function () { return graphqlOptions_1.resolveGraphqlOptions; } }));\nvar apollo_server_errors_1 = __webpack_require__(/*! apollo-server-errors */ \"(rsc)/./node_modules/apollo-server-errors/dist/index.js\");\nObject.defineProperty(exports, \"ApolloError\", ({ enumerable: true, get: function () { return apollo_server_errors_1.ApolloError; } }));\nObject.defineProperty(exports, \"toApolloError\", ({ enumerable: true, get: function () { return apollo_server_errors_1.toApolloError; } }));\nObject.defineProperty(exports, \"SyntaxError\", ({ enumerable: true, get: function () { return apollo_server_errors_1.SyntaxError; } }));\nObject.defineProperty(exports, \"ValidationError\", ({ enumerable: true, get: function () { return apollo_server_errors_1.ValidationError; } }));\nObject.defineProperty(exports, \"AuthenticationError\", ({ enumerable: true, get: function () { return apollo_server_errors_1.AuthenticationError; } }));\nObject.defineProperty(exports, \"ForbiddenError\", ({ enumerable: true, get: function () { return apollo_server_errors_1.ForbiddenError; } }));\nObject.defineProperty(exports, \"UserInputError\", ({ enumerable: true, get: function () { return apollo_server_errors_1.UserInputError; } }));\nObject.defineProperty(exports, \"formatApolloErrors\", ({ enumerable: true, get: function () { return apollo_server_errors_1.formatApolloErrors; } }));\nvar nodeHttpToRequest_1 = __webpack_require__(/*! ./nodeHttpToRequest */ \"(rsc)/./node_modules/apollo-server-core/dist/nodeHttpToRequest.js\");\nObject.defineProperty(exports, \"convertNodeHttpToRequest\", ({ enumerable: true, get: function () { return nodeHttpToRequest_1.convertNodeHttpToRequest; } }));\nvar ApolloServer_1 = __webpack_require__(/*! ./ApolloServer */ \"(rsc)/./node_modules/apollo-server-core/dist/ApolloServer.js\");\nObject.defineProperty(exports, \"ApolloServerBase\", ({ enumerable: true, get: function () { return ApolloServer_1.ApolloServerBase; } }));\n__exportStar(__webpack_require__(/*! ./types */ \"(rsc)/./node_modules/apollo-server-core/dist/types.js\"), exports);\nvar apollo_server_types_1 = __webpack_require__(/*! apollo-server-types */ \"(rsc)/./node_modules/apollo-server-types/dist/index.js\");\n__exportStar(__webpack_require__(/*! ./gql */ \"(rsc)/./node_modules/apollo-server-core/dist/gql.js\"), exports);\n__exportStar(__webpack_require__(/*! ./plugin */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsZ0NBQWdDLEdBQUcsMEJBQTBCLEdBQUcsc0JBQXNCLEdBQUcsc0JBQXNCLEdBQUcsMkJBQTJCLEdBQUcsdUJBQXVCLEdBQUcsbUJBQW1CLEdBQUcscUJBQXFCLEdBQUcsbUJBQW1CLEdBQUcsNkJBQTZCLEdBQUcsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsb0JBQW9CO0FBQ2pYLHFCQUFxQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM3QyxnREFBK0MsRUFBRSxxQ0FBcUMsdUNBQXVDLEVBQUM7QUFDOUgsa0RBQWlELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ2xJLG9EQUFtRCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUN0SSx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBa0I7QUFDakQseURBQXdELEVBQUUscUNBQXFDLGtEQUFrRCxFQUFDO0FBQ2xKLDZCQUE2QixtQkFBTyxDQUFDLHFGQUFzQjtBQUMzRCwrQ0FBOEMsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDcEksaURBQWdELEVBQUUscUNBQXFDLGdEQUFnRCxFQUFDO0FBQ3hJLCtDQUE4QyxFQUFFLHFDQUFxQyw4Q0FBOEMsRUFBQztBQUNwSSxtREFBa0QsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDNUksdURBQXNELEVBQUUscUNBQXFDLHNEQUFzRCxFQUFDO0FBQ3BKLGtEQUFpRCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUMxSSxrREFBaUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDMUksc0RBQXFELEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQ2xKLDBCQUEwQixtQkFBTyxDQUFDLDhGQUFxQjtBQUN2RCw0REFBMkQsRUFBRSxxQ0FBcUMsd0RBQXdELEVBQUM7QUFDM0oscUJBQXFCLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzdDLG9EQUFtRCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUN0SSxhQUFhLG1CQUFPLENBQUMsc0VBQVM7QUFDOUIsNEJBQTRCLG1CQUFPLENBQUMsbUZBQXFCO0FBQ3pELGFBQWEsbUJBQU8sQ0FBQyxrRUFBTztBQUM1QixhQUFhLG1CQUFPLENBQUMsOEVBQVU7QUFDL0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcG9sbG9TZXJ2ZXJCYXNlID0gZXhwb3J0cy5jb252ZXJ0Tm9kZUh0dHBUb1JlcXVlc3QgPSBleHBvcnRzLmZvcm1hdEFwb2xsb0Vycm9ycyA9IGV4cG9ydHMuVXNlcklucHV0RXJyb3IgPSBleHBvcnRzLkZvcmJpZGRlbkVycm9yID0gZXhwb3J0cy5BdXRoZW50aWNhdGlvbkVycm9yID0gZXhwb3J0cy5WYWxpZGF0aW9uRXJyb3IgPSBleHBvcnRzLlN5bnRheEVycm9yID0gZXhwb3J0cy50b0Fwb2xsb0Vycm9yID0gZXhwb3J0cy5BcG9sbG9FcnJvciA9IGV4cG9ydHMucmVzb2x2ZUdyYXBocWxPcHRpb25zID0gZXhwb3J0cy5pc0h0dHBRdWVyeUVycm9yID0gZXhwb3J0cy5IdHRwUXVlcnlFcnJvciA9IGV4cG9ydHMucnVuSHR0cFF1ZXJ5ID0gdm9pZCAwO1xudmFyIHJ1bkh0dHBRdWVyeV8xID0gcmVxdWlyZShcIi4vcnVuSHR0cFF1ZXJ5XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicnVuSHR0cFF1ZXJ5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBydW5IdHRwUXVlcnlfMS5ydW5IdHRwUXVlcnk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIdHRwUXVlcnlFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcnVuSHR0cFF1ZXJ5XzEuSHR0cFF1ZXJ5RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0h0dHBRdWVyeUVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBydW5IdHRwUXVlcnlfMS5pc0h0dHBRdWVyeUVycm9yOyB9IH0pO1xudmFyIGdyYXBocWxPcHRpb25zXzEgPSByZXF1aXJlKFwiLi9ncmFwaHFsT3B0aW9uc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInJlc29sdmVHcmFwaHFsT3B0aW9uc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZ3JhcGhxbE9wdGlvbnNfMS5yZXNvbHZlR3JhcGhxbE9wdGlvbnM7IH0gfSk7XG52YXIgYXBvbGxvX3NlcnZlcl9lcnJvcnNfMSA9IHJlcXVpcmUoXCJhcG9sbG8tc2VydmVyLWVycm9yc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFwb2xsb0Vycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhcG9sbG9fc2VydmVyX2Vycm9yc18xLkFwb2xsb0Vycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidG9BcG9sbG9FcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXBvbGxvX3NlcnZlcl9lcnJvcnNfMS50b0Fwb2xsb0Vycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3ludGF4RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFwb2xsb19zZXJ2ZXJfZXJyb3JzXzEuU3ludGF4RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJWYWxpZGF0aW9uRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFwb2xsb19zZXJ2ZXJfZXJyb3JzXzEuVmFsaWRhdGlvbkVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXV0aGVudGljYXRpb25FcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXBvbGxvX3NlcnZlcl9lcnJvcnNfMS5BdXRoZW50aWNhdGlvbkVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRm9yYmlkZGVuRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFwb2xsb19zZXJ2ZXJfZXJyb3JzXzEuRm9yYmlkZGVuRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVc2VySW5wdXRFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXBvbGxvX3NlcnZlcl9lcnJvcnNfMS5Vc2VySW5wdXRFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdEFwb2xsb0Vycm9yc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXBvbGxvX3NlcnZlcl9lcnJvcnNfMS5mb3JtYXRBcG9sbG9FcnJvcnM7IH0gfSk7XG52YXIgbm9kZUh0dHBUb1JlcXVlc3RfMSA9IHJlcXVpcmUoXCIuL25vZGVIdHRwVG9SZXF1ZXN0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY29udmVydE5vZGVIdHRwVG9SZXF1ZXN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBub2RlSHR0cFRvUmVxdWVzdF8xLmNvbnZlcnROb2RlSHR0cFRvUmVxdWVzdDsgfSB9KTtcbnZhciBBcG9sbG9TZXJ2ZXJfMSA9IHJlcXVpcmUoXCIuL0Fwb2xsb1NlcnZlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFwb2xsb1NlcnZlckJhc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEFwb2xsb1NlcnZlcl8xLkFwb2xsb1NlcnZlckJhc2U7IH0gfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xudmFyIGFwb2xsb19zZXJ2ZXJfdHlwZXNfMSA9IHJlcXVpcmUoXCJhcG9sbG8tc2VydmVyLXR5cGVzXCIpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dxbFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGx1Z2luXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/internalPlugin.js":
/*!****************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/internalPlugin.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pluginIsInternal = void 0;\nfunction pluginIsInternal(plugin) {\n    return '__internal_plugin_id__' in plugin;\n}\nexports.pluginIsInternal = pluginIsInternal;\n//# sourceMappingURL=internalPlugin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvaW50ZXJuYWxQbHVnaW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXGludGVybmFsUGx1Z2luLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wbHVnaW5Jc0ludGVybmFsID0gdm9pZCAwO1xuZnVuY3Rpb24gcGx1Z2luSXNJbnRlcm5hbChwbHVnaW4pIHtcbiAgICByZXR1cm4gJ19faW50ZXJuYWxfcGx1Z2luX2lkX18nIGluIHBsdWdpbjtcbn1cbmV4cG9ydHMucGx1Z2luSXNJbnRlcm5hbCA9IHBsdWdpbklzSW50ZXJuYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcm5hbFBsdWdpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/internalPlugin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/nodeHttpToRequest.js":
/*!*******************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/nodeHttpToRequest.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.convertNodeHttpToRequest = void 0;\nconst apollo_server_env_1 = __webpack_require__(/*! apollo-server-env */ \"(rsc)/./node_modules/apollo-server-env/dist/index.js\");\nfunction convertNodeHttpToRequest(req) {\n    const headers = new apollo_server_env_1.Headers();\n    Object.keys(req.headers).forEach((key) => {\n        const values = req.headers[key];\n        if (Array.isArray(values)) {\n            values.forEach((value) => headers.append(key, value));\n        }\n        else {\n            headers.append(key, values);\n        }\n    });\n    return new apollo_server_env_1.Request(req.url, {\n        headers,\n        method: req.method,\n    });\n}\nexports.convertNodeHttpToRequest = convertNodeHttpToRequest;\n//# sourceMappingURL=nodeHttpToRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3Qvbm9kZUh0dHBUb1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDO0FBQ2hDLDRCQUE0QixtQkFBTyxDQUFDLCtFQUFtQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxnQ0FBZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFxub2RlSHR0cFRvUmVxdWVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29udmVydE5vZGVIdHRwVG9SZXF1ZXN0ID0gdm9pZCAwO1xuY29uc3QgYXBvbGxvX3NlcnZlcl9lbnZfMSA9IHJlcXVpcmUoXCJhcG9sbG8tc2VydmVyLWVudlwiKTtcbmZ1bmN0aW9uIGNvbnZlcnROb2RlSHR0cFRvUmVxdWVzdChyZXEpIHtcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IGFwb2xsb19zZXJ2ZXJfZW52XzEuSGVhZGVycygpO1xuICAgIE9iamVjdC5rZXlzKHJlcS5oZWFkZXJzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gcmVxLmhlYWRlcnNba2V5XTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgICAgICAgICAgdmFsdWVzLmZvckVhY2goKHZhbHVlKSA9PiBoZWFkZXJzLmFwcGVuZChrZXksIHZhbHVlKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBoZWFkZXJzLmFwcGVuZChrZXksIHZhbHVlcyk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IGFwb2xsb19zZXJ2ZXJfZW52XzEuUmVxdWVzdChyZXEudXJsLCB7XG4gICAgICAgIGhlYWRlcnMsXG4gICAgICAgIG1ldGhvZDogcmVxLm1ldGhvZCxcbiAgICB9KTtcbn1cbmV4cG9ydHMuY29udmVydE5vZGVIdHRwVG9SZXF1ZXN0ID0gY29udmVydE5vZGVIdHRwVG9SZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZUh0dHBUb1JlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/nodeHttpToRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/cacheControl/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/cacheControl/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApolloServerPluginCacheControlDisabled = exports.ApolloServerPluginCacheControl = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst cachePolicy_1 = __webpack_require__(/*! ../../cachePolicy */ \"(rsc)/./node_modules/apollo-server-core/dist/cachePolicy.js\");\nconst lru_cache_1 = __importDefault(__webpack_require__(/*! lru-cache */ \"(rsc)/./node_modules/apollo-server-core/node_modules/lru-cache/index.js\"));\nfunction ApolloServerPluginCacheControl(options = Object.create(null)) {\n    const typeAnnotationCache = new lru_cache_1.default();\n    const fieldAnnotationCache = new lru_cache_1.default();\n    function memoizedCacheAnnotationFromType(t) {\n        const existing = typeAnnotationCache.get(t);\n        if (existing) {\n            return existing;\n        }\n        const annotation = cacheAnnotationFromType(t);\n        typeAnnotationCache.set(t, annotation);\n        return annotation;\n    }\n    function memoizedCacheAnnotationFromField(field) {\n        const existing = fieldAnnotationCache.get(field);\n        if (existing) {\n            return existing;\n        }\n        const annotation = cacheAnnotationFromField(field);\n        fieldAnnotationCache.set(field, annotation);\n        return annotation;\n    }\n    return {\n        __internal_plugin_id__() {\n            return 'CacheControl';\n        },\n        async serverWillStart({ schema }) {\n            typeAnnotationCache.max = Object.values(schema.getTypeMap()).filter(graphql_1.isCompositeType).length;\n            fieldAnnotationCache.max =\n                Object.values(schema.getTypeMap())\n                    .filter(graphql_1.isObjectType)\n                    .flatMap((t) => Object.values(t.getFields())).length +\n                    Object.values(schema.getTypeMap())\n                        .filter(graphql_1.isInterfaceType)\n                        .flatMap((t) => Object.values(t.getFields())).length;\n            return undefined;\n        },\n        async requestDidStart(requestContext) {\n            var _a, _b;\n            const defaultMaxAge = (_a = options.defaultMaxAge) !== null && _a !== void 0 ? _a : 0;\n            const calculateHttpHeaders = (_b = options.calculateHttpHeaders) !== null && _b !== void 0 ? _b : true;\n            const { __testing__cacheHints } = options;\n            return {\n                async executionDidStart() {\n                    if (isRestricted(requestContext.overallCachePolicy)) {\n                        const fakeFieldPolicy = (0, cachePolicy_1.newCachePolicy)();\n                        return {\n                            willResolveField({ info }) {\n                                info.cacheControl = {\n                                    setCacheHint: (dynamicHint) => {\n                                        fakeFieldPolicy.replace(dynamicHint);\n                                    },\n                                    cacheHint: fakeFieldPolicy,\n                                    cacheHintFromType: memoizedCacheAnnotationFromType,\n                                };\n                            },\n                        };\n                    }\n                    return {\n                        willResolveField({ info }) {\n                            const fieldPolicy = (0, cachePolicy_1.newCachePolicy)();\n                            let inheritMaxAge = false;\n                            const targetType = (0, graphql_1.getNamedType)(info.returnType);\n                            if ((0, graphql_1.isCompositeType)(targetType)) {\n                                const typeAnnotation = memoizedCacheAnnotationFromType(targetType);\n                                fieldPolicy.replace(typeAnnotation);\n                                inheritMaxAge = !!typeAnnotation.inheritMaxAge;\n                            }\n                            const fieldAnnotation = memoizedCacheAnnotationFromField(info.parentType.getFields()[info.fieldName]);\n                            if (fieldAnnotation.inheritMaxAge &&\n                                fieldPolicy.maxAge === undefined) {\n                                inheritMaxAge = true;\n                                if (fieldAnnotation.scope) {\n                                    fieldPolicy.replace({ scope: fieldAnnotation.scope });\n                                }\n                            }\n                            else {\n                                fieldPolicy.replace(fieldAnnotation);\n                            }\n                            info.cacheControl = {\n                                setCacheHint: (dynamicHint) => {\n                                    fieldPolicy.replace(dynamicHint);\n                                },\n                                cacheHint: fieldPolicy,\n                                cacheHintFromType: memoizedCacheAnnotationFromType,\n                            };\n                            return () => {\n                                if (fieldPolicy.maxAge === undefined &&\n                                    (((0, graphql_1.isCompositeType)(targetType) && !inheritMaxAge) ||\n                                        !info.path.prev)) {\n                                    fieldPolicy.restrict({ maxAge: defaultMaxAge });\n                                }\n                                if (__testing__cacheHints && isRestricted(fieldPolicy)) {\n                                    const path = (0, graphql_1.responsePathAsArray)(info.path).join('.');\n                                    if (__testing__cacheHints.has(path)) {\n                                        throw Error(\"shouldn't happen: addHint should only be called once per path\");\n                                    }\n                                    __testing__cacheHints.set(path, {\n                                        maxAge: fieldPolicy.maxAge,\n                                        scope: fieldPolicy.scope,\n                                    });\n                                }\n                                requestContext.overallCachePolicy.restrict(fieldPolicy);\n                            };\n                        },\n                    };\n                },\n                async willSendResponse(requestContext) {\n                    const { response, overallCachePolicy, requestIsBatched } = requestContext;\n                    const policyIfCacheable = overallCachePolicy.policyIfCacheable();\n                    if (calculateHttpHeaders &&\n                        policyIfCacheable &&\n                        !response.errors &&\n                        response.http &&\n                        !requestIsBatched) {\n                        response.http.headers.set('Cache-Control', `max-age=${policyIfCacheable.maxAge}, ${policyIfCacheable.scope.toLowerCase()}`);\n                    }\n                },\n            };\n        },\n    };\n}\nexports.ApolloServerPluginCacheControl = ApolloServerPluginCacheControl;\nfunction cacheAnnotationFromDirectives(directives) {\n    var _a, _b, _c;\n    if (!directives)\n        return undefined;\n    const cacheControlDirective = directives.find((directive) => directive.name.value === 'cacheControl');\n    if (!cacheControlDirective)\n        return undefined;\n    if (!cacheControlDirective.arguments)\n        return undefined;\n    const maxAgeArgument = cacheControlDirective.arguments.find((argument) => argument.name.value === 'maxAge');\n    const scopeArgument = cacheControlDirective.arguments.find((argument) => argument.name.value === 'scope');\n    const inheritMaxAgeArgument = cacheControlDirective.arguments.find((argument) => argument.name.value === 'inheritMaxAge');\n    const scope = ((_a = scopeArgument === null || scopeArgument === void 0 ? void 0 : scopeArgument.value) === null || _a === void 0 ? void 0 : _a.kind) === 'EnumValue'\n        ? scopeArgument.value.value\n        : undefined;\n    if (((_b = inheritMaxAgeArgument === null || inheritMaxAgeArgument === void 0 ? void 0 : inheritMaxAgeArgument.value) === null || _b === void 0 ? void 0 : _b.kind) === 'BooleanValue' &&\n        inheritMaxAgeArgument.value.value) {\n        return { inheritMaxAge: true, scope };\n    }\n    return {\n        maxAge: ((_c = maxAgeArgument === null || maxAgeArgument === void 0 ? void 0 : maxAgeArgument.value) === null || _c === void 0 ? void 0 : _c.kind) === 'IntValue'\n            ? parseInt(maxAgeArgument.value.value)\n            : undefined,\n        scope,\n    };\n}\nfunction cacheAnnotationFromType(t) {\n    if (t.astNode) {\n        const hint = cacheAnnotationFromDirectives(t.astNode.directives);\n        if (hint) {\n            return hint;\n        }\n    }\n    if (t.extensionASTNodes) {\n        for (const node of t.extensionASTNodes) {\n            const hint = cacheAnnotationFromDirectives(node.directives);\n            if (hint) {\n                return hint;\n            }\n        }\n    }\n    return {};\n}\nfunction cacheAnnotationFromField(field) {\n    if (field.astNode) {\n        const hint = cacheAnnotationFromDirectives(field.astNode.directives);\n        if (hint) {\n            return hint;\n        }\n    }\n    return {};\n}\nfunction isRestricted(hint) {\n    return hint.maxAge !== undefined || hint.scope !== undefined;\n}\nfunction ApolloServerPluginCacheControlDisabled() {\n    return {\n        __internal_plugin_id__() {\n            return 'CacheControl';\n        },\n    };\n}\nexports.ApolloServerPluginCacheControlDisabled = ApolloServerPluginCacheControlDisabled;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL2NhY2hlQ29udHJvbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhDQUE4QyxHQUFHLHNDQUFzQztBQUN2RixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyxzQkFBc0IsbUJBQU8sQ0FBQyxzRkFBbUI7QUFDakQsb0NBQW9DLG1CQUFPLENBQUMsMEZBQVc7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULGdDQUFnQyxRQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3QkFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxNQUFNO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLE1BQU07QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsOEJBQThCO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsdUJBQXVCO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSw0QkFBNEIsaURBQWlEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSx5QkFBeUIsSUFBSSxzQ0FBc0M7QUFDako7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDhDQUE4QztBQUM5QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXHBsdWdpblxcY2FjaGVDb250cm9sXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXBvbGxvU2VydmVyUGx1Z2luQ2FjaGVDb250cm9sRGlzYWJsZWQgPSBleHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkNhY2hlQ29udHJvbCA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgY2FjaGVQb2xpY3lfMSA9IHJlcXVpcmUoXCIuLi8uLi9jYWNoZVBvbGljeVwiKTtcbmNvbnN0IGxydV9jYWNoZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJscnUtY2FjaGVcIikpO1xuZnVuY3Rpb24gQXBvbGxvU2VydmVyUGx1Z2luQ2FjaGVDb250cm9sKG9wdGlvbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpKSB7XG4gICAgY29uc3QgdHlwZUFubm90YXRpb25DYWNoZSA9IG5ldyBscnVfY2FjaGVfMS5kZWZhdWx0KCk7XG4gICAgY29uc3QgZmllbGRBbm5vdGF0aW9uQ2FjaGUgPSBuZXcgbHJ1X2NhY2hlXzEuZGVmYXVsdCgpO1xuICAgIGZ1bmN0aW9uIG1lbW9pemVkQ2FjaGVBbm5vdGF0aW9uRnJvbVR5cGUodCkge1xuICAgICAgICBjb25zdCBleGlzdGluZyA9IHR5cGVBbm5vdGF0aW9uQ2FjaGUuZ2V0KHQpO1xuICAgICAgICBpZiAoZXhpc3RpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiBleGlzdGluZztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhbm5vdGF0aW9uID0gY2FjaGVBbm5vdGF0aW9uRnJvbVR5cGUodCk7XG4gICAgICAgIHR5cGVBbm5vdGF0aW9uQ2FjaGUuc2V0KHQsIGFubm90YXRpb24pO1xuICAgICAgICByZXR1cm4gYW5ub3RhdGlvbjtcbiAgICB9XG4gICAgZnVuY3Rpb24gbWVtb2l6ZWRDYWNoZUFubm90YXRpb25Gcm9tRmllbGQoZmllbGQpIHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmcgPSBmaWVsZEFubm90YXRpb25DYWNoZS5nZXQoZmllbGQpO1xuICAgICAgICBpZiAoZXhpc3RpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiBleGlzdGluZztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhbm5vdGF0aW9uID0gY2FjaGVBbm5vdGF0aW9uRnJvbUZpZWxkKGZpZWxkKTtcbiAgICAgICAgZmllbGRBbm5vdGF0aW9uQ2FjaGUuc2V0KGZpZWxkLCBhbm5vdGF0aW9uKTtcbiAgICAgICAgcmV0dXJuIGFubm90YXRpb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIF9faW50ZXJuYWxfcGx1Z2luX2lkX18oKSB7XG4gICAgICAgICAgICByZXR1cm4gJ0NhY2hlQ29udHJvbCc7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIHNlcnZlcldpbGxTdGFydCh7IHNjaGVtYSB9KSB7XG4gICAgICAgICAgICB0eXBlQW5ub3RhdGlvbkNhY2hlLm1heCA9IE9iamVjdC52YWx1ZXMoc2NoZW1hLmdldFR5cGVNYXAoKSkuZmlsdGVyKGdyYXBocWxfMS5pc0NvbXBvc2l0ZVR5cGUpLmxlbmd0aDtcbiAgICAgICAgICAgIGZpZWxkQW5ub3RhdGlvbkNhY2hlLm1heCA9XG4gICAgICAgICAgICAgICAgT2JqZWN0LnZhbHVlcyhzY2hlbWEuZ2V0VHlwZU1hcCgpKVxuICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKGdyYXBocWxfMS5pc09iamVjdFR5cGUpXG4gICAgICAgICAgICAgICAgICAgIC5mbGF0TWFwKCh0KSA9PiBPYmplY3QudmFsdWVzKHQuZ2V0RmllbGRzKCkpKS5sZW5ndGggK1xuICAgICAgICAgICAgICAgICAgICBPYmplY3QudmFsdWVzKHNjaGVtYS5nZXRUeXBlTWFwKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKGdyYXBocWxfMS5pc0ludGVyZmFjZVR5cGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAuZmxhdE1hcCgodCkgPT4gT2JqZWN0LnZhbHVlcyh0LmdldEZpZWxkcygpKSkubGVuZ3RoO1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgcmVxdWVzdERpZFN0YXJ0KHJlcXVlc3RDb250ZXh0KSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgY29uc3QgZGVmYXVsdE1heEFnZSA9IChfYSA9IG9wdGlvbnMuZGVmYXVsdE1heEFnZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogMDtcbiAgICAgICAgICAgIGNvbnN0IGNhbGN1bGF0ZUh0dHBIZWFkZXJzID0gKF9iID0gb3B0aW9ucy5jYWxjdWxhdGVIdHRwSGVhZGVycykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogdHJ1ZTtcbiAgICAgICAgICAgIGNvbnN0IHsgX190ZXN0aW5nX19jYWNoZUhpbnRzIH0gPSBvcHRpb25zO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhc3luYyBleGVjdXRpb25EaWRTdGFydCgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzUmVzdHJpY3RlZChyZXF1ZXN0Q29udGV4dC5vdmVyYWxsQ2FjaGVQb2xpY3kpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmYWtlRmllbGRQb2xpY3kgPSAoMCwgY2FjaGVQb2xpY3lfMS5uZXdDYWNoZVBvbGljeSkoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lsbFJlc29sdmVGaWVsZCh7IGluZm8gfSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmZvLmNhY2hlQ29udHJvbCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldENhY2hlSGludDogKGR5bmFtaWNIaW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFrZUZpZWxkUG9saWN5LnJlcGxhY2UoZHluYW1pY0hpbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlSGludDogZmFrZUZpZWxkUG9saWN5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVIaW50RnJvbVR5cGU6IG1lbW9pemVkQ2FjaGVBbm5vdGF0aW9uRnJvbVR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbGxSZXNvbHZlRmllbGQoeyBpbmZvIH0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZFBvbGljeSA9ICgwLCBjYWNoZVBvbGljeV8xLm5ld0NhY2hlUG9saWN5KSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBpbmhlcml0TWF4QWdlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0VHlwZSA9ICgwLCBncmFwaHFsXzEuZ2V0TmFtZWRUeXBlKShpbmZvLnJldHVyblR5cGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoMCwgZ3JhcGhxbF8xLmlzQ29tcG9zaXRlVHlwZSkodGFyZ2V0VHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdHlwZUFubm90YXRpb24gPSBtZW1vaXplZENhY2hlQW5ub3RhdGlvbkZyb21UeXBlKHRhcmdldFR5cGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZFBvbGljeS5yZXBsYWNlKHR5cGVBbm5vdGF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5oZXJpdE1heEFnZSA9ICEhdHlwZUFubm90YXRpb24uaW5oZXJpdE1heEFnZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGRBbm5vdGF0aW9uID0gbWVtb2l6ZWRDYWNoZUFubm90YXRpb25Gcm9tRmllbGQoaW5mby5wYXJlbnRUeXBlLmdldEZpZWxkcygpW2luZm8uZmllbGROYW1lXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkQW5ub3RhdGlvbi5pbmhlcml0TWF4QWdlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkUG9saWN5Lm1heEFnZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaGVyaXRNYXhBZ2UgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGRBbm5vdGF0aW9uLnNjb3BlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZFBvbGljeS5yZXBsYWNlKHsgc2NvcGU6IGZpZWxkQW5ub3RhdGlvbi5zY29wZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRQb2xpY3kucmVwbGFjZShmaWVsZEFubm90YXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmZvLmNhY2hlQ29udHJvbCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q2FjaGVIaW50OiAoZHluYW1pY0hpbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkUG9saWN5LnJlcGxhY2UoZHluYW1pY0hpbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUhpbnQ6IGZpZWxkUG9saWN5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUhpbnRGcm9tVHlwZTogbWVtb2l6ZWRDYWNoZUFubm90YXRpb25Gcm9tVHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZFBvbGljeS5tYXhBZ2UgPT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKCgoMCwgZ3JhcGhxbF8xLmlzQ29tcG9zaXRlVHlwZSkodGFyZ2V0VHlwZSkgJiYgIWluaGVyaXRNYXhBZ2UpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIWluZm8ucGF0aC5wcmV2KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRQb2xpY3kucmVzdHJpY3QoeyBtYXhBZ2U6IGRlZmF1bHRNYXhBZ2UgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF9fdGVzdGluZ19fY2FjaGVIaW50cyAmJiBpc1Jlc3RyaWN0ZWQoZmllbGRQb2xpY3kpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXRoID0gKDAsIGdyYXBocWxfMS5yZXNwb25zZVBhdGhBc0FycmF5KShpbmZvLnBhdGgpLmpvaW4oJy4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfX3Rlc3RpbmdfX2NhY2hlSGludHMuaGFzKHBhdGgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJzaG91bGRuJ3QgaGFwcGVuOiBhZGRIaW50IHNob3VsZCBvbmx5IGJlIGNhbGxlZCBvbmNlIHBlciBwYXRoXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX190ZXN0aW5nX19jYWNoZUhpbnRzLnNldChwYXRoLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4QWdlOiBmaWVsZFBvbGljeS5tYXhBZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NvcGU6IGZpZWxkUG9saWN5LnNjb3BlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdENvbnRleHQub3ZlcmFsbENhY2hlUG9saWN5LnJlc3RyaWN0KGZpZWxkUG9saWN5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGFzeW5jIHdpbGxTZW5kUmVzcG9uc2UocmVxdWVzdENvbnRleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyByZXNwb25zZSwgb3ZlcmFsbENhY2hlUG9saWN5LCByZXF1ZXN0SXNCYXRjaGVkIH0gPSByZXF1ZXN0Q29udGV4dDtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcG9saWN5SWZDYWNoZWFibGUgPSBvdmVyYWxsQ2FjaGVQb2xpY3kucG9saWN5SWZDYWNoZWFibGUoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGN1bGF0ZUh0dHBIZWFkZXJzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBwb2xpY3lJZkNhY2hlYWJsZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgIXJlc3BvbnNlLmVycm9ycyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UuaHR0cCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgIXJlcXVlc3RJc0JhdGNoZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLmh0dHAuaGVhZGVycy5zZXQoJ0NhY2hlLUNvbnRyb2wnLCBgbWF4LWFnZT0ke3BvbGljeUlmQ2FjaGVhYmxlLm1heEFnZX0sICR7cG9saWN5SWZDYWNoZWFibGUuc2NvcGUudG9Mb3dlckNhc2UoKX1gKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkNhY2hlQ29udHJvbCA9IEFwb2xsb1NlcnZlclBsdWdpbkNhY2hlQ29udHJvbDtcbmZ1bmN0aW9uIGNhY2hlQW5ub3RhdGlvbkZyb21EaXJlY3RpdmVzKGRpcmVjdGl2ZXMpIHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBpZiAoIWRpcmVjdGl2ZXMpXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgY29uc3QgY2FjaGVDb250cm9sRGlyZWN0aXZlID0gZGlyZWN0aXZlcy5maW5kKChkaXJlY3RpdmUpID0+IGRpcmVjdGl2ZS5uYW1lLnZhbHVlID09PSAnY2FjaGVDb250cm9sJyk7XG4gICAgaWYgKCFjYWNoZUNvbnRyb2xEaXJlY3RpdmUpXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgaWYgKCFjYWNoZUNvbnRyb2xEaXJlY3RpdmUuYXJndW1lbnRzKVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGNvbnN0IG1heEFnZUFyZ3VtZW50ID0gY2FjaGVDb250cm9sRGlyZWN0aXZlLmFyZ3VtZW50cy5maW5kKChhcmd1bWVudCkgPT4gYXJndW1lbnQubmFtZS52YWx1ZSA9PT0gJ21heEFnZScpO1xuICAgIGNvbnN0IHNjb3BlQXJndW1lbnQgPSBjYWNoZUNvbnRyb2xEaXJlY3RpdmUuYXJndW1lbnRzLmZpbmQoKGFyZ3VtZW50KSA9PiBhcmd1bWVudC5uYW1lLnZhbHVlID09PSAnc2NvcGUnKTtcbiAgICBjb25zdCBpbmhlcml0TWF4QWdlQXJndW1lbnQgPSBjYWNoZUNvbnRyb2xEaXJlY3RpdmUuYXJndW1lbnRzLmZpbmQoKGFyZ3VtZW50KSA9PiBhcmd1bWVudC5uYW1lLnZhbHVlID09PSAnaW5oZXJpdE1heEFnZScpO1xuICAgIGNvbnN0IHNjb3BlID0gKChfYSA9IHNjb3BlQXJndW1lbnQgPT09IG51bGwgfHwgc2NvcGVBcmd1bWVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2NvcGVBcmd1bWVudC52YWx1ZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmtpbmQpID09PSAnRW51bVZhbHVlJ1xuICAgICAgICA/IHNjb3BlQXJndW1lbnQudmFsdWUudmFsdWVcbiAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgaWYgKCgoX2IgPSBpbmhlcml0TWF4QWdlQXJndW1lbnQgPT09IG51bGwgfHwgaW5oZXJpdE1heEFnZUFyZ3VtZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbmhlcml0TWF4QWdlQXJndW1lbnQudmFsdWUpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5raW5kKSA9PT0gJ0Jvb2xlYW5WYWx1ZScgJiZcbiAgICAgICAgaW5oZXJpdE1heEFnZUFyZ3VtZW50LnZhbHVlLnZhbHVlKSB7XG4gICAgICAgIHJldHVybiB7IGluaGVyaXRNYXhBZ2U6IHRydWUsIHNjb3BlIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG1heEFnZTogKChfYyA9IG1heEFnZUFyZ3VtZW50ID09PSBudWxsIHx8IG1heEFnZUFyZ3VtZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXhBZ2VBcmd1bWVudC52YWx1ZSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmtpbmQpID09PSAnSW50VmFsdWUnXG4gICAgICAgICAgICA/IHBhcnNlSW50KG1heEFnZUFyZ3VtZW50LnZhbHVlLnZhbHVlKVxuICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgIHNjb3BlLFxuICAgIH07XG59XG5mdW5jdGlvbiBjYWNoZUFubm90YXRpb25Gcm9tVHlwZSh0KSB7XG4gICAgaWYgKHQuYXN0Tm9kZSkge1xuICAgICAgICBjb25zdCBoaW50ID0gY2FjaGVBbm5vdGF0aW9uRnJvbURpcmVjdGl2ZXModC5hc3ROb2RlLmRpcmVjdGl2ZXMpO1xuICAgICAgICBpZiAoaGludCkge1xuICAgICAgICAgICAgcmV0dXJuIGhpbnQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHQuZXh0ZW5zaW9uQVNUTm9kZXMpIHtcbiAgICAgICAgZm9yIChjb25zdCBub2RlIG9mIHQuZXh0ZW5zaW9uQVNUTm9kZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IGhpbnQgPSBjYWNoZUFubm90YXRpb25Gcm9tRGlyZWN0aXZlcyhub2RlLmRpcmVjdGl2ZXMpO1xuICAgICAgICAgICAgaWYgKGhpbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaGludDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge307XG59XG5mdW5jdGlvbiBjYWNoZUFubm90YXRpb25Gcm9tRmllbGQoZmllbGQpIHtcbiAgICBpZiAoZmllbGQuYXN0Tm9kZSkge1xuICAgICAgICBjb25zdCBoaW50ID0gY2FjaGVBbm5vdGF0aW9uRnJvbURpcmVjdGl2ZXMoZmllbGQuYXN0Tm9kZS5kaXJlY3RpdmVzKTtcbiAgICAgICAgaWYgKGhpbnQpIHtcbiAgICAgICAgICAgIHJldHVybiBoaW50O1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7fTtcbn1cbmZ1bmN0aW9uIGlzUmVzdHJpY3RlZChoaW50KSB7XG4gICAgcmV0dXJuIGhpbnQubWF4QWdlICE9PSB1bmRlZmluZWQgfHwgaGludC5zY29wZSAhPT0gdW5kZWZpbmVkO1xufVxuZnVuY3Rpb24gQXBvbGxvU2VydmVyUGx1Z2luQ2FjaGVDb250cm9sRGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgX19pbnRlcm5hbF9wbHVnaW5faWRfXygpIHtcbiAgICAgICAgICAgIHJldHVybiAnQ2FjaGVDb250cm9sJztcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5DYWNoZUNvbnRyb2xEaXNhYmxlZCA9IEFwb2xsb1NlcnZlclBsdWdpbkNhY2hlQ29udHJvbERpc2FibGVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/cacheControl/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/drainHttpServer/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/drainHttpServer/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApolloServerPluginDrainHttpServer = void 0;\nconst stoppable_1 = __webpack_require__(/*! ./stoppable */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/drainHttpServer/stoppable.js\");\nfunction ApolloServerPluginDrainHttpServer(options) {\n    const stopper = new stoppable_1.Stopper(options.httpServer);\n    return {\n        async serverWillStart() {\n            return {\n                async drainServer() {\n                    var _a;\n                    await stopper.stop((_a = options.stopGracePeriodMillis) !== null && _a !== void 0 ? _a : 10000);\n                },\n            };\n        },\n    };\n}\nexports.ApolloServerPluginDrainHttpServer = ApolloServerPluginDrainHttpServer;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL2RyYWluSHR0cFNlcnZlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5Q0FBeUM7QUFDekMsb0JBQW9CLG1CQUFPLENBQUMscUdBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcZGlzdFxccGx1Z2luXFxkcmFpbkh0dHBTZXJ2ZXJcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5EcmFpbkh0dHBTZXJ2ZXIgPSB2b2lkIDA7XG5jb25zdCBzdG9wcGFibGVfMSA9IHJlcXVpcmUoXCIuL3N0b3BwYWJsZVwiKTtcbmZ1bmN0aW9uIEFwb2xsb1NlcnZlclBsdWdpbkRyYWluSHR0cFNlcnZlcihvcHRpb25zKSB7XG4gICAgY29uc3Qgc3RvcHBlciA9IG5ldyBzdG9wcGFibGVfMS5TdG9wcGVyKG9wdGlvbnMuaHR0cFNlcnZlcik7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYXN5bmMgc2VydmVyV2lsbFN0YXJ0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhc3luYyBkcmFpblNlcnZlcigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCBzdG9wcGVyLnN0b3AoKF9hID0gb3B0aW9ucy5zdG9wR3JhY2VQZXJpb2RNaWxsaXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IDEwMDAwKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5EcmFpbkh0dHBTZXJ2ZXIgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5EcmFpbkh0dHBTZXJ2ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/drainHttpServer/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/drainHttpServer/stoppable.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/drainHttpServer/stoppable.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Stopper = void 0;\nconst https_1 = __importDefault(__webpack_require__(/*! https */ \"https\"));\nclass Stopper {\n    constructor(server) {\n        this.server = server;\n        this.requestCountPerSocket = new Map();\n        this.stopped = false;\n        server.on(server instanceof https_1.default.Server ? 'secureConnection' : 'connection', (socket) => {\n            this.requestCountPerSocket.set(socket, 0);\n            socket.once('close', () => this.requestCountPerSocket.delete(socket));\n        });\n        server.on('request', (req, res) => {\n            var _a;\n            this.requestCountPerSocket.set(req.socket, ((_a = this.requestCountPerSocket.get(req.socket)) !== null && _a !== void 0 ? _a : 0) + 1);\n            res.once('finish', () => {\n                var _a;\n                const pending = ((_a = this.requestCountPerSocket.get(req.socket)) !== null && _a !== void 0 ? _a : 0) - 1;\n                this.requestCountPerSocket.set(req.socket, pending);\n                if (this.stopped && pending === 0) {\n                    req.socket.end();\n                }\n            });\n        });\n    }\n    async stop(stopGracePeriodMillis = Infinity) {\n        let gracefully = true;\n        await new Promise((resolve) => setImmediate(resolve));\n        this.stopped = true;\n        let timeout = null;\n        if (stopGracePeriodMillis < Infinity) {\n            timeout = setTimeout(() => {\n                gracefully = false;\n                this.requestCountPerSocket.forEach((_, socket) => socket.end());\n                setImmediate(() => {\n                    this.requestCountPerSocket.forEach((_, socket) => socket.destroy());\n                });\n            }, stopGracePeriodMillis);\n        }\n        const closePromise = new Promise((resolve) => this.server.close(() => {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            resolve();\n        }));\n        this.requestCountPerSocket.forEach((requests, socket) => {\n            if (requests === 0)\n                socket.end();\n        });\n        await closePromise;\n        return gracefully;\n    }\n}\nexports.Stopper = Stopper;\n//# sourceMappingURL=stoppable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL2RyYWluSHR0cFNlcnZlci9zdG9wcGFibGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZ0NBQWdDLG1CQUFPLENBQUMsb0JBQU87QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFxwbHVnaW5cXGRyYWluSHR0cFNlcnZlclxcc3RvcHBhYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdG9wcGVyID0gdm9pZCAwO1xuY29uc3QgaHR0cHNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiaHR0cHNcIikpO1xuY2xhc3MgU3RvcHBlciB7XG4gICAgY29uc3RydWN0b3Ioc2VydmVyKSB7XG4gICAgICAgIHRoaXMuc2VydmVyID0gc2VydmVyO1xuICAgICAgICB0aGlzLnJlcXVlc3RDb3VudFBlclNvY2tldCA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5zdG9wcGVkID0gZmFsc2U7XG4gICAgICAgIHNlcnZlci5vbihzZXJ2ZXIgaW5zdGFuY2VvZiBodHRwc18xLmRlZmF1bHQuU2VydmVyID8gJ3NlY3VyZUNvbm5lY3Rpb24nIDogJ2Nvbm5lY3Rpb24nLCAoc29ja2V0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3RDb3VudFBlclNvY2tldC5zZXQoc29ja2V0LCAwKTtcbiAgICAgICAgICAgIHNvY2tldC5vbmNlKCdjbG9zZScsICgpID0+IHRoaXMucmVxdWVzdENvdW50UGVyU29ja2V0LmRlbGV0ZShzb2NrZXQpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNlcnZlci5vbigncmVxdWVzdCcsIChyZXEsIHJlcykgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0Q291bnRQZXJTb2NrZXQuc2V0KHJlcS5zb2NrZXQsICgoX2EgPSB0aGlzLnJlcXVlc3RDb3VudFBlclNvY2tldC5nZXQocmVxLnNvY2tldCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IDApICsgMSk7XG4gICAgICAgICAgICByZXMub25jZSgnZmluaXNoJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBjb25zdCBwZW5kaW5nID0gKChfYSA9IHRoaXMucmVxdWVzdENvdW50UGVyU29ja2V0LmdldChyZXEuc29ja2V0KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogMCkgLSAxO1xuICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdENvdW50UGVyU29ja2V0LnNldChyZXEuc29ja2V0LCBwZW5kaW5nKTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdG9wcGVkICYmIHBlbmRpbmcgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmVxLnNvY2tldC5lbmQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jIHN0b3Aoc3RvcEdyYWNlUGVyaW9kTWlsbGlzID0gSW5maW5pdHkpIHtcbiAgICAgICAgbGV0IGdyYWNlZnVsbHkgPSB0cnVlO1xuICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0SW1tZWRpYXRlKHJlc29sdmUpKTtcbiAgICAgICAgdGhpcy5zdG9wcGVkID0gdHJ1ZTtcbiAgICAgICAgbGV0IHRpbWVvdXQgPSBudWxsO1xuICAgICAgICBpZiAoc3RvcEdyYWNlUGVyaW9kTWlsbGlzIDwgSW5maW5pdHkpIHtcbiAgICAgICAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBncmFjZWZ1bGx5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0Q291bnRQZXJTb2NrZXQuZm9yRWFjaCgoXywgc29ja2V0KSA9PiBzb2NrZXQuZW5kKCkpO1xuICAgICAgICAgICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdENvdW50UGVyU29ja2V0LmZvckVhY2goKF8sIHNvY2tldCkgPT4gc29ja2V0LmRlc3Ryb3koKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCBzdG9wR3JhY2VQZXJpb2RNaWxsaXMpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNsb3NlUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB0aGlzLnNlcnZlci5jbG9zZSgoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGltZW91dCkge1xuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgICAgICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgfSkpO1xuICAgICAgICB0aGlzLnJlcXVlc3RDb3VudFBlclNvY2tldC5mb3JFYWNoKChyZXF1ZXN0cywgc29ja2V0KSA9PiB7XG4gICAgICAgICAgICBpZiAocmVxdWVzdHMgPT09IDApXG4gICAgICAgICAgICAgICAgc29ja2V0LmVuZCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgYXdhaXQgY2xvc2VQcm9taXNlO1xuICAgICAgICByZXR1cm4gZ3JhY2VmdWxseTtcbiAgICB9XG59XG5leHBvcnRzLlN0b3BwZXIgPSBTdG9wcGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RvcHBhYmxlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/drainHttpServer/stoppable.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApolloServerPluginLandingPageGraphQLPlayground = exports.ApolloServerPluginLandingPageProductionDefault = exports.ApolloServerPluginLandingPageLocalDefault = exports.ApolloServerPluginLandingPageDisabled = exports.ApolloServerPluginDrainHttpServer = exports.ApolloServerPluginCacheControlDisabled = exports.ApolloServerPluginCacheControl = exports.ApolloServerPluginInlineTraceDisabled = exports.ApolloServerPluginInlineTrace = exports.ApolloServerPluginSchemaReporting = exports.ApolloServerPluginUsageReportingDisabled = exports.ApolloServerPluginUsageReporting = void 0;\nfunction ApolloServerPluginUsageReporting(options = Object.create(null)) {\n    return (__webpack_require__(/*! ./usageReporting */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/index.js\").ApolloServerPluginUsageReporting)(options);\n}\nexports.ApolloServerPluginUsageReporting = ApolloServerPluginUsageReporting;\nfunction ApolloServerPluginUsageReportingDisabled() {\n    return (__webpack_require__(/*! ./usageReporting */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/index.js\").ApolloServerPluginUsageReportingDisabled)();\n}\nexports.ApolloServerPluginUsageReportingDisabled = ApolloServerPluginUsageReportingDisabled;\nfunction ApolloServerPluginSchemaReporting(options = Object.create(null)) {\n    return (__webpack_require__(/*! ./schemaReporting */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaReporting/index.js\").ApolloServerPluginSchemaReporting)(options);\n}\nexports.ApolloServerPluginSchemaReporting = ApolloServerPluginSchemaReporting;\nfunction ApolloServerPluginInlineTrace(options = Object.create(null)) {\n    return (__webpack_require__(/*! ./inlineTrace */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/inlineTrace/index.js\").ApolloServerPluginInlineTrace)(options);\n}\nexports.ApolloServerPluginInlineTrace = ApolloServerPluginInlineTrace;\nfunction ApolloServerPluginInlineTraceDisabled() {\n    return (__webpack_require__(/*! ./inlineTrace */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/inlineTrace/index.js\").ApolloServerPluginInlineTraceDisabled)();\n}\nexports.ApolloServerPluginInlineTraceDisabled = ApolloServerPluginInlineTraceDisabled;\nfunction ApolloServerPluginCacheControl(options = Object.create(null)) {\n    return (__webpack_require__(/*! ./cacheControl */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/cacheControl/index.js\").ApolloServerPluginCacheControl)(options);\n}\nexports.ApolloServerPluginCacheControl = ApolloServerPluginCacheControl;\nfunction ApolloServerPluginCacheControlDisabled() {\n    return (__webpack_require__(/*! ./cacheControl */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/cacheControl/index.js\").ApolloServerPluginCacheControlDisabled)();\n}\nexports.ApolloServerPluginCacheControlDisabled = ApolloServerPluginCacheControlDisabled;\nfunction ApolloServerPluginDrainHttpServer(options) {\n    return (__webpack_require__(/*! ./drainHttpServer */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/drainHttpServer/index.js\").ApolloServerPluginDrainHttpServer)(options);\n}\nexports.ApolloServerPluginDrainHttpServer = ApolloServerPluginDrainHttpServer;\nfunction ApolloServerPluginLandingPageDisabled() {\n    const plugin = {\n        __internal_plugin_id__() {\n            return 'LandingPageDisabled';\n        },\n    };\n    return plugin;\n}\nexports.ApolloServerPluginLandingPageDisabled = ApolloServerPluginLandingPageDisabled;\nfunction ApolloServerPluginLandingPageLocalDefault(options) {\n    return (__webpack_require__(/*! ./landingPage/default */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/landingPage/default/index.js\").ApolloServerPluginLandingPageLocalDefault)(options);\n}\nexports.ApolloServerPluginLandingPageLocalDefault = ApolloServerPluginLandingPageLocalDefault;\nfunction ApolloServerPluginLandingPageProductionDefault(options) {\n    return (__webpack_require__(/*! ./landingPage/default */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/landingPage/default/index.js\").ApolloServerPluginLandingPageProductionDefault)(options);\n}\nexports.ApolloServerPluginLandingPageProductionDefault = ApolloServerPluginLandingPageProductionDefault;\nfunction ApolloServerPluginLandingPageGraphQLPlayground(options = Object.create(null)) {\n    return (__webpack_require__(/*! ./landingPage/graphqlPlayground */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/landingPage/graphqlPlayground/index.js\").ApolloServerPluginLandingPageGraphQLPlayground)(options);\n}\nexports.ApolloServerPluginLandingPageGraphQLPlayground = ApolloServerPluginLandingPageGraphQLPlayground;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNEQUFzRCxHQUFHLHNEQUFzRCxHQUFHLGlEQUFpRCxHQUFHLDZDQUE2QyxHQUFHLHlDQUF5QyxHQUFHLDhDQUE4QyxHQUFHLHNDQUFzQyxHQUFHLDZDQUE2QyxHQUFHLHFDQUFxQyxHQUFHLHlDQUF5QyxHQUFHLGdEQUFnRCxHQUFHLHdDQUF3QztBQUMzakI7QUFDQSxXQUFXLDZKQUE0RDtBQUN2RTtBQUNBLHdDQUF3QztBQUN4QztBQUNBLFdBQVcscUtBQW9FO0FBQy9FO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0EsV0FBVyxnS0FBOEQ7QUFDekU7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQSxXQUFXLG9KQUFzRDtBQUNqRTtBQUNBLHFDQUFxQztBQUNyQztBQUNBLFdBQVcsNEpBQThEO0FBQ3pFO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsV0FBVyx1SkFBd0Q7QUFDbkU7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQSxXQUFXLCtKQUFnRTtBQUMzRTtBQUNBLDhDQUE4QztBQUM5QztBQUNBLFdBQVcsZ0tBQThEO0FBQ3pFO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLFdBQVcsZ0xBQTBFO0FBQ3JGO0FBQ0EsaURBQWlEO0FBQ2pEO0FBQ0EsV0FBVyxxTEFBK0U7QUFDMUY7QUFDQSxzREFBc0Q7QUFDdEQ7QUFDQSxXQUFXLHlNQUF5RjtBQUNwRztBQUNBLHNEQUFzRDtBQUN0RCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXHBsdWdpblxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlR3JhcGhRTFBsYXlncm91bmQgPSBleHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlUHJvZHVjdGlvbkRlZmF1bHQgPSBleHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlTG9jYWxEZWZhdWx0ID0gZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5MYW5kaW5nUGFnZURpc2FibGVkID0gZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5EcmFpbkh0dHBTZXJ2ZXIgPSBleHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkNhY2hlQ29udHJvbERpc2FibGVkID0gZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5DYWNoZUNvbnRyb2wgPSBleHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbklubGluZVRyYWNlRGlzYWJsZWQgPSBleHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbklubGluZVRyYWNlID0gZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5TY2hlbWFSZXBvcnRpbmcgPSBleHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nRGlzYWJsZWQgPSBleHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nID0gdm9pZCAwO1xuZnVuY3Rpb24gQXBvbGxvU2VydmVyUGx1Z2luVXNhZ2VSZXBvcnRpbmcob3B0aW9ucyA9IE9iamVjdC5jcmVhdGUobnVsbCkpIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi91c2FnZVJlcG9ydGluZycpLkFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nKG9wdGlvbnMpO1xufVxuZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5Vc2FnZVJlcG9ydGluZyA9IEFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nO1xuZnVuY3Rpb24gQXBvbGxvU2VydmVyUGx1Z2luVXNhZ2VSZXBvcnRpbmdEaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi91c2FnZVJlcG9ydGluZycpLkFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nRGlzYWJsZWQoKTtcbn1cbmV4cG9ydHMuQXBvbGxvU2VydmVyUGx1Z2luVXNhZ2VSZXBvcnRpbmdEaXNhYmxlZCA9IEFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nRGlzYWJsZWQ7XG5mdW5jdGlvbiBBcG9sbG9TZXJ2ZXJQbHVnaW5TY2hlbWFSZXBvcnRpbmcob3B0aW9ucyA9IE9iamVjdC5jcmVhdGUobnVsbCkpIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9zY2hlbWFSZXBvcnRpbmcnKS5BcG9sbG9TZXJ2ZXJQbHVnaW5TY2hlbWFSZXBvcnRpbmcob3B0aW9ucyk7XG59XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpblNjaGVtYVJlcG9ydGluZyA9IEFwb2xsb1NlcnZlclBsdWdpblNjaGVtYVJlcG9ydGluZztcbmZ1bmN0aW9uIEFwb2xsb1NlcnZlclBsdWdpbklubGluZVRyYWNlKG9wdGlvbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpKSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vaW5saW5lVHJhY2UnKS5BcG9sbG9TZXJ2ZXJQbHVnaW5JbmxpbmVUcmFjZShvcHRpb25zKTtcbn1cbmV4cG9ydHMuQXBvbGxvU2VydmVyUGx1Z2luSW5saW5lVHJhY2UgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5JbmxpbmVUcmFjZTtcbmZ1bmN0aW9uIEFwb2xsb1NlcnZlclBsdWdpbklubGluZVRyYWNlRGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vaW5saW5lVHJhY2UnKS5BcG9sbG9TZXJ2ZXJQbHVnaW5JbmxpbmVUcmFjZURpc2FibGVkKCk7XG59XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbklubGluZVRyYWNlRGlzYWJsZWQgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5JbmxpbmVUcmFjZURpc2FibGVkO1xuZnVuY3Rpb24gQXBvbGxvU2VydmVyUGx1Z2luQ2FjaGVDb250cm9sKG9wdGlvbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpKSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY2FjaGVDb250cm9sJykuQXBvbGxvU2VydmVyUGx1Z2luQ2FjaGVDb250cm9sKG9wdGlvbnMpO1xufVxuZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5DYWNoZUNvbnRyb2wgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5DYWNoZUNvbnRyb2w7XG5mdW5jdGlvbiBBcG9sbG9TZXJ2ZXJQbHVnaW5DYWNoZUNvbnRyb2xEaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9jYWNoZUNvbnRyb2wnKS5BcG9sbG9TZXJ2ZXJQbHVnaW5DYWNoZUNvbnRyb2xEaXNhYmxlZCgpO1xufVxuZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5DYWNoZUNvbnRyb2xEaXNhYmxlZCA9IEFwb2xsb1NlcnZlclBsdWdpbkNhY2hlQ29udHJvbERpc2FibGVkO1xuZnVuY3Rpb24gQXBvbGxvU2VydmVyUGx1Z2luRHJhaW5IdHRwU2VydmVyKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9kcmFpbkh0dHBTZXJ2ZXInKS5BcG9sbG9TZXJ2ZXJQbHVnaW5EcmFpbkh0dHBTZXJ2ZXIob3B0aW9ucyk7XG59XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkRyYWluSHR0cFNlcnZlciA9IEFwb2xsb1NlcnZlclBsdWdpbkRyYWluSHR0cFNlcnZlcjtcbmZ1bmN0aW9uIEFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlRGlzYWJsZWQoKSB7XG4gICAgY29uc3QgcGx1Z2luID0ge1xuICAgICAgICBfX2ludGVybmFsX3BsdWdpbl9pZF9fKCkge1xuICAgICAgICAgICAgcmV0dXJuICdMYW5kaW5nUGFnZURpc2FibGVkJztcbiAgICAgICAgfSxcbiAgICB9O1xuICAgIHJldHVybiBwbHVnaW47XG59XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlRGlzYWJsZWQgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5MYW5kaW5nUGFnZURpc2FibGVkO1xuZnVuY3Rpb24gQXBvbGxvU2VydmVyUGx1Z2luTGFuZGluZ1BhZ2VMb2NhbERlZmF1bHQob3B0aW9ucykge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2xhbmRpbmdQYWdlL2RlZmF1bHQnKS5BcG9sbG9TZXJ2ZXJQbHVnaW5MYW5kaW5nUGFnZUxvY2FsRGVmYXVsdChvcHRpb25zKTtcbn1cbmV4cG9ydHMuQXBvbGxvU2VydmVyUGx1Z2luTGFuZGluZ1BhZ2VMb2NhbERlZmF1bHQgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5MYW5kaW5nUGFnZUxvY2FsRGVmYXVsdDtcbmZ1bmN0aW9uIEFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlUHJvZHVjdGlvbkRlZmF1bHQob3B0aW9ucykge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2xhbmRpbmdQYWdlL2RlZmF1bHQnKS5BcG9sbG9TZXJ2ZXJQbHVnaW5MYW5kaW5nUGFnZVByb2R1Y3Rpb25EZWZhdWx0KG9wdGlvbnMpO1xufVxuZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5MYW5kaW5nUGFnZVByb2R1Y3Rpb25EZWZhdWx0ID0gQXBvbGxvU2VydmVyUGx1Z2luTGFuZGluZ1BhZ2VQcm9kdWN0aW9uRGVmYXVsdDtcbmZ1bmN0aW9uIEFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlR3JhcGhRTFBsYXlncm91bmQob3B0aW9ucyA9IE9iamVjdC5jcmVhdGUobnVsbCkpIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9sYW5kaW5nUGFnZS9ncmFwaHFsUGxheWdyb3VuZCcpLkFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlR3JhcGhRTFBsYXlncm91bmQob3B0aW9ucyk7XG59XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlR3JhcGhRTFBsYXlncm91bmQgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5MYW5kaW5nUGFnZUdyYXBoUUxQbGF5Z3JvdW5kO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/inlineTrace/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/inlineTrace/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApolloServerPluginInlineTraceDisabled = exports.ApolloServerPluginInlineTrace = void 0;\nconst apollo_reporting_protobuf_1 = __webpack_require__(/*! apollo-reporting-protobuf */ \"(rsc)/./node_modules/apollo-reporting-protobuf/generated/index.js\");\nconst traceTreeBuilder_1 = __webpack_require__(/*! ../traceTreeBuilder */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/traceTreeBuilder.js\");\nconst schemaIsFederated_1 = __webpack_require__(/*! ../schemaIsFederated */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaIsFederated.js\");\nfunction ApolloServerPluginInlineTrace(options = Object.create(null)) {\n    let enabled = options.__onlyIfSchemaIsFederated ? null : true;\n    return {\n        __internal_plugin_id__() {\n            return 'InlineTrace';\n        },\n        async serverWillStart({ schema, logger }) {\n            if (enabled === null) {\n                enabled = (0, schemaIsFederated_1.schemaIsFederated)(schema);\n                if (enabled) {\n                    logger.info('Enabling inline tracing for this federated service. To disable, use ' +\n                        'ApolloServerPluginInlineTraceDisabled.');\n                }\n            }\n        },\n        async requestDidStart({ request: { http }, metrics }) {\n            if (!enabled) {\n                return;\n            }\n            const treeBuilder = new traceTreeBuilder_1.TraceTreeBuilder({\n                rewriteError: options.rewriteError,\n            });\n            if ((http === null || http === void 0 ? void 0 : http.headers.get('apollo-federation-include-trace')) !== 'ftv1') {\n                return;\n            }\n            if (metrics.captureTraces === false) {\n                return;\n            }\n            metrics.captureTraces = true;\n            treeBuilder.startTiming();\n            return {\n                async executionDidStart() {\n                    return {\n                        willResolveField({ info }) {\n                            return treeBuilder.willResolveField(info);\n                        },\n                    };\n                },\n                async didEncounterErrors({ errors }) {\n                    treeBuilder.didEncounterErrors(errors);\n                },\n                async willSendResponse({ response }) {\n                    treeBuilder.stopTiming();\n                    if (metrics.queryPlanTrace) {\n                        treeBuilder.trace.queryPlan = metrics.queryPlanTrace;\n                    }\n                    const encodedUint8Array = apollo_reporting_protobuf_1.Trace.encode(treeBuilder.trace).finish();\n                    const encodedBuffer = Buffer.from(encodedUint8Array, encodedUint8Array.byteOffset, encodedUint8Array.byteLength);\n                    const extensions = response.extensions || (response.extensions = Object.create(null));\n                    if (typeof extensions.ftv1 !== 'undefined') {\n                        throw new Error('The `ftv1` extension was already present.');\n                    }\n                    extensions.ftv1 = encodedBuffer.toString('base64');\n                },\n            };\n        },\n    };\n}\nexports.ApolloServerPluginInlineTrace = ApolloServerPluginInlineTrace;\nfunction ApolloServerPluginInlineTraceDisabled() {\n    return {\n        __internal_plugin_id__() {\n            return 'InlineTrace';\n        },\n    };\n}\nexports.ApolloServerPluginInlineTraceDisabled = ApolloServerPluginInlineTraceDisabled;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL2lubGluZVRyYWNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZDQUE2QyxHQUFHLHFDQUFxQztBQUNyRixvQ0FBb0MsbUJBQU8sQ0FBQyxvR0FBMkI7QUFDdkUsMkJBQTJCLG1CQUFPLENBQUMsb0dBQXFCO0FBQ3hELDRCQUE0QixtQkFBTyxDQUFDLHNHQUFzQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULGdDQUFnQyxnQkFBZ0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsZ0NBQWdDLFdBQVcsTUFBTSxXQUFXO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxNQUFNO0FBQ2pEO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EsaUJBQWlCO0FBQ2pCLDJDQUEyQyxRQUFRO0FBQ25EO0FBQ0EsaUJBQWlCO0FBQ2pCLHlDQUF5QyxVQUFVO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcZGlzdFxccGx1Z2luXFxpbmxpbmVUcmFjZVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbklubGluZVRyYWNlRGlzYWJsZWQgPSBleHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbklubGluZVRyYWNlID0gdm9pZCAwO1xuY29uc3QgYXBvbGxvX3JlcG9ydGluZ19wcm90b2J1Zl8xID0gcmVxdWlyZShcImFwb2xsby1yZXBvcnRpbmctcHJvdG9idWZcIik7XG5jb25zdCB0cmFjZVRyZWVCdWlsZGVyXzEgPSByZXF1aXJlKFwiLi4vdHJhY2VUcmVlQnVpbGRlclwiKTtcbmNvbnN0IHNjaGVtYUlzRmVkZXJhdGVkXzEgPSByZXF1aXJlKFwiLi4vc2NoZW1hSXNGZWRlcmF0ZWRcIik7XG5mdW5jdGlvbiBBcG9sbG9TZXJ2ZXJQbHVnaW5JbmxpbmVUcmFjZShvcHRpb25zID0gT2JqZWN0LmNyZWF0ZShudWxsKSkge1xuICAgIGxldCBlbmFibGVkID0gb3B0aW9ucy5fX29ubHlJZlNjaGVtYUlzRmVkZXJhdGVkID8gbnVsbCA6IHRydWU7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgX19pbnRlcm5hbF9wbHVnaW5faWRfXygpIHtcbiAgICAgICAgICAgIHJldHVybiAnSW5saW5lVHJhY2UnO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyBzZXJ2ZXJXaWxsU3RhcnQoeyBzY2hlbWEsIGxvZ2dlciB9KSB7XG4gICAgICAgICAgICBpZiAoZW5hYmxlZCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGVuYWJsZWQgPSAoMCwgc2NoZW1hSXNGZWRlcmF0ZWRfMS5zY2hlbWFJc0ZlZGVyYXRlZCkoc2NoZW1hKTtcbiAgICAgICAgICAgICAgICBpZiAoZW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygnRW5hYmxpbmcgaW5saW5lIHRyYWNpbmcgZm9yIHRoaXMgZmVkZXJhdGVkIHNlcnZpY2UuIFRvIGRpc2FibGUsIHVzZSAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdBcG9sbG9TZXJ2ZXJQbHVnaW5JbmxpbmVUcmFjZURpc2FibGVkLicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgcmVxdWVzdERpZFN0YXJ0KHsgcmVxdWVzdDogeyBodHRwIH0sIG1ldHJpY3MgfSkge1xuICAgICAgICAgICAgaWYgKCFlbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdHJlZUJ1aWxkZXIgPSBuZXcgdHJhY2VUcmVlQnVpbGRlcl8xLlRyYWNlVHJlZUJ1aWxkZXIoe1xuICAgICAgICAgICAgICAgIHJld3JpdGVFcnJvcjogb3B0aW9ucy5yZXdyaXRlRXJyb3IsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICgoaHR0cCA9PT0gbnVsbCB8fCBodHRwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBodHRwLmhlYWRlcnMuZ2V0KCdhcG9sbG8tZmVkZXJhdGlvbi1pbmNsdWRlLXRyYWNlJykpICE9PSAnZnR2MScpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWV0cmljcy5jYXB0dXJlVHJhY2VzID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1ldHJpY3MuY2FwdHVyZVRyYWNlcyA9IHRydWU7XG4gICAgICAgICAgICB0cmVlQnVpbGRlci5zdGFydFRpbWluZygpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhc3luYyBleGVjdXRpb25EaWRTdGFydCgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbGxSZXNvbHZlRmllbGQoeyBpbmZvIH0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJlZUJ1aWxkZXIud2lsbFJlc29sdmVGaWVsZChpbmZvKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBhc3luYyBkaWRFbmNvdW50ZXJFcnJvcnMoeyBlcnJvcnMgfSkge1xuICAgICAgICAgICAgICAgICAgICB0cmVlQnVpbGRlci5kaWRFbmNvdW50ZXJFcnJvcnMoZXJyb3JzKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGFzeW5jIHdpbGxTZW5kUmVzcG9uc2UoeyByZXNwb25zZSB9KSB7XG4gICAgICAgICAgICAgICAgICAgIHRyZWVCdWlsZGVyLnN0b3BUaW1pbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1ldHJpY3MucXVlcnlQbGFuVHJhY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyZWVCdWlsZGVyLnRyYWNlLnF1ZXJ5UGxhbiA9IG1ldHJpY3MucXVlcnlQbGFuVHJhY2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW5jb2RlZFVpbnQ4QXJyYXkgPSBhcG9sbG9fcmVwb3J0aW5nX3Byb3RvYnVmXzEuVHJhY2UuZW5jb2RlKHRyZWVCdWlsZGVyLnRyYWNlKS5maW5pc2goKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW5jb2RlZEJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGVuY29kZWRVaW50OEFycmF5LCBlbmNvZGVkVWludDhBcnJheS5ieXRlT2Zmc2V0LCBlbmNvZGVkVWludDhBcnJheS5ieXRlTGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXh0ZW5zaW9ucyA9IHJlc3BvbnNlLmV4dGVuc2lvbnMgfHwgKHJlc3BvbnNlLmV4dGVuc2lvbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBleHRlbnNpb25zLmZ0djEgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBgZnR2MWAgZXh0ZW5zaW9uIHdhcyBhbHJlYWR5IHByZXNlbnQuJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9ucy5mdHYxID0gZW5jb2RlZEJ1ZmZlci50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMuQXBvbGxvU2VydmVyUGx1Z2luSW5saW5lVHJhY2UgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5JbmxpbmVUcmFjZTtcbmZ1bmN0aW9uIEFwb2xsb1NlcnZlclBsdWdpbklubGluZVRyYWNlRGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgX19pbnRlcm5hbF9wbHVnaW5faWRfXygpIHtcbiAgICAgICAgICAgIHJldHVybiAnSW5saW5lVHJhY2UnO1xuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbklubGluZVRyYWNlRGlzYWJsZWQgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5JbmxpbmVUcmFjZURpc2FibGVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/inlineTrace/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/landingPage/default/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/landingPage/default/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getEmbeddedSandboxHTML = exports.getEmbeddedExplorerHTML = exports.ApolloServerPluginLandingPageProductionDefault = exports.ApolloServerPluginLandingPageLocalDefault = void 0;\nfunction ApolloServerPluginLandingPageLocalDefault(options = {}) {\n    const { version, __internal_apolloStudioEnv__, ...rest } = options;\n    return ApolloServerPluginLandingPageDefault(version, {\n        isProd: false,\n        apolloStudioEnv: __internal_apolloStudioEnv__,\n        ...rest,\n    });\n}\nexports.ApolloServerPluginLandingPageLocalDefault = ApolloServerPluginLandingPageLocalDefault;\nfunction ApolloServerPluginLandingPageProductionDefault(options = {}) {\n    const { version, __internal_apolloStudioEnv__, ...rest } = options;\n    return ApolloServerPluginLandingPageDefault(version, {\n        isProd: true,\n        apolloStudioEnv: __internal_apolloStudioEnv__,\n        ...rest,\n    });\n}\nexports.ApolloServerPluginLandingPageProductionDefault = ApolloServerPluginLandingPageProductionDefault;\nfunction encodeConfig(config) {\n    return JSON.stringify(encodeURIComponent(JSON.stringify(config)));\n}\nfunction getConfigStringForHtml(config) {\n    return JSON.stringify(config)\n        .replace('<', '\\\\u003c')\n        .replace('>', '\\\\u003e')\n        .replace('&', '\\\\u0026')\n        .replace(\"'\", '\\\\u0027');\n}\nconst getEmbeddedExplorerHTML = (version, config) => {\n    const productionLandingPageConfigOrDefault = {\n        displayOptions: {},\n        persistExplorerState: false,\n        ...(typeof config.embed === 'boolean' ? {} : config.embed),\n    };\n    const embeddedExplorerParams = {\n        ...config,\n        target: '#embeddableExplorer',\n        initialState: {\n            ...config,\n            displayOptions: {\n                ...productionLandingPageConfigOrDefault.displayOptions,\n            },\n        },\n        persistExplorerState: productionLandingPageConfigOrDefault.persistExplorerState,\n    };\n    return `\n<div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>Apollo Explorer cannot be loaded; it appears that you might be offline.</p>\n</div>\n<style>\n  iframe {\n    background-color: white;\n  }\n</style>\n<div\nstyle=\"width: 100vw; height: 100vh; position: absolute; top: 0;\"\nid=\"embeddableExplorer\"\n></div>\n<script src=\"https://embeddable-explorer.cdn.apollographql.com/${version}/embeddable-explorer.umd.production.min.js\"></script>\n<script>\n  var endpointUrl = window.location.href;\n  var embeddedExplorerConfig = ${getConfigStringForHtml(embeddedExplorerParams)};\n  new window.EmbeddedExplorer({\n    ...embeddedExplorerConfig,\n    endpointUrl,\n  });\n</script>\n`;\n};\nexports.getEmbeddedExplorerHTML = getEmbeddedExplorerHTML;\nconst getEmbeddedSandboxHTML = (version, config) => {\n    var _a, _b, _c, _d;\n    return `\n<div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>Apollo Sandbox cannot be loaded; it appears that you might be offline.</p>\n</div>\n<style>\n  iframe {\n    background-color: white;\n  }\n</style>\n<div\nstyle=\"width: 100vw; height: 100vh; position: absolute; top: 0;\"\nid=\"embeddableSandbox\"\n></div>\n<script src=\"https://embeddable-sandbox.cdn.apollographql.com/${version}/embeddable-sandbox.umd.production.min.js\"></script>\n<script>\n  var initialEndpoint = window.location.href;\n  new window.EmbeddedSandbox({\n    target: '#embeddableSandbox',\n    initialEndpoint,\n    includeCookies: ${(_a = config.includeCookies) !== null && _a !== void 0 ? _a : 'false'},\n    initialState: ${getConfigStringForHtml({\n        document: (_b = config.document) !== null && _b !== void 0 ? _b : undefined,\n        variables: (_c = config.variables) !== null && _c !== void 0 ? _c : undefined,\n        headers: (_d = config.headers) !== null && _d !== void 0 ? _d : undefined,\n    })},\n  });\n</script>\n`;\n};\nexports.getEmbeddedSandboxHTML = getEmbeddedSandboxHTML;\nconst getNonEmbeddedLandingPageHTML = (version, config) => {\n    const encodedConfig = encodeConfig(config);\n    return `\n <div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>The full landing page cannot be loaded; it appears that you might be offline.</p>\n</div>\n<script>window.landingPage = ${encodedConfig};</script>\n<script src=\"https://apollo-server-landing-page.cdn.apollographql.com/${version}/static/js/main.js\"></script>`;\n};\nfunction ApolloServerPluginLandingPageDefault(maybeVersion, config) {\n    const version = maybeVersion !== null && maybeVersion !== void 0 ? maybeVersion : '_latest';\n    return {\n        __internal_installed_implicitly__: false,\n        async serverWillStart() {\n            return {\n                async renderLandingPage() {\n                    const html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link\n      rel=\"icon\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${version}/assets/favicon.png\"\n    />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta name=\"description\" content=\"Apollo server landing page\" />\n    <link\n      rel=\"apple-touch-icon\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${version}/assets/favicon.png\"\n    />\n    <link\n      rel=\"manifest\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${version}/manifest.json\"\n    />\n    <title>Apollo Server</title>\n  </head>\n  <body style=\"margin: 0; overflow-x: hidden; overflow-y: hidden\">\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"react-root\">\n      <style>\n        .fallback {\n          opacity: 0;\n          animation: fadeIn 1s 1s;\n          animation-iteration-count: 1;\n          animation-fill-mode: forwards;\n          padding: 1em;\n        }\n        @keyframes fadeIn {\n          0% {opacity:0;}\n          100% {opacity:1; }\n        }\n      </style>\n    ${config.embed\n                        ? 'graphRef' in config && config.graphRef\n                            ? (0, exports.getEmbeddedExplorerHTML)(version, config)\n                            : (0, exports.getEmbeddedSandboxHTML)(version, config)\n                        : getNonEmbeddedLandingPageHTML(version, config)}\n    </div>\n  </body>\n</html>\n          `;\n                    return { html };\n                },\n            };\n        },\n    };\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/landingPage/default/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/landingPage/graphqlPlayground/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/landingPage/graphqlPlayground/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApolloServerPluginLandingPageGraphQLPlayground = void 0;\nconst graphql_playground_html_1 = __webpack_require__(/*! @apollographql/graphql-playground-html */ \"(rsc)/./node_modules/@apollographql/graphql-playground-html/dist/index.js\");\nconst defaultPlaygroundVersion = '1.7.42';\nfunction ApolloServerPluginLandingPageGraphQLPlayground(options = Object.create(null)) {\n    return {\n        async serverWillStart() {\n            return {\n                async renderLandingPage() {\n                    return {\n                        html: (0, graphql_playground_html_1.renderPlaygroundPage)({\n                            version: defaultPlaygroundVersion,\n                            ...options,\n                        }),\n                    };\n                },\n            };\n        },\n    };\n}\nexports.ApolloServerPluginLandingPageGraphQLPlayground = ApolloServerPluginLandingPageGraphQLPlayground;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL2xhbmRpbmdQYWdlL2dyYXBocWxQbGF5Z3JvdW5kL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNEQUFzRDtBQUN0RCxrQ0FBa0MsbUJBQU8sQ0FBQyx5SEFBd0M7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXHBsdWdpblxcbGFuZGluZ1BhZ2VcXGdyYXBocWxQbGF5Z3JvdW5kXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXBvbGxvU2VydmVyUGx1Z2luTGFuZGluZ1BhZ2VHcmFwaFFMUGxheWdyb3VuZCA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfcGxheWdyb3VuZF9odG1sXzEgPSByZXF1aXJlKFwiQGFwb2xsb2dyYXBocWwvZ3JhcGhxbC1wbGF5Z3JvdW5kLWh0bWxcIik7XG5jb25zdCBkZWZhdWx0UGxheWdyb3VuZFZlcnNpb24gPSAnMS43LjQyJztcbmZ1bmN0aW9uIEFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlR3JhcGhRTFBsYXlncm91bmQob3B0aW9ucyA9IE9iamVjdC5jcmVhdGUobnVsbCkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhc3luYyBzZXJ2ZXJXaWxsU3RhcnQoKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGFzeW5jIHJlbmRlckxhbmRpbmdQYWdlKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaHRtbDogKDAsIGdyYXBocWxfcGxheWdyb3VuZF9odG1sXzEucmVuZGVyUGxheWdyb3VuZFBhZ2UpKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uOiBkZWZhdWx0UGxheWdyb3VuZFZlcnNpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLkFwb2xsb1NlcnZlclBsdWdpbkxhbmRpbmdQYWdlR3JhcGhRTFBsYXlncm91bmQgPSBBcG9sbG9TZXJ2ZXJQbHVnaW5MYW5kaW5nUGFnZUdyYXBoUUxQbGF5Z3JvdW5kO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/landingPage/graphqlPlayground/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaIsFederated.js":
/*!**************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/schemaIsFederated.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.schemaIsFederated = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction schemaIsFederated(schema) {\n    const serviceType = schema.getType('_Service');\n    if (!(0, graphql_1.isObjectType)(serviceType)) {\n        return false;\n    }\n    const sdlField = serviceType.getFields().sdl;\n    if (!sdlField) {\n        return false;\n    }\n    const sdlFieldType = sdlField.type;\n    if (!(0, graphql_1.isScalarType)(sdlFieldType)) {\n        return false;\n    }\n    return sdlFieldType.name == 'String';\n}\nexports.schemaIsFederated = schemaIsFederated;\n//# sourceMappingURL=schemaIsFederated.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL3NjaGVtYUlzRmVkZXJhdGVkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFxwbHVnaW5cXHNjaGVtYUlzRmVkZXJhdGVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zY2hlbWFJc0ZlZGVyYXRlZCA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gc2NoZW1hSXNGZWRlcmF0ZWQoc2NoZW1hKSB7XG4gICAgY29uc3Qgc2VydmljZVR5cGUgPSBzY2hlbWEuZ2V0VHlwZSgnX1NlcnZpY2UnKTtcbiAgICBpZiAoISgwLCBncmFwaHFsXzEuaXNPYmplY3RUeXBlKShzZXJ2aWNlVHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBzZGxGaWVsZCA9IHNlcnZpY2VUeXBlLmdldEZpZWxkcygpLnNkbDtcbiAgICBpZiAoIXNkbEZpZWxkKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3Qgc2RsRmllbGRUeXBlID0gc2RsRmllbGQudHlwZTtcbiAgICBpZiAoISgwLCBncmFwaHFsXzEuaXNTY2FsYXJUeXBlKShzZGxGaWVsZFR5cGUpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHNkbEZpZWxkVHlwZS5uYW1lID09ICdTdHJpbmcnO1xufVxuZXhwb3J0cy5zY2hlbWFJc0ZlZGVyYXRlZCA9IHNjaGVtYUlzRmVkZXJhdGVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NoZW1hSXNGZWRlcmF0ZWQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaIsFederated.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaReporting/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/schemaReporting/index.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.computeCoreSchemaHash = exports.ApolloServerPluginSchemaReporting = void 0;\nconst os_1 = __importDefault(__webpack_require__(/*! os */ \"os\"));\nconst uuid_1 = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/index.js\");\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst schemaReporter_1 = __webpack_require__(/*! ./schemaReporter */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaReporting/schemaReporter.js\");\nconst createSHA_1 = __importDefault(__webpack_require__(/*! ../../utils/createSHA */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/createSHA.js\"));\nconst schemaIsFederated_1 = __webpack_require__(/*! ../schemaIsFederated */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaIsFederated.js\");\nfunction ApolloServerPluginSchemaReporting({ initialDelayMaxMs, overrideReportedSchema, endpointUrl, fetcher, } = Object.create(null)) {\n    const bootId = (0, uuid_1.v4)();\n    return {\n        __internal_plugin_id__() {\n            return 'SchemaReporting';\n        },\n        async serverWillStart({ apollo, schema, logger }) {\n            const { key, graphRef } = apollo;\n            if (!key) {\n                throw Error('To use ApolloServerPluginSchemaReporting, you must provide an Apollo API ' +\n                    'key, via the APOLLO_KEY environment variable or via `new ApolloServer({apollo: {key})`');\n            }\n            if (!graphRef) {\n                throw Error('To use ApolloServerPluginSchemaReporting, you must provide your graph ref (eg, ' +\n                    \"'my-graph-id@my-graph-variant'). Try setting the APOLLO_GRAPH_REF environment \" +\n                    'variable or passing `new ApolloServer({apollo: {graphRef}})`.');\n            }\n            if (overrideReportedSchema) {\n                try {\n                    const validationErrors = (0, graphql_1.validateSchema)((0, graphql_1.buildSchema)(overrideReportedSchema, { noLocation: true }));\n                    if (validationErrors.length) {\n                        throw new Error(validationErrors.map((error) => error.message).join('\\n'));\n                    }\n                }\n                catch (err) {\n                    throw new Error('The schema provided to overrideReportedSchema failed to parse or ' +\n                        `validate: ${err.message}`);\n                }\n            }\n            if ((0, schemaIsFederated_1.schemaIsFederated)(schema)) {\n                throw Error([\n                    'Schema reporting is not yet compatible with federated services.',\n                    \"If you're interested in using schema reporting with federated\",\n                    'services, please contact Apollo support. To set up managed federation, see',\n                    'https://go.apollo.dev/s/managed-federation',\n                ].join(' '));\n            }\n            if (endpointUrl !== undefined) {\n                logger.info(`Apollo schema reporting: schema reporting URL override: ${endpointUrl}`);\n            }\n            const baseSchemaReport = {\n                bootId,\n                graphRef,\n                platform: process.env.APOLLO_SERVER_PLATFORM || 'local',\n                runtimeVersion: `node ${process.version}`,\n                userVersion: process.env.APOLLO_SERVER_USER_VERSION,\n                serverId: process.env.APOLLO_SERVER_ID || process.env.HOSTNAME || os_1.default.hostname(),\n                libraryVersion: `apollo-server-core@${(__webpack_require__(/*! ../../../package.json */ \"(rsc)/./node_modules/apollo-server-core/package.json\").version)}`,\n            };\n            let currentSchemaReporter;\n            return {\n                schemaDidLoadOrUpdate({ apiSchema, coreSupergraphSdl }) {\n                    var _a;\n                    if (overrideReportedSchema !== undefined) {\n                        if (currentSchemaReporter) {\n                            return;\n                        }\n                        else {\n                            logger.info('Apollo schema reporting: schema to report has been overridden');\n                        }\n                    }\n                    const coreSchema = (_a = overrideReportedSchema !== null && overrideReportedSchema !== void 0 ? overrideReportedSchema : coreSupergraphSdl) !== null && _a !== void 0 ? _a : (0, graphql_1.printSchema)(apiSchema);\n                    const coreSchemaHash = computeCoreSchemaHash(coreSchema);\n                    const schemaReport = {\n                        ...baseSchemaReport,\n                        coreSchemaHash,\n                    };\n                    currentSchemaReporter === null || currentSchemaReporter === void 0 ? void 0 : currentSchemaReporter.stop();\n                    currentSchemaReporter = new schemaReporter_1.SchemaReporter({\n                        schemaReport,\n                        coreSchema,\n                        apiKey: key,\n                        endpointUrl,\n                        logger,\n                        initialReportingDelayInMs: Math.floor(Math.random() * (initialDelayMaxMs !== null && initialDelayMaxMs !== void 0 ? initialDelayMaxMs : 10000)),\n                        fallbackReportingDelayInMs: 20000,\n                        fetcher,\n                    });\n                    currentSchemaReporter.start();\n                    logger.info('Apollo schema reporting: reporting a new schema to Studio! See your graph at ' +\n                        `https://studio.apollographql.com/graph/${encodeURI(graphRef)}/ with server info ${JSON.stringify(schemaReport)}`);\n                },\n                async serverWillStop() {\n                    currentSchemaReporter === null || currentSchemaReporter === void 0 ? void 0 : currentSchemaReporter.stop();\n                },\n            };\n        },\n    };\n}\nexports.ApolloServerPluginSchemaReporting = ApolloServerPluginSchemaReporting;\nfunction computeCoreSchemaHash(schema) {\n    return (0, createSHA_1.default)('sha256').update(schema).digest('hex');\n}\nexports.computeCoreSchemaHash = computeCoreSchemaHash;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaReporting/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaReporting/schemaReporter.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/schemaReporting/schemaReporter.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SchemaReporter = exports.schemaReportGql = void 0;\nconst gql_1 = __webpack_require__(/*! ../../gql */ \"(rsc)/./node_modules/apollo-server-core/dist/gql.js\");\nconst apollo_server_env_1 = __webpack_require__(/*! apollo-server-env */ \"(rsc)/./node_modules/apollo-server-env/dist/index.js\");\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nexports.schemaReportGql = (0, graphql_1.print)((0, gql_1.gql) `\n  mutation SchemaReport($report: SchemaReport!, $coreSchema: String) {\n    reportSchema(report: $report, coreSchema: $coreSchema) {\n      __typename\n      ... on ReportSchemaError {\n        message\n        code\n      }\n      ... on ReportSchemaResponse {\n        inSeconds\n        withCoreSchema\n      }\n    }\n  }\n`);\nclass SchemaReporter {\n    constructor(options) {\n        var _a;\n        this.headers = new apollo_server_env_1.Headers();\n        this.headers.set('Content-Type', 'application/json');\n        this.headers.set('x-api-key', options.apiKey);\n        this.headers.set('apollographql-client-name', 'ApolloServerPluginSchemaReporting');\n        this.headers.set('apollographql-client-version', (__webpack_require__(/*! ../../../package.json */ \"(rsc)/./node_modules/apollo-server-core/package.json\").version));\n        this.endpointUrl =\n            options.endpointUrl ||\n                'https://schema-reporting.api.apollographql.com/api/graphql';\n        this.schemaReport = options.schemaReport;\n        this.coreSchema = options.coreSchema;\n        this.isStopped = false;\n        this.logger = options.logger;\n        this.initialReportingDelayInMs = options.initialReportingDelayInMs;\n        this.fallbackReportingDelayInMs = options.fallbackReportingDelayInMs;\n        this.fetcher = (_a = options.fetcher) !== null && _a !== void 0 ? _a : apollo_server_env_1.fetch;\n    }\n    stopped() {\n        return this.isStopped;\n    }\n    start() {\n        this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(false), this.initialReportingDelayInMs);\n    }\n    stop() {\n        this.isStopped = true;\n        if (this.pollTimer) {\n            clearTimeout(this.pollTimer);\n            this.pollTimer = undefined;\n        }\n    }\n    async sendOneReportAndScheduleNext(sendNextWithCoreSchema) {\n        this.pollTimer = undefined;\n        if (this.stopped())\n            return;\n        try {\n            const result = await this.reportSchema(sendNextWithCoreSchema);\n            if (!result) {\n                return;\n            }\n            if (!this.stopped()) {\n                this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(result.withCoreSchema), result.inSeconds * 1000);\n            }\n            return;\n        }\n        catch (error) {\n            this.logger.error(`Error reporting server info to Apollo during schema reporting: ${error}`);\n            if (!this.stopped()) {\n                this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(false), this.fallbackReportingDelayInMs);\n            }\n        }\n    }\n    async reportSchema(withCoreSchema) {\n        const { data, errors } = await this.apolloQuery({\n            report: this.schemaReport,\n            coreSchema: withCoreSchema ? this.coreSchema : null,\n        });\n        if (errors) {\n            throw new Error(errors.map((x) => x.message).join('\\n'));\n        }\n        function msgForUnexpectedResponse(data) {\n            return [\n                'Unexpected response shape from Apollo when',\n                'reporting schema. If this continues, please reach',\n                'out to support@apollographql.com.',\n                'Received response:',\n                JSON.stringify(data),\n            ].join(' ');\n        }\n        if (!data || !data.reportSchema) {\n            throw new Error(msgForUnexpectedResponse(data));\n        }\n        if (data.reportSchema.__typename === 'ReportSchemaResponse') {\n            return data.reportSchema;\n        }\n        else if (data.reportSchema.__typename === 'ReportSchemaError') {\n            this.logger.error([\n                'Received input validation error from Apollo:',\n                data.reportSchema.message,\n                'Stopping reporting. Please fix the input errors.',\n            ].join(' '));\n            this.stop();\n            return null;\n        }\n        throw new Error(msgForUnexpectedResponse(data));\n    }\n    async apolloQuery(variables) {\n        const request = {\n            query: exports.schemaReportGql,\n            variables,\n        };\n        const httpRequest = new apollo_server_env_1.Request(this.endpointUrl, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify(request),\n        });\n        const httpResponse = await this.fetcher(httpRequest);\n        if (!httpResponse.ok) {\n            throw new Error([\n                `An unexpected HTTP status code (${httpResponse.status}) was`,\n                'encountered during schema reporting.',\n            ].join(' '));\n        }\n        try {\n            return await httpResponse.json();\n        }\n        catch (error) {\n            throw new Error([\n                \"Couldn't report schema to Apollo.\",\n                'Parsing response as JSON failed.',\n                'If this continues please reach out to support@apollographql.com',\n                error,\n            ].join(' '));\n        }\n    }\n}\nexports.SchemaReporter = SchemaReporter;\n//# sourceMappingURL=schemaReporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaReporting/schemaReporter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/traceTreeBuilder.js":
/*!*************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/traceTreeBuilder.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.dateToProtoTimestamp = exports.TraceTreeBuilder = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst apollo_reporting_protobuf_1 = __webpack_require__(/*! apollo-reporting-protobuf */ \"(rsc)/./node_modules/apollo-reporting-protobuf/generated/index.js\");\nfunction internalError(message) {\n    return new Error(`[internal apollo-server error] ${message}`);\n}\nclass TraceTreeBuilder {\n    constructor(options) {\n        this.rootNode = new apollo_reporting_protobuf_1.Trace.Node();\n        this.logger = console;\n        this.trace = new apollo_reporting_protobuf_1.Trace({\n            root: this.rootNode,\n            fieldExecutionWeight: 1,\n        });\n        this.stopped = false;\n        this.nodes = new Map([\n            [responsePathAsString(), this.rootNode],\n        ]);\n        this.rewriteError = options.rewriteError;\n        if (options.logger)\n            this.logger = options.logger;\n    }\n    startTiming() {\n        if (this.startHrTime) {\n            throw internalError('startTiming called twice!');\n        }\n        if (this.stopped) {\n            throw internalError('startTiming called after stopTiming!');\n        }\n        this.trace.startTime = dateToProtoTimestamp(new Date());\n        this.startHrTime = process.hrtime();\n    }\n    stopTiming() {\n        if (!this.startHrTime) {\n            throw internalError('stopTiming called before startTiming!');\n        }\n        if (this.stopped) {\n            throw internalError('stopTiming called twice!');\n        }\n        this.trace.durationNs = durationHrTimeToNanos(process.hrtime(this.startHrTime));\n        this.trace.endTime = dateToProtoTimestamp(new Date());\n        this.stopped = true;\n    }\n    willResolveField(info) {\n        if (!this.startHrTime) {\n            throw internalError('willResolveField called before startTiming!');\n        }\n        if (this.stopped) {\n            return () => { };\n        }\n        const path = info.path;\n        const node = this.newNode(path);\n        node.type = info.returnType.toString();\n        node.parentType = info.parentType.toString();\n        node.startTime = durationHrTimeToNanos(process.hrtime(this.startHrTime));\n        if (typeof path.key === 'string' && path.key !== info.fieldName) {\n            node.originalFieldName = info.fieldName;\n        }\n        return () => {\n            node.endTime = durationHrTimeToNanos(process.hrtime(this.startHrTime));\n        };\n    }\n    didEncounterErrors(errors) {\n        errors.forEach((err) => {\n            var _a;\n            if ((_a = err.extensions) === null || _a === void 0 ? void 0 : _a.serviceName) {\n                return;\n            }\n            const errorForReporting = this.rewriteAndNormalizeError(err);\n            if (errorForReporting === null) {\n                return;\n            }\n            this.addProtobufError(errorForReporting.path, errorToProtobufError(errorForReporting));\n        });\n    }\n    addProtobufError(path, error) {\n        if (!this.startHrTime) {\n            throw internalError('addProtobufError called before startTiming!');\n        }\n        if (this.stopped) {\n            throw internalError('addProtobufError called after stopTiming!');\n        }\n        let node = this.rootNode;\n        if (Array.isArray(path)) {\n            const specificNode = this.nodes.get(path.join('.'));\n            if (specificNode) {\n                node = specificNode;\n            }\n            else {\n                this.logger.warn(`Could not find node with path ${path.join('.')}; defaulting to put errors on root node.`);\n            }\n        }\n        node.error.push(error);\n    }\n    newNode(path) {\n        const node = new apollo_reporting_protobuf_1.Trace.Node();\n        const id = path.key;\n        if (typeof id === 'number') {\n            node.index = id;\n        }\n        else {\n            node.responseName = id;\n        }\n        this.nodes.set(responsePathAsString(path), node);\n        const parentNode = this.ensureParentNode(path);\n        parentNode.child.push(node);\n        return node;\n    }\n    ensureParentNode(path) {\n        const parentPath = responsePathAsString(path.prev);\n        const parentNode = this.nodes.get(parentPath);\n        if (parentNode) {\n            return parentNode;\n        }\n        return this.newNode(path.prev);\n    }\n    rewriteAndNormalizeError(err) {\n        if (this.rewriteError) {\n            const clonedError = Object.assign(Object.create(Object.getPrototypeOf(err)), err);\n            const rewrittenError = this.rewriteError(clonedError);\n            if (rewrittenError === null) {\n                return null;\n            }\n            if (!(rewrittenError instanceof graphql_1.GraphQLError)) {\n                return err;\n            }\n            return new graphql_1.GraphQLError(rewrittenError.message, err.nodes, err.source, err.positions, err.path, err.originalError, rewrittenError.extensions || err.extensions);\n        }\n        return err;\n    }\n}\nexports.TraceTreeBuilder = TraceTreeBuilder;\nfunction durationHrTimeToNanos(hrtime) {\n    return hrtime[0] * 1e9 + hrtime[1];\n}\nfunction responsePathAsString(p) {\n    if (p === undefined) {\n        return '';\n    }\n    let res = String(p.key);\n    while ((p = p.prev) !== undefined) {\n        res = `${p.key}.${res}`;\n    }\n    return res;\n}\nfunction errorToProtobufError(error) {\n    return new apollo_reporting_protobuf_1.Trace.Error({\n        message: error.message,\n        location: (error.locations || []).map(({ line, column }) => new apollo_reporting_protobuf_1.Trace.Location({ line, column })),\n        json: JSON.stringify(error),\n    });\n}\nfunction dateToProtoTimestamp(date) {\n    const totalMillis = +date;\n    const millis = totalMillis % 1000;\n    return new apollo_reporting_protobuf_1.google.protobuf.Timestamp({\n        seconds: (totalMillis - millis) / 1000,\n        nanos: millis * 1e6,\n    });\n}\nexports.dateToProtoTimestamp = dateToProtoTimestamp;\n//# sourceMappingURL=traceTreeBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/traceTreeBuilder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/defaultSendOperationsAsTrace.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/usageReporting/defaultSendOperationsAsTrace.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defaultSendOperationsAsTrace = void 0;\nconst lru_cache_1 = __importDefault(__webpack_require__(/*! lru-cache */ \"(rsc)/./node_modules/apollo-server-core/node_modules/lru-cache/index.js\"));\nconst iterateOverTrace_1 = __webpack_require__(/*! ./iterateOverTrace */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/iterateOverTrace.js\");\nconst durationHistogram_1 = __webpack_require__(/*! ./durationHistogram */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/durationHistogram.js\");\nfunction defaultSendOperationsAsTrace() {\n    const cache = new lru_cache_1.default({\n        max: Math.pow(2, 20),\n        length: (_val, key) => {\n            return (key && Buffer.byteLength(key)) || 0;\n        },\n    });\n    return (trace, statsReportKey) => {\n        var _a;\n        const endTimeSeconds = (_a = trace.endTime) === null || _a === void 0 ? void 0 : _a.seconds;\n        if (endTimeSeconds == null) {\n            throw Error('programming error: endTime not set on trace');\n        }\n        const hasErrors = traceHasErrors(trace);\n        const cacheKey = JSON.stringify([\n            statsReportKey,\n            durationHistogram_1.DurationHistogram.durationToBucket(trace.durationNs),\n            Math.floor(endTimeSeconds / 60),\n            hasErrors ? Math.floor(endTimeSeconds / 5) : '',\n        ]);\n        if (cache.get(cacheKey)) {\n            return false;\n        }\n        cache.set(cacheKey, true);\n        return true;\n    };\n}\nexports.defaultSendOperationsAsTrace = defaultSendOperationsAsTrace;\nfunction traceHasErrors(trace) {\n    let hasErrors = false;\n    function traceNodeStats(node) {\n        var _a, _b;\n        if (((_b = (_a = node.error) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n            hasErrors = true;\n        }\n        return hasErrors;\n    }\n    (0, iterateOverTrace_1.iterateOverTrace)(trace, traceNodeStats, false);\n    return hasErrors;\n}\n//# sourceMappingURL=defaultSendOperationsAsTrace.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL3VzYWdlUmVwb3J0aW5nL2RlZmF1bHRTZW5kT3BlcmF0aW9uc0FzVHJhY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0M7QUFDcEMsb0NBQW9DLG1CQUFPLENBQUMsMEZBQVc7QUFDdkQsMkJBQTJCLG1CQUFPLENBQUMsa0hBQW9CO0FBQ3ZELDRCQUE0QixtQkFBTyxDQUFDLG9IQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcZGlzdFxccGx1Z2luXFx1c2FnZVJlcG9ydGluZ1xcZGVmYXVsdFNlbmRPcGVyYXRpb25zQXNUcmFjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmYXVsdFNlbmRPcGVyYXRpb25zQXNUcmFjZSA9IHZvaWQgMDtcbmNvbnN0IGxydV9jYWNoZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJscnUtY2FjaGVcIikpO1xuY29uc3QgaXRlcmF0ZU92ZXJUcmFjZV8xID0gcmVxdWlyZShcIi4vaXRlcmF0ZU92ZXJUcmFjZVwiKTtcbmNvbnN0IGR1cmF0aW9uSGlzdG9ncmFtXzEgPSByZXF1aXJlKFwiLi9kdXJhdGlvbkhpc3RvZ3JhbVwiKTtcbmZ1bmN0aW9uIGRlZmF1bHRTZW5kT3BlcmF0aW9uc0FzVHJhY2UoKSB7XG4gICAgY29uc3QgY2FjaGUgPSBuZXcgbHJ1X2NhY2hlXzEuZGVmYXVsdCh7XG4gICAgICAgIG1heDogTWF0aC5wb3coMiwgMjApLFxuICAgICAgICBsZW5ndGg6IChfdmFsLCBrZXkpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoa2V5ICYmIEJ1ZmZlci5ieXRlTGVuZ3RoKGtleSkpIHx8IDA7XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuICh0cmFjZSwgc3RhdHNSZXBvcnRLZXkpID0+IHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCBlbmRUaW1lU2Vjb25kcyA9IChfYSA9IHRyYWNlLmVuZFRpbWUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zZWNvbmRzO1xuICAgICAgICBpZiAoZW5kVGltZVNlY29uZHMgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ3Byb2dyYW1taW5nIGVycm9yOiBlbmRUaW1lIG5vdCBzZXQgb24gdHJhY2UnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBoYXNFcnJvcnMgPSB0cmFjZUhhc0Vycm9ycyh0cmFjZSk7XG4gICAgICAgIGNvbnN0IGNhY2hlS2V5ID0gSlNPTi5zdHJpbmdpZnkoW1xuICAgICAgICAgICAgc3RhdHNSZXBvcnRLZXksXG4gICAgICAgICAgICBkdXJhdGlvbkhpc3RvZ3JhbV8xLkR1cmF0aW9uSGlzdG9ncmFtLmR1cmF0aW9uVG9CdWNrZXQodHJhY2UuZHVyYXRpb25OcyksXG4gICAgICAgICAgICBNYXRoLmZsb29yKGVuZFRpbWVTZWNvbmRzIC8gNjApLFxuICAgICAgICAgICAgaGFzRXJyb3JzID8gTWF0aC5mbG9vcihlbmRUaW1lU2Vjb25kcyAvIDUpIDogJycsXG4gICAgICAgIF0pO1xuICAgICAgICBpZiAoY2FjaGUuZ2V0KGNhY2hlS2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNhY2hlLnNldChjYWNoZUtleSwgdHJ1ZSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG59XG5leHBvcnRzLmRlZmF1bHRTZW5kT3BlcmF0aW9uc0FzVHJhY2UgPSBkZWZhdWx0U2VuZE9wZXJhdGlvbnNBc1RyYWNlO1xuZnVuY3Rpb24gdHJhY2VIYXNFcnJvcnModHJhY2UpIHtcbiAgICBsZXQgaGFzRXJyb3JzID0gZmFsc2U7XG4gICAgZnVuY3Rpb24gdHJhY2VOb2RlU3RhdHMobm9kZSkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICBpZiAoKChfYiA9IChfYSA9IG5vZGUuZXJyb3IpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IDApID4gMCkge1xuICAgICAgICAgICAgaGFzRXJyb3JzID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGFzRXJyb3JzO1xuICAgIH1cbiAgICAoMCwgaXRlcmF0ZU92ZXJUcmFjZV8xLml0ZXJhdGVPdmVyVHJhY2UpKHRyYWNlLCB0cmFjZU5vZGVTdGF0cywgZmFsc2UpO1xuICAgIHJldHVybiBoYXNFcnJvcnM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZhdWx0U2VuZE9wZXJhdGlvbnNBc1RyYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/defaultSendOperationsAsTrace.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/durationHistogram.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/usageReporting/durationHistogram.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DurationHistogram = void 0;\nclass DurationHistogram {\n    constructor(options) {\n        const initSize = (options === null || options === void 0 ? void 0 : options.initSize) || 74;\n        const buckets = options === null || options === void 0 ? void 0 : options.buckets;\n        const arrayInitSize = Math.max((buckets === null || buckets === void 0 ? void 0 : buckets.length) || 0, initSize);\n        this.buckets = Array(arrayInitSize).fill(0);\n        if (buckets) {\n            buckets.forEach((val, index) => (this.buckets[index] = val));\n        }\n    }\n    toArray() {\n        let bufferedZeroes = 0;\n        const outputArray = [];\n        for (const value of this.buckets) {\n            if (value === 0) {\n                bufferedZeroes++;\n            }\n            else {\n                if (bufferedZeroes === 1) {\n                    outputArray.push(0);\n                }\n                else if (bufferedZeroes !== 0) {\n                    outputArray.push(-bufferedZeroes);\n                }\n                outputArray.push(Math.floor(value));\n                bufferedZeroes = 0;\n            }\n        }\n        return outputArray;\n    }\n    static durationToBucket(durationNs) {\n        const log = Math.log(durationNs / 1000.0);\n        const unboundedBucket = Math.ceil(log / DurationHistogram.EXPONENT_LOG);\n        return unboundedBucket <= 0 || Number.isNaN(unboundedBucket)\n            ? 0\n            : unboundedBucket >= DurationHistogram.BUCKET_COUNT\n                ? DurationHistogram.BUCKET_COUNT - 1\n                : unboundedBucket;\n    }\n    incrementDuration(durationNs, value = 1) {\n        this.incrementBucket(DurationHistogram.durationToBucket(durationNs), value);\n        return this;\n    }\n    incrementBucket(bucket, value = 1) {\n        if (bucket >= DurationHistogram.BUCKET_COUNT) {\n            throw Error('Bucket is out of bounds of the buckets array');\n        }\n        if (bucket >= this.buckets.length) {\n            const oldLength = this.buckets.length;\n            this.buckets.length = bucket + 1;\n            this.buckets.fill(0, oldLength);\n        }\n        this.buckets[bucket] += value;\n    }\n    combine(otherHistogram) {\n        for (let i = 0; i < otherHistogram.buckets.length; i++) {\n            this.incrementBucket(i, otherHistogram.buckets[i]);\n        }\n    }\n}\nexports.DurationHistogram = DurationHistogram;\nDurationHistogram.BUCKET_COUNT = 384;\nDurationHistogram.EXPONENT_LOG = Math.log(1.1);\n//# sourceMappingURL=durationHistogram.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL3VzYWdlUmVwb3J0aW5nL2R1cmF0aW9uSGlzdG9ncmFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtQ0FBbUM7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcZGlzdFxccGx1Z2luXFx1c2FnZVJlcG9ydGluZ1xcZHVyYXRpb25IaXN0b2dyYW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkR1cmF0aW9uSGlzdG9ncmFtID0gdm9pZCAwO1xuY2xhc3MgRHVyYXRpb25IaXN0b2dyYW0ge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgaW5pdFNpemUgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmluaXRTaXplKSB8fCA3NDtcbiAgICAgICAgY29uc3QgYnVja2V0cyA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5idWNrZXRzO1xuICAgICAgICBjb25zdCBhcnJheUluaXRTaXplID0gTWF0aC5tYXgoKGJ1Y2tldHMgPT09IG51bGwgfHwgYnVja2V0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogYnVja2V0cy5sZW5ndGgpIHx8IDAsIGluaXRTaXplKTtcbiAgICAgICAgdGhpcy5idWNrZXRzID0gQXJyYXkoYXJyYXlJbml0U2l6ZSkuZmlsbCgwKTtcbiAgICAgICAgaWYgKGJ1Y2tldHMpIHtcbiAgICAgICAgICAgIGJ1Y2tldHMuZm9yRWFjaCgodmFsLCBpbmRleCkgPT4gKHRoaXMuYnVja2V0c1tpbmRleF0gPSB2YWwpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0b0FycmF5KCkge1xuICAgICAgICBsZXQgYnVmZmVyZWRaZXJvZXMgPSAwO1xuICAgICAgICBjb25zdCBvdXRwdXRBcnJheSA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHRoaXMuYnVja2V0cykge1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSAwKSB7XG4gICAgICAgICAgICAgICAgYnVmZmVyZWRaZXJvZXMrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChidWZmZXJlZFplcm9lcyA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXRBcnJheS5wdXNoKDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChidWZmZXJlZFplcm9lcyAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXRBcnJheS5wdXNoKC1idWZmZXJlZFplcm9lcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG91dHB1dEFycmF5LnB1c2goTWF0aC5mbG9vcih2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIGJ1ZmZlcmVkWmVyb2VzID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0cHV0QXJyYXk7XG4gICAgfVxuICAgIHN0YXRpYyBkdXJhdGlvblRvQnVja2V0KGR1cmF0aW9uTnMpIHtcbiAgICAgICAgY29uc3QgbG9nID0gTWF0aC5sb2coZHVyYXRpb25OcyAvIDEwMDAuMCk7XG4gICAgICAgIGNvbnN0IHVuYm91bmRlZEJ1Y2tldCA9IE1hdGguY2VpbChsb2cgLyBEdXJhdGlvbkhpc3RvZ3JhbS5FWFBPTkVOVF9MT0cpO1xuICAgICAgICByZXR1cm4gdW5ib3VuZGVkQnVja2V0IDw9IDAgfHwgTnVtYmVyLmlzTmFOKHVuYm91bmRlZEJ1Y2tldClcbiAgICAgICAgICAgID8gMFxuICAgICAgICAgICAgOiB1bmJvdW5kZWRCdWNrZXQgPj0gRHVyYXRpb25IaXN0b2dyYW0uQlVDS0VUX0NPVU5UXG4gICAgICAgICAgICAgICAgPyBEdXJhdGlvbkhpc3RvZ3JhbS5CVUNLRVRfQ09VTlQgLSAxXG4gICAgICAgICAgICAgICAgOiB1bmJvdW5kZWRCdWNrZXQ7XG4gICAgfVxuICAgIGluY3JlbWVudER1cmF0aW9uKGR1cmF0aW9uTnMsIHZhbHVlID0gMSkge1xuICAgICAgICB0aGlzLmluY3JlbWVudEJ1Y2tldChEdXJhdGlvbkhpc3RvZ3JhbS5kdXJhdGlvblRvQnVja2V0KGR1cmF0aW9uTnMpLCB2YWx1ZSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBpbmNyZW1lbnRCdWNrZXQoYnVja2V0LCB2YWx1ZSA9IDEpIHtcbiAgICAgICAgaWYgKGJ1Y2tldCA+PSBEdXJhdGlvbkhpc3RvZ3JhbS5CVUNLRVRfQ09VTlQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdCdWNrZXQgaXMgb3V0IG9mIGJvdW5kcyBvZiB0aGUgYnVja2V0cyBhcnJheScpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChidWNrZXQgPj0gdGhpcy5idWNrZXRzLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3Qgb2xkTGVuZ3RoID0gdGhpcy5idWNrZXRzLmxlbmd0aDtcbiAgICAgICAgICAgIHRoaXMuYnVja2V0cy5sZW5ndGggPSBidWNrZXQgKyAxO1xuICAgICAgICAgICAgdGhpcy5idWNrZXRzLmZpbGwoMCwgb2xkTGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmJ1Y2tldHNbYnVja2V0XSArPSB2YWx1ZTtcbiAgICB9XG4gICAgY29tYmluZShvdGhlckhpc3RvZ3JhbSkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG90aGVySGlzdG9ncmFtLmJ1Y2tldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50QnVja2V0KGksIG90aGVySGlzdG9ncmFtLmJ1Y2tldHNbaV0pO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5EdXJhdGlvbkhpc3RvZ3JhbSA9IER1cmF0aW9uSGlzdG9ncmFtO1xuRHVyYXRpb25IaXN0b2dyYW0uQlVDS0VUX0NPVU5UID0gMzg0O1xuRHVyYXRpb25IaXN0b2dyYW0uRVhQT05FTlRfTE9HID0gTWF0aC5sb2coMS4xKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWR1cmF0aW9uSGlzdG9ncmFtLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/durationHistogram.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/usageReporting/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApolloServerPluginUsageReportingDisabled = exports.ApolloServerPluginUsageReporting = void 0;\nvar plugin_1 = __webpack_require__(/*! ./plugin */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/plugin.js\");\nObject.defineProperty(exports, \"ApolloServerPluginUsageReporting\", ({ enumerable: true, get: function () { return plugin_1.ApolloServerPluginUsageReporting; } }));\nObject.defineProperty(exports, \"ApolloServerPluginUsageReportingDisabled\", ({ enumerable: true, get: function () { return plugin_1.ApolloServerPluginUsageReportingDisabled; } }));\nvar options_1 = __webpack_require__(/*! ./options */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/options.js\");\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL3VzYWdlUmVwb3J0aW5nL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdEQUFnRCxHQUFHLHdDQUF3QztBQUMzRixlQUFlLG1CQUFPLENBQUMsOEZBQVU7QUFDakMsb0VBQW1FLEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQ2hLLDRFQUEyRSxFQUFFLHFDQUFxQyw2REFBNkQsRUFBQztBQUNoTCxnQkFBZ0IsbUJBQU8sQ0FBQyxnR0FBVztBQUNuQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXHBsdWdpblxcdXNhZ2VSZXBvcnRpbmdcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5Vc2FnZVJlcG9ydGluZ0Rpc2FibGVkID0gZXhwb3J0cy5BcG9sbG9TZXJ2ZXJQbHVnaW5Vc2FnZVJlcG9ydGluZyA9IHZvaWQgMDtcbnZhciBwbHVnaW5fMSA9IHJlcXVpcmUoXCIuL3BsdWdpblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwbHVnaW5fMS5BcG9sbG9TZXJ2ZXJQbHVnaW5Vc2FnZVJlcG9ydGluZzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nRGlzYWJsZWRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBsdWdpbl8xLkFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nRGlzYWJsZWQ7IH0gfSk7XG52YXIgb3B0aW9uc18xID0gcmVxdWlyZShcIi4vb3B0aW9uc1wiKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/iterateOverTrace.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/usageReporting/iterateOverTrace.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.iterateOverTrace = void 0;\nfunction iterateOverTrace(trace, f, includePath) {\n    const rootPath = includePath\n        ? new RootCollectingPathsResponseNamePath()\n        : notCollectingPathsResponseNamePath;\n    if (trace.root) {\n        if (iterateOverTraceNode(trace.root, rootPath, f))\n            return;\n    }\n    if (trace.queryPlan) {\n        if (iterateOverQueryPlan(trace.queryPlan, rootPath, f))\n            return;\n    }\n}\nexports.iterateOverTrace = iterateOverTrace;\nfunction iterateOverQueryPlan(node, rootPath, f) {\n    var _a, _b, _c, _d, _e;\n    if (!node)\n        return false;\n    if (((_b = (_a = node.fetch) === null || _a === void 0 ? void 0 : _a.trace) === null || _b === void 0 ? void 0 : _b.root) && node.fetch.serviceName) {\n        return iterateOverTraceNode(node.fetch.trace.root, rootPath.child(`service:${node.fetch.serviceName}`), f);\n    }\n    if ((_c = node.flatten) === null || _c === void 0 ? void 0 : _c.node) {\n        return iterateOverQueryPlan(node.flatten.node, rootPath, f);\n    }\n    if ((_d = node.parallel) === null || _d === void 0 ? void 0 : _d.nodes) {\n        return node.parallel.nodes.some((node) => iterateOverQueryPlan(node, rootPath, f));\n    }\n    if ((_e = node.sequence) === null || _e === void 0 ? void 0 : _e.nodes) {\n        return node.sequence.nodes.some((node) => iterateOverQueryPlan(node, rootPath, f));\n    }\n    return false;\n}\nfunction iterateOverTraceNode(node, path, f) {\n    var _a, _b;\n    if (f(node, path)) {\n        return true;\n    }\n    return ((_b = (_a = node.child) === null || _a === void 0 ? void 0 : _a.some((child) => {\n        const childPath = child.responseName\n            ? path.child(child.responseName)\n            : path;\n        return iterateOverTraceNode(child, childPath, f);\n    })) !== null && _b !== void 0 ? _b : false);\n}\nconst notCollectingPathsResponseNamePath = {\n    toArray() {\n        throw Error('not collecting paths!');\n    },\n    child() {\n        return this;\n    },\n};\nclass RootCollectingPathsResponseNamePath {\n    toArray() {\n        return [];\n    }\n    child(responseName) {\n        return new ChildCollectingPathsResponseNamePath(responseName, this);\n    }\n}\nclass ChildCollectingPathsResponseNamePath {\n    constructor(responseName, prev) {\n        this.responseName = responseName;\n        this.prev = prev;\n    }\n    toArray() {\n        const out = [];\n        let curr = this;\n        while (curr instanceof ChildCollectingPathsResponseNamePath) {\n            out.push(curr.responseName);\n            curr = curr.prev;\n        }\n        return out.reverse();\n    }\n    child(responseName) {\n        return new ChildCollectingPathsResponseNamePath(responseName, this);\n    }\n}\n//# sourceMappingURL=iterateOverTrace.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL3VzYWdlUmVwb3J0aW5nL2l0ZXJhdGVPdmVyVHJhY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRkFBcUYsdUJBQXVCO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFxwbHVnaW5cXHVzYWdlUmVwb3J0aW5nXFxpdGVyYXRlT3ZlclRyYWNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pdGVyYXRlT3ZlclRyYWNlID0gdm9pZCAwO1xuZnVuY3Rpb24gaXRlcmF0ZU92ZXJUcmFjZSh0cmFjZSwgZiwgaW5jbHVkZVBhdGgpIHtcbiAgICBjb25zdCByb290UGF0aCA9IGluY2x1ZGVQYXRoXG4gICAgICAgID8gbmV3IFJvb3RDb2xsZWN0aW5nUGF0aHNSZXNwb25zZU5hbWVQYXRoKClcbiAgICAgICAgOiBub3RDb2xsZWN0aW5nUGF0aHNSZXNwb25zZU5hbWVQYXRoO1xuICAgIGlmICh0cmFjZS5yb290KSB7XG4gICAgICAgIGlmIChpdGVyYXRlT3ZlclRyYWNlTm9kZSh0cmFjZS5yb290LCByb290UGF0aCwgZikpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0cmFjZS5xdWVyeVBsYW4pIHtcbiAgICAgICAgaWYgKGl0ZXJhdGVPdmVyUXVlcnlQbGFuKHRyYWNlLnF1ZXJ5UGxhbiwgcm9vdFBhdGgsIGYpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgIH1cbn1cbmV4cG9ydHMuaXRlcmF0ZU92ZXJUcmFjZSA9IGl0ZXJhdGVPdmVyVHJhY2U7XG5mdW5jdGlvbiBpdGVyYXRlT3ZlclF1ZXJ5UGxhbihub2RlLCByb290UGF0aCwgZikge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2U7XG4gICAgaWYgKCFub2RlKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCgoX2IgPSAoX2EgPSBub2RlLmZldGNoKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudHJhY2UpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5yb290KSAmJiBub2RlLmZldGNoLnNlcnZpY2VOYW1lKSB7XG4gICAgICAgIHJldHVybiBpdGVyYXRlT3ZlclRyYWNlTm9kZShub2RlLmZldGNoLnRyYWNlLnJvb3QsIHJvb3RQYXRoLmNoaWxkKGBzZXJ2aWNlOiR7bm9kZS5mZXRjaC5zZXJ2aWNlTmFtZX1gKSwgZik7XG4gICAgfVxuICAgIGlmICgoX2MgPSBub2RlLmZsYXR0ZW4pID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5ub2RlKSB7XG4gICAgICAgIHJldHVybiBpdGVyYXRlT3ZlclF1ZXJ5UGxhbihub2RlLmZsYXR0ZW4ubm9kZSwgcm9vdFBhdGgsIGYpO1xuICAgIH1cbiAgICBpZiAoKF9kID0gbm9kZS5wYXJhbGxlbCkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLm5vZGVzKSB7XG4gICAgICAgIHJldHVybiBub2RlLnBhcmFsbGVsLm5vZGVzLnNvbWUoKG5vZGUpID0+IGl0ZXJhdGVPdmVyUXVlcnlQbGFuKG5vZGUsIHJvb3RQYXRoLCBmKSk7XG4gICAgfVxuICAgIGlmICgoX2UgPSBub2RlLnNlcXVlbmNlKSA9PT0gbnVsbCB8fCBfZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Uubm9kZXMpIHtcbiAgICAgICAgcmV0dXJuIG5vZGUuc2VxdWVuY2Uubm9kZXMuc29tZSgobm9kZSkgPT4gaXRlcmF0ZU92ZXJRdWVyeVBsYW4obm9kZSwgcm9vdFBhdGgsIGYpKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gaXRlcmF0ZU92ZXJUcmFjZU5vZGUobm9kZSwgcGF0aCwgZikge1xuICAgIHZhciBfYSwgX2I7XG4gICAgaWYgKGYobm9kZSwgcGF0aCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiAoKF9iID0gKF9hID0gbm9kZS5jaGlsZCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNvbWUoKGNoaWxkKSA9PiB7XG4gICAgICAgIGNvbnN0IGNoaWxkUGF0aCA9IGNoaWxkLnJlc3BvbnNlTmFtZVxuICAgICAgICAgICAgPyBwYXRoLmNoaWxkKGNoaWxkLnJlc3BvbnNlTmFtZSlcbiAgICAgICAgICAgIDogcGF0aDtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdGVPdmVyVHJhY2VOb2RlKGNoaWxkLCBjaGlsZFBhdGgsIGYpO1xuICAgIH0pKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBmYWxzZSk7XG59XG5jb25zdCBub3RDb2xsZWN0aW5nUGF0aHNSZXNwb25zZU5hbWVQYXRoID0ge1xuICAgIHRvQXJyYXkoKSB7XG4gICAgICAgIHRocm93IEVycm9yKCdub3QgY29sbGVjdGluZyBwYXRocyEnKTtcbiAgICB9LFxuICAgIGNoaWxkKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxufTtcbmNsYXNzIFJvb3RDb2xsZWN0aW5nUGF0aHNSZXNwb25zZU5hbWVQYXRoIHtcbiAgICB0b0FycmF5KCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGNoaWxkKHJlc3BvbnNlTmFtZSkge1xuICAgICAgICByZXR1cm4gbmV3IENoaWxkQ29sbGVjdGluZ1BhdGhzUmVzcG9uc2VOYW1lUGF0aChyZXNwb25zZU5hbWUsIHRoaXMpO1xuICAgIH1cbn1cbmNsYXNzIENoaWxkQ29sbGVjdGluZ1BhdGhzUmVzcG9uc2VOYW1lUGF0aCB7XG4gICAgY29uc3RydWN0b3IocmVzcG9uc2VOYW1lLCBwcmV2KSB7XG4gICAgICAgIHRoaXMucmVzcG9uc2VOYW1lID0gcmVzcG9uc2VOYW1lO1xuICAgICAgICB0aGlzLnByZXYgPSBwcmV2O1xuICAgIH1cbiAgICB0b0FycmF5KCkge1xuICAgICAgICBjb25zdCBvdXQgPSBbXTtcbiAgICAgICAgbGV0IGN1cnIgPSB0aGlzO1xuICAgICAgICB3aGlsZSAoY3VyciBpbnN0YW5jZW9mIENoaWxkQ29sbGVjdGluZ1BhdGhzUmVzcG9uc2VOYW1lUGF0aCkge1xuICAgICAgICAgICAgb3V0LnB1c2goY3Vyci5yZXNwb25zZU5hbWUpO1xuICAgICAgICAgICAgY3VyciA9IGN1cnIucHJldjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0LnJldmVyc2UoKTtcbiAgICB9XG4gICAgY2hpbGQocmVzcG9uc2VOYW1lKSB7XG4gICAgICAgIHJldHVybiBuZXcgQ2hpbGRDb2xsZWN0aW5nUGF0aHNSZXNwb25zZU5hbWVQYXRoKHJlc3BvbnNlTmFtZSwgdGhpcyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXRlcmF0ZU92ZXJUcmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/iterateOverTrace.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/operationDerivedDataCache.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/usageReporting/operationDerivedDataCache.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.operationDerivedDataCacheKey = exports.createOperationDerivedDataCache = void 0;\nconst lru_cache_1 = __importDefault(__webpack_require__(/*! lru-cache */ \"(rsc)/./node_modules/apollo-server-core/node_modules/lru-cache/index.js\"));\nfunction createOperationDerivedDataCache({ logger, }) {\n    let lastWarn;\n    let lastDisposals = 0;\n    return new lru_cache_1.default({\n        length(obj) {\n            return Buffer.byteLength(JSON.stringify(obj), 'utf8');\n        },\n        max: Math.pow(2, 20) * 10,\n        dispose() {\n            lastDisposals++;\n            if (!lastWarn || new Date().getTime() - lastWarn.getTime() > 60000) {\n                lastWarn = new Date();\n                logger.warn([\n                    'This server is processing a high number of unique operations.  ',\n                    `A total of ${lastDisposals} records have been `,\n                    'ejected from the ApolloServerPluginUsageReporting signature cache in the past ',\n                    'interval.  If you see this warning frequently, please open an ',\n                    'issue on the Apollo Server repository.',\n                ].join(''));\n                lastDisposals = 0;\n            }\n        },\n    });\n}\nexports.createOperationDerivedDataCache = createOperationDerivedDataCache;\nfunction operationDerivedDataCacheKey(queryHash, operationName) {\n    return `${queryHash}${operationName && ':' + operationName}`;\n}\nexports.operationDerivedDataCacheKey = operationDerivedDataCacheKey;\n//# sourceMappingURL=operationDerivedDataCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL3VzYWdlUmVwb3J0aW5nL29wZXJhdGlvbkRlcml2ZWREYXRhQ2FjaGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0MsR0FBRyx1Q0FBdUM7QUFDOUUsb0NBQW9DLG1CQUFPLENBQUMsMEZBQVc7QUFDdkQsMkNBQTJDLFNBQVM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxlQUFlO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQSxjQUFjLFVBQVUsRUFBRSxxQ0FBcUM7QUFDL0Q7QUFDQSxvQ0FBb0M7QUFDcEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFxwbHVnaW5cXHVzYWdlUmVwb3J0aW5nXFxvcGVyYXRpb25EZXJpdmVkRGF0YUNhY2hlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5vcGVyYXRpb25EZXJpdmVkRGF0YUNhY2hlS2V5ID0gZXhwb3J0cy5jcmVhdGVPcGVyYXRpb25EZXJpdmVkRGF0YUNhY2hlID0gdm9pZCAwO1xuY29uc3QgbHJ1X2NhY2hlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImxydS1jYWNoZVwiKSk7XG5mdW5jdGlvbiBjcmVhdGVPcGVyYXRpb25EZXJpdmVkRGF0YUNhY2hlKHsgbG9nZ2VyLCB9KSB7XG4gICAgbGV0IGxhc3RXYXJuO1xuICAgIGxldCBsYXN0RGlzcG9zYWxzID0gMDtcbiAgICByZXR1cm4gbmV3IGxydV9jYWNoZV8xLmRlZmF1bHQoe1xuICAgICAgICBsZW5ndGgob2JqKSB7XG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmJ5dGVMZW5ndGgoSlNPTi5zdHJpbmdpZnkob2JqKSwgJ3V0ZjgnKTtcbiAgICAgICAgfSxcbiAgICAgICAgbWF4OiBNYXRoLnBvdygyLCAyMCkgKiAxMCxcbiAgICAgICAgZGlzcG9zZSgpIHtcbiAgICAgICAgICAgIGxhc3REaXNwb3NhbHMrKztcbiAgICAgICAgICAgIGlmICghbGFzdFdhcm4gfHwgbmV3IERhdGUoKS5nZXRUaW1lKCkgLSBsYXN0V2Fybi5nZXRUaW1lKCkgPiA2MDAwMCkge1xuICAgICAgICAgICAgICAgIGxhc3RXYXJuID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgICBsb2dnZXIud2FybihbXG4gICAgICAgICAgICAgICAgICAgICdUaGlzIHNlcnZlciBpcyBwcm9jZXNzaW5nIGEgaGlnaCBudW1iZXIgb2YgdW5pcXVlIG9wZXJhdGlvbnMuICAnLFxuICAgICAgICAgICAgICAgICAgICBgQSB0b3RhbCBvZiAke2xhc3REaXNwb3NhbHN9IHJlY29yZHMgaGF2ZSBiZWVuIGAsXG4gICAgICAgICAgICAgICAgICAgICdlamVjdGVkIGZyb20gdGhlIEFwb2xsb1NlcnZlclBsdWdpblVzYWdlUmVwb3J0aW5nIHNpZ25hdHVyZSBjYWNoZSBpbiB0aGUgcGFzdCAnLFxuICAgICAgICAgICAgICAgICAgICAnaW50ZXJ2YWwuICBJZiB5b3Ugc2VlIHRoaXMgd2FybmluZyBmcmVxdWVudGx5LCBwbGVhc2Ugb3BlbiBhbiAnLFxuICAgICAgICAgICAgICAgICAgICAnaXNzdWUgb24gdGhlIEFwb2xsbyBTZXJ2ZXIgcmVwb3NpdG9yeS4nLFxuICAgICAgICAgICAgICAgIF0uam9pbignJykpO1xuICAgICAgICAgICAgICAgIGxhc3REaXNwb3NhbHMgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZXhwb3J0cy5jcmVhdGVPcGVyYXRpb25EZXJpdmVkRGF0YUNhY2hlID0gY3JlYXRlT3BlcmF0aW9uRGVyaXZlZERhdGFDYWNoZTtcbmZ1bmN0aW9uIG9wZXJhdGlvbkRlcml2ZWREYXRhQ2FjaGVLZXkocXVlcnlIYXNoLCBvcGVyYXRpb25OYW1lKSB7XG4gICAgcmV0dXJuIGAke3F1ZXJ5SGFzaH0ke29wZXJhdGlvbk5hbWUgJiYgJzonICsgb3BlcmF0aW9uTmFtZX1gO1xufVxuZXhwb3J0cy5vcGVyYXRpb25EZXJpdmVkRGF0YUNhY2hlS2V5ID0gb3BlcmF0aW9uRGVyaXZlZERhdGFDYWNoZUtleTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9wZXJhdGlvbkRlcml2ZWREYXRhQ2FjaGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/operationDerivedDataCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/options.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/usageReporting/options.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=options.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL3VzYWdlUmVwb3J0aW5nL29wdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFxwbHVnaW5cXHVzYWdlUmVwb3J0aW5nXFxvcHRpb25zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3B0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/options.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/plugin.js":
/*!******************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/usageReporting/plugin.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApolloServerPluginUsageReportingDisabled = exports.makeHTTPRequestHeaders = exports.ApolloServerPluginUsageReporting = void 0;\nconst os_1 = __importDefault(__webpack_require__(/*! os */ \"os\"));\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst async_retry_1 = __importDefault(__webpack_require__(/*! async-retry */ \"(rsc)/./node_modules/async-retry/lib/index.js\"));\nconst apollo_reporting_protobuf_1 = __webpack_require__(/*! apollo-reporting-protobuf */ \"(rsc)/./node_modules/apollo-reporting-protobuf/generated/index.js\");\nconst apollo_server_env_1 = __webpack_require__(/*! apollo-server-env */ \"(rsc)/./node_modules/apollo-server-env/dist/index.js\");\nconst node_abort_controller_1 = __webpack_require__(/*! node-abort-controller */ \"(rsc)/./node_modules/node-abort-controller/index.js\");\nconst apollo_server_types_1 = __webpack_require__(/*! apollo-server-types */ \"(rsc)/./node_modules/apollo-server-types/dist/index.js\");\nconst operationDerivedDataCache_1 = __webpack_require__(/*! ./operationDerivedDataCache */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/operationDerivedDataCache.js\");\nconst utils_usagereporting_1 = __webpack_require__(/*! @apollo/utils.usagereporting */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/index.js\");\nconst traceTreeBuilder_1 = __webpack_require__(/*! ../traceTreeBuilder */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/traceTreeBuilder.js\");\nconst traceDetails_1 = __webpack_require__(/*! ./traceDetails */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/traceDetails.js\");\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst schemaReporting_1 = __webpack_require__(/*! ../schemaReporting */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/schemaReporting/index.js\");\nconst stats_1 = __webpack_require__(/*! ./stats */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/stats.js\");\nconst defaultSendOperationsAsTrace_1 = __webpack_require__(/*! ./defaultSendOperationsAsTrace */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/defaultSendOperationsAsTrace.js\");\nconst utils_usagereporting_2 = __webpack_require__(/*! @apollo/utils.usagereporting */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/index.js\");\nconst gzipPromise = (0, util_1.promisify)(zlib_1.gzip);\nconst reportHeaderDefaults = {\n    hostname: os_1.default.hostname(),\n    agentVersion: `apollo-server-core@${(__webpack_require__(/*! ../../../package.json */ \"(rsc)/./node_modules/apollo-server-core/package.json\").version)}`,\n    runtimeVersion: `node ${process.version}`,\n    uname: `${os_1.default.platform()}, ${os_1.default.type()}, ${os_1.default.release()}, ${os_1.default.arch()})`,\n};\nfunction ApolloServerPluginUsageReporting(options = Object.create(null)) {\n    const fieldLevelInstrumentationOption = options.fieldLevelInstrumentation;\n    const fieldLevelInstrumentation = typeof fieldLevelInstrumentationOption === 'number'\n        ? async () => Math.random() < fieldLevelInstrumentationOption\n            ? 1 / fieldLevelInstrumentationOption\n            : 0\n        : fieldLevelInstrumentationOption\n            ? fieldLevelInstrumentationOption\n            : async () => true;\n    let requestDidStartHandler;\n    return {\n        __internal_plugin_id__() {\n            return 'UsageReporting';\n        },\n        async requestDidStart(requestContext) {\n            if (!requestDidStartHandler) {\n                throw Error('The usage reporting plugin has been asked to handle a request before the ' +\n                    'server has started. See https://github.com/apollographql/apollo-server/issues/4588 ' +\n                    'for more details.');\n            }\n            return requestDidStartHandler(requestContext);\n        },\n        async serverWillStart({ logger: serverLogger, apollo, serverlessFramework, }) {\n            var _a, _b, _c, _d;\n            const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : serverLogger;\n            const { key, graphRef } = apollo;\n            if (!(key && graphRef)) {\n                throw new Error(\"You've enabled usage reporting via ApolloServerPluginUsageReporting, \" +\n                    'but you also need to provide your Apollo API key and graph ref, via ' +\n                    'the APOLLO_KEY/APOLLO_GRAPH_REF environment ' +\n                    'variables or via `new ApolloServer({apollo: {key, graphRef})`.');\n            }\n            logger.info('Apollo usage reporting starting! See your graph at ' +\n                `https://studio.apollographql.com/graph/${encodeURI(graphRef)}/`);\n            const sendReportsImmediately = (_b = options.sendReportsImmediately) !== null && _b !== void 0 ? _b : serverlessFramework;\n            let operationDerivedDataCache = null;\n            const reportByExecutableSchemaId = new Map();\n            const getReportWhichMustBeUsedImmediately = (executableSchemaId) => {\n                const existing = reportByExecutableSchemaId.get(executableSchemaId);\n                if (existing) {\n                    return existing;\n                }\n                const report = new stats_1.OurReport(new apollo_reporting_protobuf_1.ReportHeader({\n                    ...reportHeaderDefaults,\n                    executableSchemaId,\n                    graphRef,\n                }));\n                reportByExecutableSchemaId.set(executableSchemaId, report);\n                return report;\n            };\n            const getAndDeleteReport = (executableSchemaId) => {\n                const report = reportByExecutableSchemaId.get(executableSchemaId);\n                if (report) {\n                    reportByExecutableSchemaId.delete(executableSchemaId);\n                    return report;\n                }\n                return null;\n            };\n            const overriddenExecutableSchemaId = options.overrideReportedSchema\n                ? (0, schemaReporting_1.computeCoreSchemaHash)(options.overrideReportedSchema)\n                : undefined;\n            let lastSeenExecutableSchemaToId;\n            let reportTimer;\n            if (!sendReportsImmediately) {\n                reportTimer = setInterval(() => sendAllReportsAndReportErrors(), options.reportIntervalMs || 10 * 1000);\n            }\n            let graphMightSupportTraces = true;\n            const sendOperationAsTrace = (_c = options.experimental_sendOperationAsTrace) !== null && _c !== void 0 ? _c : (0, defaultSendOperationsAsTrace_1.defaultSendOperationsAsTrace)();\n            const includeTracesContributingToStats = (_d = options.internal_includeTracesContributingToStats) !== null && _d !== void 0 ? _d : false;\n            let stopped = false;\n            function executableSchemaIdForSchema(schema) {\n                if ((lastSeenExecutableSchemaToId === null || lastSeenExecutableSchemaToId === void 0 ? void 0 : lastSeenExecutableSchemaToId.executableSchema) === schema) {\n                    return lastSeenExecutableSchemaToId.executableSchemaId;\n                }\n                const id = (0, schemaReporting_1.computeCoreSchemaHash)((0, graphql_1.printSchema)(schema));\n                lastSeenExecutableSchemaToId = {\n                    executableSchema: schema,\n                    executableSchemaId: id,\n                };\n                return id;\n            }\n            async function sendAllReportsAndReportErrors() {\n                await Promise.all([...reportByExecutableSchemaId.keys()].map((executableSchemaId) => sendReportAndReportErrors(executableSchemaId)));\n            }\n            async function sendReportAndReportErrors(executableSchemaId) {\n                return sendReport(executableSchemaId).catch((err) => {\n                    if (options.reportErrorFunction) {\n                        options.reportErrorFunction(err);\n                    }\n                    else {\n                        logger.error(err.message);\n                    }\n                });\n            }\n            const sendReport = async (executableSchemaId) => {\n                var _a, _b;\n                let report = getAndDeleteReport(executableSchemaId);\n                if (!report ||\n                    (Object.keys(report.tracesPerQuery).length === 0 &&\n                        report.operationCount === 0)) {\n                    return;\n                }\n                report.endTime = (0, traceTreeBuilder_1.dateToProtoTimestamp)(new Date());\n                report.ensureCountsAreIntegers();\n                const protobufError = apollo_reporting_protobuf_1.Report.verify(report);\n                if (protobufError) {\n                    throw new Error(`Error verifying report: ${protobufError}`);\n                }\n                let message = apollo_reporting_protobuf_1.Report.encode(report).finish();\n                report = null;\n                if (options.debugPrintReports) {\n                    const decodedReport = apollo_reporting_protobuf_1.Report.decode(message);\n                    logger.warn(`Apollo usage report: ${JSON.stringify(decodedReport.toJSON())}`);\n                }\n                const compressed = await gzipPromise(message);\n                message = null;\n                const fetcher = (_a = options.fetcher) !== null && _a !== void 0 ? _a : apollo_server_env_1.fetch;\n                const response = await (0, async_retry_1.default)(async () => {\n                    var _a;\n                    const controller = new node_abort_controller_1.AbortController();\n                    const abortTimeout = setTimeout(() => {\n                        controller.abort();\n                    }, (_a = options.requestTimeoutMs) !== null && _a !== void 0 ? _a : 30000);\n                    let curResponse;\n                    try {\n                        const requestInit = {\n                            method: 'POST',\n                            headers: {\n                                'user-agent': 'ApolloServerPluginUsageReporting',\n                                'x-api-key': key,\n                                'content-encoding': 'gzip',\n                                accept: 'application/json',\n                            },\n                            body: compressed,\n                            agent: options.requestAgent,\n                        };\n                        requestInit.signal = controller.signal;\n                        curResponse = await fetcher((options.endpointUrl ||\n                            'https://usage-reporting.api.apollographql.com') +\n                            '/api/ingress/traces', requestInit);\n                    }\n                    finally {\n                        clearTimeout(abortTimeout);\n                    }\n                    if (curResponse.status >= 500 && curResponse.status < 600) {\n                        throw new Error(`HTTP status ${curResponse.status}, ${(await curResponse.text()) || '(no body)'}`);\n                    }\n                    else {\n                        return curResponse;\n                    }\n                }, {\n                    retries: (options.maxAttempts || 5) - 1,\n                    minTimeout: options.minimumRetryDelayMs || 100,\n                    factor: 2,\n                }).catch((err) => {\n                    throw new Error(`Error sending report to Apollo servers: ${err.message}`);\n                });\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(`Error sending report to Apollo servers: HTTP status ${response.status}, ${(await response.text()) || '(no body)'}`);\n                }\n                if (graphMightSupportTraces &&\n                    response.status === 200 &&\n                    ((_b = response.headers\n                        .get('content-type')) === null || _b === void 0 ? void 0 : _b.match(/^\\s*application\\/json\\s*(?:;|$)/i))) {\n                    const body = await response.text();\n                    let parsedBody;\n                    try {\n                        parsedBody = JSON.parse(body);\n                    }\n                    catch (e) {\n                        throw new Error(`Error parsing response from Apollo servers: ${e}`);\n                    }\n                    if (parsedBody.tracesIgnored === true) {\n                        logger.debug(\"This graph's organization does not have access to traces; sending all \" +\n                            'subsequent operations as traces.');\n                        graphMightSupportTraces = false;\n                    }\n                }\n                if (options.debugPrintReports) {\n                    logger.warn(`Apollo usage report: status ${response.status}`);\n                }\n            };\n            requestDidStartHandler = ({ logger: requestLogger, metrics, schema, request: { http, variables }, }) => {\n                var _a;\n                const logger = (_a = requestLogger !== null && requestLogger !== void 0 ? requestLogger : options.logger) !== null && _a !== void 0 ? _a : serverLogger;\n                const treeBuilder = new traceTreeBuilder_1.TraceTreeBuilder({\n                    rewriteError: options.rewriteError,\n                    logger,\n                });\n                treeBuilder.startTiming();\n                metrics.startHrTime = treeBuilder.startHrTime;\n                let graphqlValidationFailure = false;\n                let graphqlUnknownOperationName = false;\n                let includeOperationInUsageReporting = null;\n                if (http) {\n                    treeBuilder.trace.http = new apollo_reporting_protobuf_1.Trace.HTTP({\n                        method: apollo_reporting_protobuf_1.Trace.HTTP.Method[http.method] || apollo_reporting_protobuf_1.Trace.HTTP.Method.UNKNOWN,\n                    });\n                    if (options.sendHeaders) {\n                        makeHTTPRequestHeaders(treeBuilder.trace.http, http.headers, options.sendHeaders);\n                    }\n                }\n                async function maybeCallIncludeRequestHook(requestContext) {\n                    if (includeOperationInUsageReporting !== null)\n                        return;\n                    if (typeof options.includeRequest !== 'function') {\n                        includeOperationInUsageReporting = true;\n                        return;\n                    }\n                    includeOperationInUsageReporting = await options.includeRequest(requestContext);\n                    if (typeof includeOperationInUsageReporting !== 'boolean') {\n                        logger.warn(\"The 'includeRequest' async predicate function must return a boolean value.\");\n                        includeOperationInUsageReporting = true;\n                    }\n                }\n                let didResolveSource = false;\n                return {\n                    async didResolveSource(requestContext) {\n                        didResolveSource = true;\n                        if (metrics.persistedQueryHit) {\n                            treeBuilder.trace.persistedQueryHit = true;\n                        }\n                        if (metrics.persistedQueryRegister) {\n                            treeBuilder.trace.persistedQueryRegister = true;\n                        }\n                        if (variables) {\n                            treeBuilder.trace.details = (0, traceDetails_1.makeTraceDetails)(variables, options.sendVariableValues, requestContext.source);\n                        }\n                        const clientInfo = (options.generateClientInfo || defaultGenerateClientInfo)(requestContext);\n                        if (clientInfo) {\n                            const { clientName, clientVersion } = clientInfo;\n                            treeBuilder.trace.clientVersion = clientVersion || '';\n                            treeBuilder.trace.clientName = clientName || '';\n                        }\n                    },\n                    async validationDidStart() {\n                        return async (validationErrors) => {\n                            graphqlValidationFailure = validationErrors\n                                ? validationErrors.length !== 0\n                                : false;\n                        };\n                    },\n                    async didResolveOperation(requestContext) {\n                        graphqlUnknownOperationName =\n                            requestContext.operation === undefined;\n                        await maybeCallIncludeRequestHook(requestContext);\n                        if (includeOperationInUsageReporting &&\n                            !graphqlUnknownOperationName) {\n                            if (metrics.captureTraces === undefined) {\n                                const rawWeight = await fieldLevelInstrumentation(requestContext);\n                                treeBuilder.trace.fieldExecutionWeight =\n                                    typeof rawWeight === 'number' ? rawWeight : rawWeight ? 1 : 0;\n                                metrics.captureTraces =\n                                    !!treeBuilder.trace.fieldExecutionWeight;\n                            }\n                        }\n                    },\n                    async executionDidStart() {\n                        if (!metrics.captureTraces)\n                            return;\n                        return {\n                            willResolveField({ info }) {\n                                return treeBuilder.willResolveField(info);\n                            },\n                        };\n                    },\n                    async willSendResponse(requestContext) {\n                        if (!didResolveSource)\n                            return;\n                        if (requestContext.errors) {\n                            treeBuilder.didEncounterErrors(requestContext.errors);\n                        }\n                        const resolvedOperation = !!requestContext.operation;\n                        await maybeCallIncludeRequestHook(requestContext);\n                        treeBuilder.stopTiming();\n                        const executableSchemaId = overriddenExecutableSchemaId !== null && overriddenExecutableSchemaId !== void 0 ? overriddenExecutableSchemaId : executableSchemaIdForSchema(schema);\n                        if (includeOperationInUsageReporting === false) {\n                            if (resolvedOperation)\n                                getReportWhichMustBeUsedImmediately(executableSchemaId)\n                                    .operationCount++;\n                            return;\n                        }\n                        treeBuilder.trace.fullQueryCacheHit = !!metrics.responseCacheHit;\n                        treeBuilder.trace.forbiddenOperation = !!metrics.forbiddenOperation;\n                        treeBuilder.trace.registeredOperation =\n                            !!metrics.registeredOperation;\n                        const policyIfCacheable = requestContext.overallCachePolicy.policyIfCacheable();\n                        if (policyIfCacheable) {\n                            treeBuilder.trace.cachePolicy = new apollo_reporting_protobuf_1.Trace.CachePolicy({\n                                scope: policyIfCacheable.scope === apollo_server_types_1.CacheScope.Private\n                                    ? apollo_reporting_protobuf_1.Trace.CachePolicy.Scope.PRIVATE\n                                    : policyIfCacheable.scope === apollo_server_types_1.CacheScope.Public\n                                        ? apollo_reporting_protobuf_1.Trace.CachePolicy.Scope.PUBLIC\n                                        : apollo_reporting_protobuf_1.Trace.CachePolicy.Scope.UNKNOWN,\n                                maxAgeNs: policyIfCacheable.maxAge * 1e9,\n                            });\n                        }\n                        if (metrics.queryPlanTrace) {\n                            treeBuilder.trace.queryPlan = metrics.queryPlanTrace;\n                        }\n                        addTrace().catch(logger.error);\n                        async function addTrace() {\n                            if (stopped) {\n                                return;\n                            }\n                            await new Promise((res) => setImmediate(res));\n                            const executableSchemaId = overriddenExecutableSchemaId !== null && overriddenExecutableSchemaId !== void 0 ? overriddenExecutableSchemaId : executableSchemaIdForSchema(schema);\n                            const { trace } = treeBuilder;\n                            let statsReportKey = undefined;\n                            let referencedFieldsByType;\n                            if (!requestContext.document) {\n                                statsReportKey = `## GraphQLParseFailure\\n`;\n                            }\n                            else if (graphqlValidationFailure) {\n                                statsReportKey = `## GraphQLValidationFailure\\n`;\n                            }\n                            else if (graphqlUnknownOperationName) {\n                                statsReportKey = `## GraphQLUnknownOperationName\\n`;\n                            }\n                            const isExecutable = statsReportKey === undefined;\n                            if (statsReportKey) {\n                                if (options.sendUnexecutableOperationDocuments) {\n                                    trace.unexecutedOperationBody = requestContext.source;\n                                    trace.unexecutedOperationName =\n                                        requestContext.request.operationName || '';\n                                }\n                                referencedFieldsByType = Object.create(null);\n                            }\n                            else {\n                                const operationDerivedData = getOperationDerivedData();\n                                statsReportKey = `# ${requestContext.operationName || '-'}\\n${operationDerivedData.signature}`;\n                                referencedFieldsByType =\n                                    operationDerivedData.referencedFieldsByType;\n                            }\n                            const protobufError = apollo_reporting_protobuf_1.Trace.verify(trace);\n                            if (protobufError) {\n                                throw new Error(`Error encoding trace: ${protobufError}`);\n                            }\n                            if (resolvedOperation) {\n                                getReportWhichMustBeUsedImmediately(executableSchemaId)\n                                    .operationCount++;\n                            }\n                            getReportWhichMustBeUsedImmediately(executableSchemaId).addTrace({\n                                statsReportKey,\n                                trace,\n                                asTrace: graphMightSupportTraces &&\n                                    (!isExecutable || !!metrics.captureTraces) &&\n                                    sendOperationAsTrace(trace, statsReportKey),\n                                includeTracesContributingToStats,\n                                referencedFieldsByType,\n                            });\n                            if (sendReportsImmediately ||\n                                getReportWhichMustBeUsedImmediately(executableSchemaId)\n                                    .sizeEstimator.bytes >=\n                                    (options.maxUncompressedReportSize || 4 * 1024 * 1024)) {\n                                await sendReportAndReportErrors(executableSchemaId);\n                            }\n                        }\n                        function getOperationDerivedData() {\n                            var _a;\n                            if (!requestContext.document) {\n                                throw new Error('No document?');\n                            }\n                            const cacheKey = (0, operationDerivedDataCache_1.operationDerivedDataCacheKey)(requestContext.queryHash, requestContext.operationName || '');\n                            if (!operationDerivedDataCache ||\n                                operationDerivedDataCache.forSchema !== schema) {\n                                operationDerivedDataCache = {\n                                    forSchema: schema,\n                                    cache: (0, operationDerivedDataCache_1.createOperationDerivedDataCache)({ logger }),\n                                };\n                            }\n                            const cachedOperationDerivedData = operationDerivedDataCache.cache.get(cacheKey);\n                            if (cachedOperationDerivedData) {\n                                return cachedOperationDerivedData;\n                            }\n                            const generatedSignature = (options.calculateSignature || utils_usagereporting_1.usageReportingSignature)(requestContext.document, requestContext.operationName || '');\n                            const generatedOperationDerivedData = {\n                                signature: generatedSignature,\n                                referencedFieldsByType: (0, utils_usagereporting_2.calculateReferencedFieldsByType)({\n                                    document: requestContext.document,\n                                    schema,\n                                    resolvedOperationName: (_a = requestContext.operationName) !== null && _a !== void 0 ? _a : null,\n                                }),\n                            };\n                            operationDerivedDataCache.cache.set(cacheKey, generatedOperationDerivedData);\n                            return generatedOperationDerivedData;\n                        }\n                    },\n                };\n            };\n            return {\n                async serverWillStop() {\n                    if (reportTimer) {\n                        clearInterval(reportTimer);\n                        reportTimer = undefined;\n                    }\n                    stopped = true;\n                    await sendAllReportsAndReportErrors();\n                },\n            };\n        },\n    };\n}\nexports.ApolloServerPluginUsageReporting = ApolloServerPluginUsageReporting;\nfunction makeHTTPRequestHeaders(http, headers, sendHeaders) {\n    if (!sendHeaders ||\n        ('none' in sendHeaders && sendHeaders.none) ||\n        ('all' in sendHeaders && !sendHeaders.all)) {\n        return;\n    }\n    for (const [key, value] of headers) {\n        const lowerCaseKey = key.toLowerCase();\n        if (('exceptNames' in sendHeaders &&\n            sendHeaders.exceptNames.some((exceptHeader) => {\n                return exceptHeader.toLowerCase() === lowerCaseKey;\n            })) ||\n            ('onlyNames' in sendHeaders &&\n                !sendHeaders.onlyNames.some((header) => {\n                    return header.toLowerCase() === lowerCaseKey;\n                }))) {\n            continue;\n        }\n        switch (key) {\n            case 'authorization':\n            case 'cookie':\n            case 'set-cookie':\n                break;\n            default:\n                http.requestHeaders[key] = new apollo_reporting_protobuf_1.Trace.HTTP.Values({\n                    value: [value],\n                });\n        }\n    }\n}\nexports.makeHTTPRequestHeaders = makeHTTPRequestHeaders;\nfunction defaultGenerateClientInfo({ request }) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const clientNameHeaderKey = 'apollographql-client-name';\n    const clientVersionHeaderKey = 'apollographql-client-version';\n    if (((_b = (_a = request.http) === null || _a === void 0 ? void 0 : _a.headers) === null || _b === void 0 ? void 0 : _b.get(clientNameHeaderKey)) ||\n        ((_d = (_c = request.http) === null || _c === void 0 ? void 0 : _c.headers) === null || _d === void 0 ? void 0 : _d.get(clientVersionHeaderKey))) {\n        return {\n            clientName: (_f = (_e = request.http) === null || _e === void 0 ? void 0 : _e.headers) === null || _f === void 0 ? void 0 : _f.get(clientNameHeaderKey),\n            clientVersion: (_h = (_g = request.http) === null || _g === void 0 ? void 0 : _g.headers) === null || _h === void 0 ? void 0 : _h.get(clientVersionHeaderKey),\n        };\n    }\n    else if ((_j = request.extensions) === null || _j === void 0 ? void 0 : _j.clientInfo) {\n        return request.extensions.clientInfo;\n    }\n    else {\n        return {};\n    }\n}\nfunction ApolloServerPluginUsageReportingDisabled() {\n    return {\n        __internal_plugin_id__() {\n            return 'UsageReporting';\n        },\n    };\n}\nexports.ApolloServerPluginUsageReportingDisabled = ApolloServerPluginUsageReportingDisabled;\n//# sourceMappingURL=plugin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/plugin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/stats.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/usageReporting/stats.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OurContextualizedStats = exports.OurReport = exports.SizeEstimator = void 0;\nconst durationHistogram_1 = __webpack_require__(/*! ./durationHistogram */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/durationHistogram.js\");\nconst apollo_reporting_protobuf_1 = __webpack_require__(/*! apollo-reporting-protobuf */ \"(rsc)/./node_modules/apollo-reporting-protobuf/generated/index.js\");\nconst iterateOverTrace_1 = __webpack_require__(/*! ./iterateOverTrace */ \"(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/iterateOverTrace.js\");\nclass SizeEstimator {\n    constructor() {\n        this.bytes = 0;\n    }\n}\nexports.SizeEstimator = SizeEstimator;\nclass OurReport {\n    constructor(header) {\n        this.header = header;\n        this.tracesPreAggregated = false;\n        this.tracesPerQuery = Object.create(null);\n        this.endTime = null;\n        this.operationCount = 0;\n        this.sizeEstimator = new SizeEstimator();\n    }\n    ensureCountsAreIntegers() {\n        for (const tracesAndStats of Object.values(this.tracesPerQuery)) {\n            tracesAndStats.ensureCountsAreIntegers();\n        }\n    }\n    addTrace({ statsReportKey, trace, asTrace, includeTracesContributingToStats, referencedFieldsByType, }) {\n        const tracesAndStats = this.getTracesAndStats({\n            statsReportKey,\n            referencedFieldsByType,\n        });\n        if (asTrace) {\n            const encodedTrace = apollo_reporting_protobuf_1.Trace.encode(trace).finish();\n            tracesAndStats.trace.push(encodedTrace);\n            this.sizeEstimator.bytes += 2 + encodedTrace.length;\n        }\n        else {\n            tracesAndStats.statsWithContext.addTrace(trace, this.sizeEstimator);\n            if (includeTracesContributingToStats) {\n                const encodedTrace = apollo_reporting_protobuf_1.Trace.encode(trace).finish();\n                tracesAndStats.internalTracesContributingToStats.push(encodedTrace);\n                this.sizeEstimator.bytes += 2 + encodedTrace.length;\n            }\n        }\n    }\n    getTracesAndStats({ statsReportKey, referencedFieldsByType, }) {\n        const existing = this.tracesPerQuery[statsReportKey];\n        if (existing) {\n            return existing;\n        }\n        this.sizeEstimator.bytes += estimatedBytesForString(statsReportKey);\n        for (const [typeName, referencedFieldsForType] of Object.entries(referencedFieldsByType)) {\n            this.sizeEstimator.bytes += 2 + 2;\n            if (referencedFieldsForType.isInterface) {\n                this.sizeEstimator.bytes += 2;\n            }\n            this.sizeEstimator.bytes += estimatedBytesForString(typeName);\n            for (const fieldName of referencedFieldsForType.fieldNames) {\n                this.sizeEstimator.bytes += estimatedBytesForString(fieldName);\n            }\n        }\n        return (this.tracesPerQuery[statsReportKey] = new OurTracesAndStats(referencedFieldsByType));\n    }\n}\nexports.OurReport = OurReport;\nclass OurTracesAndStats {\n    constructor(referencedFieldsByType) {\n        this.referencedFieldsByType = referencedFieldsByType;\n        this.trace = [];\n        this.statsWithContext = new StatsByContext();\n        this.internalTracesContributingToStats = [];\n    }\n    ensureCountsAreIntegers() {\n        this.statsWithContext.ensureCountsAreIntegers();\n    }\n}\nclass StatsByContext {\n    constructor() {\n        this.map = Object.create(null);\n    }\n    toArray() {\n        return Object.values(this.map);\n    }\n    ensureCountsAreIntegers() {\n        for (const contextualizedStats of Object.values(this.map)) {\n            contextualizedStats.ensureCountsAreIntegers();\n        }\n    }\n    addTrace(trace, sizeEstimator) {\n        this.getContextualizedStats(trace, sizeEstimator).addTrace(trace, sizeEstimator);\n    }\n    getContextualizedStats(trace, sizeEstimator) {\n        const statsContext = {\n            clientName: trace.clientName,\n            clientVersion: trace.clientVersion,\n        };\n        const statsContextKey = JSON.stringify(statsContext);\n        const existing = this.map[statsContextKey];\n        if (existing) {\n            return existing;\n        }\n        sizeEstimator.bytes +=\n            20 +\n                estimatedBytesForString(trace.clientName) +\n                estimatedBytesForString(trace.clientVersion);\n        const contextualizedStats = new OurContextualizedStats(statsContext);\n        this.map[statsContextKey] = contextualizedStats;\n        return contextualizedStats;\n    }\n}\nclass OurContextualizedStats {\n    constructor(context) {\n        this.context = context;\n        this.queryLatencyStats = new OurQueryLatencyStats();\n        this.perTypeStat = Object.create(null);\n    }\n    ensureCountsAreIntegers() {\n        for (const typeStat of Object.values(this.perTypeStat)) {\n            typeStat.ensureCountsAreIntegers();\n        }\n    }\n    addTrace(trace, sizeEstimator) {\n        var _a;\n        const { fieldExecutionWeight } = trace;\n        if (!fieldExecutionWeight) {\n            this.queryLatencyStats.requestsWithoutFieldInstrumentation++;\n        }\n        this.queryLatencyStats.requestCount++;\n        if (trace.fullQueryCacheHit) {\n            this.queryLatencyStats.cacheLatencyCount.incrementDuration(trace.durationNs);\n            this.queryLatencyStats.cacheHits++;\n        }\n        else {\n            this.queryLatencyStats.latencyCount.incrementDuration(trace.durationNs);\n        }\n        if (!trace.fullQueryCacheHit && ((_a = trace.cachePolicy) === null || _a === void 0 ? void 0 : _a.maxAgeNs) != null) {\n            switch (trace.cachePolicy.scope) {\n                case apollo_reporting_protobuf_1.Trace.CachePolicy.Scope.PRIVATE:\n                    this.queryLatencyStats.privateCacheTtlCount.incrementDuration(trace.cachePolicy.maxAgeNs);\n                    break;\n                case apollo_reporting_protobuf_1.Trace.CachePolicy.Scope.PUBLIC:\n                    this.queryLatencyStats.publicCacheTtlCount.incrementDuration(trace.cachePolicy.maxAgeNs);\n                    break;\n            }\n        }\n        if (trace.persistedQueryHit) {\n            this.queryLatencyStats.persistedQueryHits++;\n        }\n        if (trace.persistedQueryRegister) {\n            this.queryLatencyStats.persistedQueryMisses++;\n        }\n        if (trace.forbiddenOperation) {\n            this.queryLatencyStats.forbiddenOperationCount++;\n        }\n        if (trace.registeredOperation) {\n            this.queryLatencyStats.registeredOperationCount++;\n        }\n        let hasError = false;\n        const traceNodeStats = (node, path) => {\n            var _a, _b, _c, _d, _e;\n            if ((_a = node.error) === null || _a === void 0 ? void 0 : _a.length) {\n                hasError = true;\n                let currPathErrorStats = this.queryLatencyStats.rootErrorStats;\n                path.toArray().forEach((subPath) => {\n                    currPathErrorStats = currPathErrorStats.getChild(subPath, sizeEstimator);\n                });\n                currPathErrorStats.requestsWithErrorsCount += 1;\n                currPathErrorStats.errorsCount += node.error.length;\n            }\n            if (fieldExecutionWeight) {\n                const fieldName = node.originalFieldName || node.responseName;\n                if (node.parentType &&\n                    fieldName &&\n                    node.type &&\n                    node.endTime != null &&\n                    node.startTime != null &&\n                    node.endTime >= node.startTime) {\n                    const typeStat = this.getTypeStat(node.parentType, sizeEstimator);\n                    const fieldStat = typeStat.getFieldStat(fieldName, node.type, sizeEstimator);\n                    fieldStat.errorsCount += (_c = (_b = node.error) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0;\n                    fieldStat.observedExecutionCount++;\n                    fieldStat.estimatedExecutionCount += fieldExecutionWeight;\n                    fieldStat.requestsWithErrorsCount +=\n                        ((_e = (_d = node.error) === null || _d === void 0 ? void 0 : _d.length) !== null && _e !== void 0 ? _e : 0) > 0 ? 1 : 0;\n                    fieldStat.latencyCount.incrementDuration(node.endTime - node.startTime, fieldExecutionWeight);\n                }\n            }\n            return false;\n        };\n        (0, iterateOverTrace_1.iterateOverTrace)(trace, traceNodeStats, true);\n        if (hasError) {\n            this.queryLatencyStats.requestsWithErrorsCount++;\n        }\n    }\n    getTypeStat(parentType, sizeEstimator) {\n        const existing = this.perTypeStat[parentType];\n        if (existing) {\n            return existing;\n        }\n        sizeEstimator.bytes += estimatedBytesForString(parentType);\n        const typeStat = new OurTypeStat();\n        this.perTypeStat[parentType] = typeStat;\n        return typeStat;\n    }\n}\nexports.OurContextualizedStats = OurContextualizedStats;\nclass OurQueryLatencyStats {\n    constructor() {\n        this.latencyCount = new durationHistogram_1.DurationHistogram();\n        this.requestCount = 0;\n        this.requestsWithoutFieldInstrumentation = 0;\n        this.cacheHits = 0;\n        this.persistedQueryHits = 0;\n        this.persistedQueryMisses = 0;\n        this.cacheLatencyCount = new durationHistogram_1.DurationHistogram();\n        this.rootErrorStats = new OurPathErrorStats();\n        this.requestsWithErrorsCount = 0;\n        this.publicCacheTtlCount = new durationHistogram_1.DurationHistogram();\n        this.privateCacheTtlCount = new durationHistogram_1.DurationHistogram();\n        this.registeredOperationCount = 0;\n        this.forbiddenOperationCount = 0;\n    }\n}\nclass OurPathErrorStats {\n    constructor() {\n        this.children = Object.create(null);\n        this.errorsCount = 0;\n        this.requestsWithErrorsCount = 0;\n    }\n    getChild(subPath, sizeEstimator) {\n        const existing = this.children[subPath];\n        if (existing) {\n            return existing;\n        }\n        const child = new OurPathErrorStats();\n        this.children[subPath] = child;\n        sizeEstimator.bytes += estimatedBytesForString(subPath) + 4;\n        return child;\n    }\n}\nclass OurTypeStat {\n    constructor() {\n        this.perFieldStat = Object.create(null);\n    }\n    getFieldStat(fieldName, returnType, sizeEstimator) {\n        const existing = this.perFieldStat[fieldName];\n        if (existing) {\n            return existing;\n        }\n        sizeEstimator.bytes +=\n            estimatedBytesForString(fieldName) +\n                estimatedBytesForString(returnType) +\n                10;\n        const fieldStat = new OurFieldStat(returnType);\n        this.perFieldStat[fieldName] = fieldStat;\n        return fieldStat;\n    }\n    ensureCountsAreIntegers() {\n        for (const fieldStat of Object.values(this.perFieldStat)) {\n            fieldStat.ensureCountsAreIntegers();\n        }\n    }\n}\nclass OurFieldStat {\n    constructor(returnType) {\n        this.returnType = returnType;\n        this.errorsCount = 0;\n        this.observedExecutionCount = 0;\n        this.estimatedExecutionCount = 0;\n        this.requestsWithErrorsCount = 0;\n        this.latencyCount = new durationHistogram_1.DurationHistogram();\n    }\n    ensureCountsAreIntegers() {\n        this.estimatedExecutionCount = Math.floor(this.estimatedExecutionCount);\n    }\n}\nfunction estimatedBytesForString(s) {\n    return 2 + Buffer.byteLength(s);\n}\n//# sourceMappingURL=stats.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/stats.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/traceDetails.js":
/*!************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/plugin/usageReporting/traceDetails.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeTraceDetails = void 0;\nconst apollo_reporting_protobuf_1 = __webpack_require__(/*! apollo-reporting-protobuf */ \"(rsc)/./node_modules/apollo-reporting-protobuf/generated/index.js\");\nfunction makeTraceDetails(variables, sendVariableValues, operationString) {\n    const details = new apollo_reporting_protobuf_1.Trace.Details();\n    const variablesToRecord = (() => {\n        if (sendVariableValues && 'transform' in sendVariableValues) {\n            const originalKeys = Object.keys(variables);\n            try {\n                const modifiedVariables = sendVariableValues.transform({\n                    variables: variables,\n                    operationString: operationString,\n                });\n                return cleanModifiedVariables(originalKeys, modifiedVariables);\n            }\n            catch (e) {\n                return handleVariableValueTransformError(originalKeys);\n            }\n        }\n        else {\n            return variables;\n        }\n    })();\n    Object.keys(variablesToRecord).forEach((name) => {\n        if (!sendVariableValues ||\n            ('none' in sendVariableValues && sendVariableValues.none) ||\n            ('all' in sendVariableValues && !sendVariableValues.all) ||\n            ('exceptNames' in sendVariableValues &&\n                sendVariableValues.exceptNames.includes(name)) ||\n            ('onlyNames' in sendVariableValues &&\n                !sendVariableValues.onlyNames.includes(name))) {\n            details.variablesJson[name] = '';\n        }\n        else {\n            try {\n                details.variablesJson[name] =\n                    typeof variablesToRecord[name] === 'undefined'\n                        ? ''\n                        : JSON.stringify(variablesToRecord[name]);\n            }\n            catch (e) {\n                details.variablesJson[name] = JSON.stringify('[Unable to convert value to JSON]');\n            }\n        }\n    });\n    return details;\n}\nexports.makeTraceDetails = makeTraceDetails;\nfunction handleVariableValueTransformError(variableNames) {\n    const modifiedVariables = Object.create(null);\n    variableNames.forEach((name) => {\n        modifiedVariables[name] = '[PREDICATE_FUNCTION_ERROR]';\n    });\n    return modifiedVariables;\n}\nfunction cleanModifiedVariables(originalKeys, modifiedVariables) {\n    const cleanedVariables = Object.create(null);\n    originalKeys.forEach((name) => {\n        cleanedVariables[name] = modifiedVariables[name];\n    });\n    return cleanedVariables;\n}\n//# sourceMappingURL=traceDetails.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvcGx1Z2luL3VzYWdlUmVwb3J0aW5nL3RyYWNlRGV0YWlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsb0NBQW9DLG1CQUFPLENBQUMsb0dBQTJCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXHBsdWdpblxcdXNhZ2VSZXBvcnRpbmdcXHRyYWNlRGV0YWlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWFrZVRyYWNlRGV0YWlscyA9IHZvaWQgMDtcbmNvbnN0IGFwb2xsb19yZXBvcnRpbmdfcHJvdG9idWZfMSA9IHJlcXVpcmUoXCJhcG9sbG8tcmVwb3J0aW5nLXByb3RvYnVmXCIpO1xuZnVuY3Rpb24gbWFrZVRyYWNlRGV0YWlscyh2YXJpYWJsZXMsIHNlbmRWYXJpYWJsZVZhbHVlcywgb3BlcmF0aW9uU3RyaW5nKSB7XG4gICAgY29uc3QgZGV0YWlscyA9IG5ldyBhcG9sbG9fcmVwb3J0aW5nX3Byb3RvYnVmXzEuVHJhY2UuRGV0YWlscygpO1xuICAgIGNvbnN0IHZhcmlhYmxlc1RvUmVjb3JkID0gKCgpID0+IHtcbiAgICAgICAgaWYgKHNlbmRWYXJpYWJsZVZhbHVlcyAmJiAndHJhbnNmb3JtJyBpbiBzZW5kVmFyaWFibGVWYWx1ZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsS2V5cyA9IE9iamVjdC5rZXlzKHZhcmlhYmxlcyk7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1vZGlmaWVkVmFyaWFibGVzID0gc2VuZFZhcmlhYmxlVmFsdWVzLnRyYW5zZm9ybSh7XG4gICAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczogdmFyaWFibGVzLFxuICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb25TdHJpbmc6IG9wZXJhdGlvblN0cmluZyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2xlYW5Nb2RpZmllZFZhcmlhYmxlcyhvcmlnaW5hbEtleXMsIG1vZGlmaWVkVmFyaWFibGVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZVZhcmlhYmxlVmFsdWVUcmFuc2Zvcm1FcnJvcihvcmlnaW5hbEtleXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHZhcmlhYmxlcztcbiAgICAgICAgfVxuICAgIH0pKCk7XG4gICAgT2JqZWN0LmtleXModmFyaWFibGVzVG9SZWNvcmQpLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICAgICAgaWYgKCFzZW5kVmFyaWFibGVWYWx1ZXMgfHxcbiAgICAgICAgICAgICgnbm9uZScgaW4gc2VuZFZhcmlhYmxlVmFsdWVzICYmIHNlbmRWYXJpYWJsZVZhbHVlcy5ub25lKSB8fFxuICAgICAgICAgICAgKCdhbGwnIGluIHNlbmRWYXJpYWJsZVZhbHVlcyAmJiAhc2VuZFZhcmlhYmxlVmFsdWVzLmFsbCkgfHxcbiAgICAgICAgICAgICgnZXhjZXB0TmFtZXMnIGluIHNlbmRWYXJpYWJsZVZhbHVlcyAmJlxuICAgICAgICAgICAgICAgIHNlbmRWYXJpYWJsZVZhbHVlcy5leGNlcHROYW1lcy5pbmNsdWRlcyhuYW1lKSkgfHxcbiAgICAgICAgICAgICgnb25seU5hbWVzJyBpbiBzZW5kVmFyaWFibGVWYWx1ZXMgJiZcbiAgICAgICAgICAgICAgICAhc2VuZFZhcmlhYmxlVmFsdWVzLm9ubHlOYW1lcy5pbmNsdWRlcyhuYW1lKSkpIHtcbiAgICAgICAgICAgIGRldGFpbHMudmFyaWFibGVzSnNvbltuYW1lXSA9ICcnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBkZXRhaWxzLnZhcmlhYmxlc0pzb25bbmFtZV0gPVxuICAgICAgICAgICAgICAgICAgICB0eXBlb2YgdmFyaWFibGVzVG9SZWNvcmRbbmFtZV0gPT09ICd1bmRlZmluZWQnXG4gICAgICAgICAgICAgICAgICAgICAgICA/ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICA6IEpTT04uc3RyaW5naWZ5KHZhcmlhYmxlc1RvUmVjb3JkW25hbWVdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgZGV0YWlscy52YXJpYWJsZXNKc29uW25hbWVdID0gSlNPTi5zdHJpbmdpZnkoJ1tVbmFibGUgdG8gY29udmVydCB2YWx1ZSB0byBKU09OXScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGRldGFpbHM7XG59XG5leHBvcnRzLm1ha2VUcmFjZURldGFpbHMgPSBtYWtlVHJhY2VEZXRhaWxzO1xuZnVuY3Rpb24gaGFuZGxlVmFyaWFibGVWYWx1ZVRyYW5zZm9ybUVycm9yKHZhcmlhYmxlTmFtZXMpIHtcbiAgICBjb25zdCBtb2RpZmllZFZhcmlhYmxlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgdmFyaWFibGVOYW1lcy5mb3JFYWNoKChuYW1lKSA9PiB7XG4gICAgICAgIG1vZGlmaWVkVmFyaWFibGVzW25hbWVdID0gJ1tQUkVESUNBVEVfRlVOQ1RJT05fRVJST1JdJztcbiAgICB9KTtcbiAgICByZXR1cm4gbW9kaWZpZWRWYXJpYWJsZXM7XG59XG5mdW5jdGlvbiBjbGVhbk1vZGlmaWVkVmFyaWFibGVzKG9yaWdpbmFsS2V5cywgbW9kaWZpZWRWYXJpYWJsZXMpIHtcbiAgICBjb25zdCBjbGVhbmVkVmFyaWFibGVzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBvcmlnaW5hbEtleXMuZm9yRWFjaCgobmFtZSkgPT4ge1xuICAgICAgICBjbGVhbmVkVmFyaWFibGVzW25hbWVdID0gbW9kaWZpZWRWYXJpYWJsZXNbbmFtZV07XG4gICAgfSk7XG4gICAgcmV0dXJuIGNsZWFuZWRWYXJpYWJsZXM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjZURldGFpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/plugin/usageReporting/traceDetails.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/requestPipeline.js":
/*!*****************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/requestPipeline.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.processGraphQLRequest = exports.APQ_CACHE_PREFIX = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst schemaInstrumentation_1 = __webpack_require__(/*! ./utils/schemaInstrumentation */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/schemaInstrumentation.js\");\nconst apollo_server_errors_1 = __webpack_require__(/*! apollo-server-errors */ \"(rsc)/./node_modules/apollo-server-errors/dist/index.js\");\nconst dispatcher_1 = __webpack_require__(/*! ./utils/dispatcher */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/dispatcher.js\");\nconst utils_keyvaluecache_1 = __webpack_require__(/*! @apollo/utils.keyvaluecache */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/index.js\");\nconst createSHA_1 = __importDefault(__webpack_require__(/*! ./utils/createSHA */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/createSHA.js\"));\nconst runHttpQuery_1 = __webpack_require__(/*! ./runHttpQuery */ \"(rsc)/./node_modules/apollo-server-core/dist/runHttpQuery.js\");\nconst apollo_server_env_1 = __webpack_require__(/*! apollo-server-env */ \"(rsc)/./node_modules/apollo-server-env/dist/index.js\");\nexports.APQ_CACHE_PREFIX = 'apq:';\nfunction computeQueryHash(query) {\n    return (0, createSHA_1.default)('sha256').update(query).digest('hex');\n}\nfunction isBadUserInputGraphQLError(error) {\n    var _a;\n    return (((_a = error.nodes) === null || _a === void 0 ? void 0 : _a.length) === 1 &&\n        error.nodes[0].kind === graphql_1.Kind.VARIABLE_DEFINITION &&\n        (error.message.startsWith(`Variable \"$${error.nodes[0].variable.name.value}\" got invalid value `) ||\n            error.message.startsWith(`Variable \"$${error.nodes[0].variable.name.value}\" of required type `) ||\n            error.message.startsWith(`Variable \"$${error.nodes[0].variable.name.value}\" of non-null type `)));\n}\nasync function processGraphQLRequest(config, requestContext) {\n    var _a, _b;\n    const logger = requestContext.logger || console;\n    const metrics = (requestContext.metrics =\n        requestContext.metrics || Object.create(null));\n    const dispatcher = await initializeRequestListenerDispatcher();\n    await initializeDataSources();\n    const request = requestContext.request;\n    let { query, extensions } = request;\n    let queryHash;\n    let persistedQueryCache;\n    metrics.persistedQueryHit = false;\n    metrics.persistedQueryRegister = false;\n    if (extensions === null || extensions === void 0 ? void 0 : extensions.persistedQuery) {\n        if (!config.persistedQueries || !config.persistedQueries.cache) {\n            return await sendErrorResponse(new apollo_server_errors_1.PersistedQueryNotSupportedError());\n        }\n        else if (extensions.persistedQuery.version !== 1) {\n            return await sendErrorResponse(new graphql_1.GraphQLError('Unsupported persisted query version'));\n        }\n        persistedQueryCache = config.persistedQueries.cache;\n        if (!(persistedQueryCache instanceof utils_keyvaluecache_1.PrefixingKeyValueCache)) {\n            persistedQueryCache = new utils_keyvaluecache_1.PrefixingKeyValueCache(persistedQueryCache, exports.APQ_CACHE_PREFIX);\n        }\n        queryHash = extensions.persistedQuery.sha256Hash;\n        if (query === undefined) {\n            query = await persistedQueryCache.get(queryHash);\n            if (query) {\n                metrics.persistedQueryHit = true;\n            }\n            else {\n                return await sendErrorResponse(new apollo_server_errors_1.PersistedQueryNotFoundError());\n            }\n        }\n        else {\n            const computedQueryHash = computeQueryHash(query);\n            if (queryHash !== computedQueryHash) {\n                return await sendErrorResponse(new graphql_1.GraphQLError('provided sha does not match query'));\n            }\n            metrics.persistedQueryRegister = true;\n        }\n    }\n    else if (query) {\n        queryHash = computeQueryHash(query);\n    }\n    else {\n        return await sendErrorResponse(new graphql_1.GraphQLError('GraphQL operations must contain a non-empty `query` or a `persistedQuery` extension.'));\n    }\n    requestContext.queryHash = queryHash;\n    requestContext.source = query;\n    await dispatcher.invokeHook('didResolveSource', requestContext);\n    if (config.documentStore) {\n        try {\n            requestContext.document = await config.documentStore.get(queryHash);\n        }\n        catch (err) {\n            logger.warn('An error occurred while attempting to read from the documentStore. ' +\n                (err === null || err === void 0 ? void 0 : err.message) || 0);\n        }\n    }\n    if (!requestContext.document) {\n        const parsingDidEnd = await dispatcher.invokeDidStartHook('parsingDidStart', requestContext);\n        try {\n            requestContext.document = parse(query, config.parseOptions);\n            await parsingDidEnd();\n        }\n        catch (syntaxError) {\n            await parsingDidEnd(syntaxError);\n            return await sendErrorResponse(syntaxError, apollo_server_errors_1.SyntaxError);\n        }\n        if (config.dangerouslyDisableValidation !== true) {\n            const validationDidEnd = await dispatcher.invokeDidStartHook('validationDidStart', requestContext);\n            const validationErrors = validate(requestContext.document);\n            if (validationErrors.length === 0) {\n                await validationDidEnd();\n            }\n            else {\n                await validationDidEnd(validationErrors);\n                return await sendErrorResponse(validationErrors, apollo_server_errors_1.ValidationError);\n            }\n        }\n        if (config.documentStore) {\n            Promise.resolve(config.documentStore.set(queryHash, requestContext.document)).catch((err) => logger.warn('Could not store validated document. ' + (err === null || err === void 0 ? void 0 : err.message) || 0));\n        }\n    }\n    const operation = (0, graphql_1.getOperationAST)(requestContext.document, request.operationName);\n    requestContext.operation = operation || undefined;\n    requestContext.operationName = ((_a = operation === null || operation === void 0 ? void 0 : operation.name) === null || _a === void 0 ? void 0 : _a.value) || null;\n    try {\n        await dispatcher.invokeHook('didResolveOperation', requestContext);\n    }\n    catch (err) {\n        return await sendErrorResponse(err);\n    }\n    if (metrics.persistedQueryRegister && persistedQueryCache) {\n        Promise.resolve(persistedQueryCache.set(queryHash, query, config.persistedQueries &&\n            typeof config.persistedQueries.ttl !== 'undefined'\n            ? {\n                ttl: config.persistedQueries.ttl,\n            }\n            : Object.create(null))).catch(logger.warn);\n    }\n    let response = await dispatcher.invokeHooksUntilNonNull('responseForOperation', requestContext);\n    if (response == null) {\n        const executionListeners = [];\n        (await dispatcher.invokeHook('executionDidStart', requestContext)).forEach((executionListener) => {\n            if (executionListener) {\n                executionListeners.push(executionListener);\n            }\n        });\n        executionListeners.reverse();\n        const executionDispatcher = new dispatcher_1.Dispatcher(executionListeners);\n        if (executionDispatcher.hasHook('willResolveField')) {\n            const invokeWillResolveField = (...args) => executionDispatcher.invokeSyncDidStartHook('willResolveField', ...args);\n            Object.defineProperty(requestContext.context, schemaInstrumentation_1.symbolExecutionDispatcherWillResolveField, { value: invokeWillResolveField });\n            if (config.fieldResolver) {\n                Object.defineProperty(requestContext.context, schemaInstrumentation_1.symbolUserFieldResolver, {\n                    value: config.fieldResolver,\n                });\n            }\n            (0, schemaInstrumentation_1.enablePluginsForSchemaResolvers)(config.schema);\n        }\n        try {\n            const result = await execute(requestContext);\n            const resultErrors = (_b = result.errors) === null || _b === void 0 ? void 0 : _b.map((e) => {\n                if (isBadUserInputGraphQLError(e)) {\n                    return (0, apollo_server_errors_1.fromGraphQLError)(e, {\n                        errorClass: apollo_server_errors_1.UserInputError,\n                    });\n                }\n                return e;\n            });\n            if (resultErrors) {\n                await didEncounterErrors(resultErrors);\n            }\n            response = {\n                ...result,\n                errors: resultErrors ? formatErrors(resultErrors) : undefined,\n            };\n            await executionDispatcher.invokeHook('executionDidEnd');\n        }\n        catch (executionError) {\n            await executionDispatcher.invokeHook('executionDidEnd', executionError);\n            return await sendErrorResponse(executionError);\n        }\n    }\n    if (config.formatResponse) {\n        const formattedResponse = config.formatResponse(response, requestContext);\n        if (formattedResponse != null) {\n            response = formattedResponse;\n        }\n    }\n    return sendResponse(response);\n    function parse(query, parseOptions) {\n        return (0, graphql_1.parse)(query, parseOptions);\n    }\n    function validate(document) {\n        let rules = graphql_1.specifiedRules;\n        if (config.validationRules) {\n            rules = rules.concat(config.validationRules);\n        }\n        return (0, graphql_1.validate)(config.schema, document, rules);\n    }\n    async function execute(requestContext) {\n        const { request, document } = requestContext;\n        const executionArgs = {\n            schema: config.schema,\n            document,\n            rootValue: typeof config.rootValue === 'function'\n                ? config.rootValue(document)\n                : config.rootValue,\n            contextValue: requestContext.context,\n            variableValues: request.variables,\n            operationName: request.operationName,\n            fieldResolver: config.fieldResolver,\n        };\n        if (config.executor) {\n            return await config.executor(requestContext);\n        }\n        else {\n            return await (0, graphql_1.execute)(executionArgs);\n        }\n    }\n    async function sendResponse(response) {\n        requestContext.response = {\n            ...requestContext.response,\n            errors: response.errors,\n            data: response.data,\n            extensions: response.extensions,\n        };\n        if (response.http) {\n            if (!requestContext.response.http) {\n                requestContext.response.http = {\n                    headers: new apollo_server_env_1.Headers(),\n                };\n            }\n            if (response.http.status) {\n                requestContext.response.http.status = response.http.status;\n            }\n            for (const [name, value] of response.http.headers) {\n                requestContext.response.http.headers.set(name, value);\n            }\n        }\n        await dispatcher.invokeHook('willSendResponse', requestContext);\n        return requestContext.response;\n    }\n    async function didEncounterErrors(errors) {\n        requestContext.errors = errors;\n        return await dispatcher.invokeHook('didEncounterErrors', requestContext);\n    }\n    async function sendErrorResponse(errorOrErrors, errorClass) {\n        const errors = Array.isArray(errorOrErrors)\n            ? errorOrErrors\n            : [errorOrErrors];\n        await didEncounterErrors(errors);\n        const response = {\n            errors: formatErrors(errors.map((err) => err instanceof apollo_server_errors_1.ApolloError && !errorClass\n                ? err\n                : (0, apollo_server_errors_1.fromGraphQLError)(err, errorClass && {\n                    errorClass,\n                }))),\n        };\n        if (errors.every((err) => err instanceof apollo_server_errors_1.PersistedQueryNotSupportedError ||\n            err instanceof apollo_server_errors_1.PersistedQueryNotFoundError)) {\n            response.http = {\n                status: 200,\n                headers: new apollo_server_env_1.Headers({\n                    'Cache-Control': 'private, no-cache, must-revalidate',\n                }),\n            };\n        }\n        else if (errors.length === 1 && errors[0] instanceof runHttpQuery_1.HttpQueryError) {\n            response.http = {\n                status: errors[0].statusCode,\n                headers: new apollo_server_env_1.Headers(errors[0].headers),\n            };\n        }\n        return sendResponse(response);\n    }\n    function formatErrors(errors) {\n        return (0, apollo_server_errors_1.formatApolloErrors)(errors, {\n            formatter: config.formatError,\n            debug: requestContext.debug,\n        });\n    }\n    async function initializeRequestListenerDispatcher() {\n        const requestListeners = [];\n        if (config.plugins) {\n            for (const plugin of config.plugins) {\n                if (!plugin.requestDidStart)\n                    continue;\n                const listener = await plugin.requestDidStart(requestContext);\n                if (listener) {\n                    requestListeners.push(listener);\n                }\n            }\n        }\n        return new dispatcher_1.Dispatcher(requestListeners);\n    }\n    async function initializeDataSources() {\n        if (config.dataSources) {\n            const context = requestContext.context;\n            const dataSources = config.dataSources();\n            const initializers = [];\n            for (const dataSource of Object.values(dataSources)) {\n                if (dataSource.initialize) {\n                    initializers.push(dataSource.initialize({\n                        context,\n                        cache: requestContext.cache,\n                    }));\n                }\n            }\n            await Promise.all(initializers);\n            if ('dataSources' in context) {\n                throw new Error('Please use the dataSources config option instead of putting dataSources on the context yourself.');\n            }\n            context.dataSources = dataSources;\n        }\n    }\n}\nexports.processGraphQLRequest = processGraphQLRequest;\n//# sourceMappingURL=requestPipeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/requestPipeline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/runHttpQuery.js":
/*!**************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/runHttpQuery.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cloneObject = exports.processHTTPRequest = exports.runHttpQuery = exports.throwHttpGraphQLError = exports.isHttpQueryError = exports.HttpQueryError = void 0;\nconst apollo_server_env_1 = __webpack_require__(/*! apollo-server-env */ \"(rsc)/./node_modules/apollo-server-env/dist/index.js\");\nconst apollo_server_errors_1 = __webpack_require__(/*! apollo-server-errors */ \"(rsc)/./node_modules/apollo-server-errors/dist/index.js\");\nconst whatwg_mimetype_1 = __importDefault(__webpack_require__(/*! whatwg-mimetype */ \"(rsc)/./node_modules/whatwg-mimetype/lib/mime-type.js\"));\nconst cachePolicy_1 = __webpack_require__(/*! ./cachePolicy */ \"(rsc)/./node_modules/apollo-server-core/dist/cachePolicy.js\");\nconst graphqlOptions_1 = __webpack_require__(/*! ./graphqlOptions */ \"(rsc)/./node_modules/apollo-server-core/dist/graphqlOptions.js\");\nconst requestPipeline_1 = __webpack_require__(/*! ./requestPipeline */ \"(rsc)/./node_modules/apollo-server-core/dist/requestPipeline.js\");\nclass HttpQueryError extends Error {\n    constructor(statusCode, message, isGraphQLError = false, headers) {\n        super(message);\n        this.name = 'HttpQueryError';\n        this.statusCode = statusCode;\n        this.isGraphQLError = isGraphQLError;\n        this.headers = headers;\n    }\n}\nexports.HttpQueryError = HttpQueryError;\nfunction isHttpQueryError(e) {\n    return (e === null || e === void 0 ? void 0 : e.name) === 'HttpQueryError';\n}\nexports.isHttpQueryError = isHttpQueryError;\nfunction throwHttpGraphQLError(statusCode, errors, options, extensions, headers) {\n    const allHeaders = {\n        'Content-Type': 'application/json',\n    };\n    if (headers) {\n        for (const [name, value] of headers) {\n            allHeaders[name] = value;\n        }\n    }\n    const result = {\n        errors: options\n            ? (0, apollo_server_errors_1.formatApolloErrors)(errors, {\n                debug: options.debug,\n                formatter: options.formatError,\n            })\n            : errors,\n    };\n    if (extensions) {\n        result.extensions = extensions;\n    }\n    throw new HttpQueryError(statusCode, prettyJSONStringify(result), true, allHeaders);\n}\nexports.throwHttpGraphQLError = throwHttpGraphQLError;\nconst NODE_ENV = (_a = \"development\") !== null && _a !== void 0 ? _a : '';\nconst NON_PREFLIGHTED_CONTENT_TYPES = [\n    'application/x-www-form-urlencoded',\n    'multipart/form-data',\n    'text/plain',\n];\nfunction preventCsrf(headers, csrfPreventionRequestHeaders) {\n    const contentType = headers.get('content-type');\n    if (contentType !== null) {\n        const contentTypeParsed = whatwg_mimetype_1.default.parse(contentType);\n        if (contentTypeParsed === null) {\n            return;\n        }\n        if (!NON_PREFLIGHTED_CONTENT_TYPES.includes(contentTypeParsed.essence)) {\n            return;\n        }\n    }\n    if (csrfPreventionRequestHeaders.some((header) => {\n        const value = headers.get(header);\n        return value !== null && value.length > 0;\n    })) {\n        return;\n    }\n    throw new HttpQueryError(400, `This operation has been blocked as a potential Cross-Site Request Forgery ` +\n        `(CSRF). Please either specify a 'content-type' header (with a type that ` +\n        `is not one of ${NON_PREFLIGHTED_CONTENT_TYPES.join(', ')}) or provide ` +\n        `a non-empty value for one of the following headers: ${csrfPreventionRequestHeaders.join(', ')}\\n`);\n}\nasync function runHttpQuery(handlerArguments, request, csrfPreventionRequestHeaders) {\n    function debugFromNodeEnv(nodeEnv = NODE_ENV) {\n        return nodeEnv !== 'production' && nodeEnv !== 'test';\n    }\n    if (csrfPreventionRequestHeaders) {\n        preventCsrf(request.request.headers, csrfPreventionRequestHeaders);\n    }\n    let options;\n    try {\n        options = await (0, graphqlOptions_1.resolveGraphqlOptions)(request.options, ...handlerArguments);\n    }\n    catch (e) {\n        return throwHttpGraphQLError(500, [e], {\n            debug: debugFromNodeEnv(),\n        });\n    }\n    if (options.debug === undefined) {\n        options.debug = debugFromNodeEnv(options.nodeEnv);\n    }\n    if (typeof options.context === 'function') {\n        try {\n            options.context();\n        }\n        catch (e) {\n            e.message = `Context creation failed: ${e.message}`;\n            if (e.extensions &&\n                e.extensions.code &&\n                e.extensions.code !== 'INTERNAL_SERVER_ERROR') {\n                return throwHttpGraphQLError(400, [e], options);\n            }\n            else {\n                return throwHttpGraphQLError(500, [e], options);\n            }\n        }\n    }\n    const config = {\n        schema: options.schema,\n        schemaHash: options.schemaHash,\n        logger: options.logger,\n        rootValue: options.rootValue,\n        context: options.context || {},\n        validationRules: options.validationRules,\n        executor: options.executor,\n        fieldResolver: options.fieldResolver,\n        cache: options.cache,\n        dataSources: options.dataSources,\n        dangerouslyDisableValidation: options.dangerouslyDisableValidation,\n        documentStore: options.documentStore,\n        persistedQueries: options.persistedQueries,\n        formatError: options.formatError,\n        formatResponse: options.formatResponse,\n        debug: options.debug,\n        plugins: options.plugins || [],\n        allowBatchedHttpRequests: options.allowBatchedHttpRequests,\n    };\n    return processHTTPRequest(config, request);\n}\nexports.runHttpQuery = runHttpQuery;\nasync function processHTTPRequest(options, httpRequest) {\n    var _a, _b;\n    let requestPayload;\n    switch (httpRequest.method) {\n        case 'POST':\n            if (!httpRequest.query ||\n                typeof httpRequest.query === 'string' ||\n                Buffer.isBuffer(httpRequest.query) ||\n                Object.keys(httpRequest.query).length === 0) {\n                throw new HttpQueryError(400, 'POST body missing, invalid Content-Type, or JSON object has no keys.');\n            }\n            requestPayload = httpRequest.query;\n            break;\n        case 'GET':\n            if (!httpRequest.query || Object.keys(httpRequest.query).length === 0) {\n                throw new HttpQueryError(400, 'GET query missing.');\n            }\n            requestPayload = httpRequest.query;\n            break;\n        default:\n            throw new HttpQueryError(405, 'Apollo Server supports only GET/POST requests.', false, {\n                Allow: 'GET, POST',\n            });\n    }\n    options = {\n        ...options,\n        plugins: [checkOperationPlugin, ...options.plugins],\n    };\n    function buildRequestContext(request, requestIsBatched) {\n        const context = cloneObject(options.context);\n        return {\n            logger: options.logger || console,\n            schema: options.schema,\n            schemaHash: options.schemaHash,\n            request,\n            response: {\n                http: {\n                    headers: new apollo_server_env_1.Headers(),\n                },\n            },\n            context,\n            cache: options.cache,\n            debug: options.debug,\n            metrics: {},\n            overallCachePolicy: (0, cachePolicy_1.newCachePolicy)(),\n            requestIsBatched,\n        };\n    }\n    const responseInit = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n    let body;\n    try {\n        if (Array.isArray(requestPayload)) {\n            if (options.allowBatchedHttpRequests === false) {\n                return throwHttpGraphQLError(400, [new Error('Operation batching disabled.')], options);\n            }\n            const requests = requestPayload.map((requestParams) => parseGraphQLRequest(httpRequest.request, requestParams));\n            const responses = await Promise.all(requests.map(async (request) => {\n                try {\n                    const requestContext = buildRequestContext(request, true);\n                    const response = await (0, requestPipeline_1.processGraphQLRequest)(options, requestContext);\n                    if (response.http) {\n                        for (const [name, value] of response.http.headers) {\n                            responseInit.headers[name] = value;\n                        }\n                        if (response.http.status) {\n                            responseInit.status = response.http.status;\n                        }\n                    }\n                    return response;\n                }\n                catch (error) {\n                    return {\n                        errors: (0, apollo_server_errors_1.formatApolloErrors)([error], options),\n                    };\n                }\n            }));\n            body = prettyJSONStringify(responses.map(serializeGraphQLResponse));\n        }\n        else {\n            const request = parseGraphQLRequest(httpRequest.request, requestPayload);\n            const requestContext = buildRequestContext(request, false);\n            const response = await (0, requestPipeline_1.processGraphQLRequest)(options, requestContext);\n            if (response.errors && typeof response.data === 'undefined') {\n                return throwHttpGraphQLError(((_a = response.http) === null || _a === void 0 ? void 0 : _a.status) || 400, response.errors, undefined, response.extensions, (_b = response.http) === null || _b === void 0 ? void 0 : _b.headers);\n            }\n            if (response.http) {\n                for (const [name, value] of response.http.headers) {\n                    responseInit.headers[name] = value;\n                }\n                if (response.http.status) {\n                    responseInit.status = response.http.status;\n                }\n            }\n            body = prettyJSONStringify(serializeGraphQLResponse(response));\n        }\n    }\n    catch (error) {\n        if (error instanceof HttpQueryError) {\n            throw error;\n        }\n        return throwHttpGraphQLError(500, [error], options);\n    }\n    responseInit.headers['Content-Length'] = Buffer.byteLength(body, 'utf8').toString();\n    return {\n        graphqlResponse: body,\n        responseInit,\n    };\n}\nexports.processHTTPRequest = processHTTPRequest;\nfunction parseGraphQLRequest(httpRequest, requestParams) {\n    let queryString = requestParams.query;\n    let extensions = requestParams.extensions;\n    if (typeof extensions === 'string' && extensions !== '') {\n        try {\n            extensions = JSON.parse(extensions);\n        }\n        catch (error) {\n            throw new HttpQueryError(400, 'Extensions are invalid JSON.');\n        }\n    }\n    if (queryString && typeof queryString !== 'string') {\n        if (queryString.kind === 'Document') {\n            throw new HttpQueryError(400, \"GraphQL queries must be strings. It looks like you're sending the \" +\n                'internal graphql-js representation of a parsed query in your ' +\n                'request instead of a request in the GraphQL query language. You ' +\n                'can convert an AST to a string using the `print` function from ' +\n                '`graphql`, or use a client like `apollo-client` which converts ' +\n                'the internal representation to a string for you.');\n        }\n        else {\n            throw new HttpQueryError(400, 'GraphQL queries must be strings.');\n        }\n    }\n    const operationName = requestParams.operationName;\n    let variables = requestParams.variables;\n    if (typeof variables === 'string' && variables !== '') {\n        try {\n            variables = JSON.parse(variables);\n        }\n        catch (error) {\n            throw new HttpQueryError(400, 'Variables are invalid JSON.');\n        }\n    }\n    return {\n        query: queryString,\n        operationName,\n        variables,\n        extensions,\n        http: httpRequest,\n    };\n}\nconst checkOperationPlugin = {\n    async requestDidStart() {\n        return {\n            async didResolveOperation({ request, operation }) {\n                if (!request.http)\n                    return;\n                if (request.http.method === 'GET' && operation.operation !== 'query') {\n                    throw new HttpQueryError(405, `GET supports only query operation`, false, {\n                        Allow: 'POST',\n                    });\n                }\n            },\n        };\n    },\n};\nfunction serializeGraphQLResponse(response) {\n    return {\n        errors: response.errors,\n        data: response.data,\n        extensions: response.extensions,\n    };\n}\nfunction prettyJSONStringify(value) {\n    return JSON.stringify(value) + '\\n';\n}\nfunction cloneObject(object) {\n    return Object.assign(Object.create(Object.getPrototypeOf(object)), object);\n}\nexports.cloneObject = cloneObject;\n//# sourceMappingURL=runHttpQuery.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/runHttpQuery.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/types.js":
/*!*******************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/types.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFx0eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/utils/UnboundedCache.js":
/*!**********************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/utils/UnboundedCache.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnboundedCache = void 0;\nclass UnboundedCache {\n    constructor(cache = new Map()) {\n        this.cache = cache;\n    }\n    async get(key) {\n        const entry = this.cache.get(key);\n        if (!entry)\n            return undefined;\n        if (entry.deadline && entry.deadline <= Date.now()) {\n            await this.delete(key);\n            return undefined;\n        }\n        return entry.value;\n    }\n    async set(key, value, { ttl } = { ttl: null }) {\n        this.cache.set(key, {\n            value,\n            deadline: ttl ? Date.now() + ttl * 1000 : null,\n        });\n    }\n    async delete(key) {\n        this.cache.delete(key);\n    }\n}\nexports.UnboundedCache = UnboundedCache;\n//# sourceMappingURL=UnboundedCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvdXRpbHMvVW5ib3VuZGVkQ2FjaGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsTUFBTSxJQUFJLFdBQVc7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFx1dGlsc1xcVW5ib3VuZGVkQ2FjaGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVuYm91bmRlZENhY2hlID0gdm9pZCAwO1xuY2xhc3MgVW5ib3VuZGVkQ2FjaGUge1xuICAgIGNvbnN0cnVjdG9yKGNhY2hlID0gbmV3IE1hcCgpKSB7XG4gICAgICAgIHRoaXMuY2FjaGUgPSBjYWNoZTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0KGtleSkge1xuICAgICAgICBjb25zdCBlbnRyeSA9IHRoaXMuY2FjaGUuZ2V0KGtleSk7XG4gICAgICAgIGlmICghZW50cnkpXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoZW50cnkuZGVhZGxpbmUgJiYgZW50cnkuZGVhZGxpbmUgPD0gRGF0ZS5ub3coKSkge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5kZWxldGUoa2V5KTtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVudHJ5LnZhbHVlO1xuICAgIH1cbiAgICBhc3luYyBzZXQoa2V5LCB2YWx1ZSwgeyB0dGwgfSA9IHsgdHRsOiBudWxsIH0pIHtcbiAgICAgICAgdGhpcy5jYWNoZS5zZXQoa2V5LCB7XG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgIGRlYWRsaW5lOiB0dGwgPyBEYXRlLm5vdygpICsgdHRsICogMTAwMCA6IG51bGwsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhc3luYyBkZWxldGUoa2V5KSB7XG4gICAgICAgIHRoaXMuY2FjaGUuZGVsZXRlKGtleSk7XG4gICAgfVxufVxuZXhwb3J0cy5VbmJvdW5kZWRDYWNoZSA9IFVuYm91bmRlZENhY2hlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VW5ib3VuZGVkQ2FjaGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/utils/UnboundedCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/utils/createSHA.js":
/*!*****************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/utils/createSHA.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst isNodeLike_1 = __importDefault(__webpack_require__(/*! ./isNodeLike */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/isNodeLike.js\"));\nfunction default_1(kind) {\n    if (isNodeLike_1.default) {\n        return __webpack_require__(/*! crypto */ \"crypto\").createHash(kind);\n    }\n    return __webpack_require__(/*! sha.js */ \"(rsc)/./node_modules/sha.js/index.js\")(kind);\n}\nexports[\"default\"] = default_1;\n//# sourceMappingURL=createSHA.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvdXRpbHMvY3JlYXRlU0hBLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDLG1CQUFPLENBQUMsc0ZBQWM7QUFDM0Q7QUFDQTtBQUNBLGVBQWUsbUJBQWMsQ0FBQyxzQkFBUTtBQUN0QztBQUNBLFdBQVcsbUJBQU8sQ0FBQyxvREFBUTtBQUMzQjtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFx1dGlsc1xcY3JlYXRlU0hBLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgaXNOb2RlTGlrZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2lzTm9kZUxpa2VcIikpO1xuZnVuY3Rpb24gZGVmYXVsdF8xKGtpbmQpIHtcbiAgICBpZiAoaXNOb2RlTGlrZV8xLmRlZmF1bHQpIHtcbiAgICAgICAgcmV0dXJuIG1vZHVsZS5yZXF1aXJlKCdjcnlwdG8nKS5jcmVhdGVIYXNoKGtpbmQpO1xuICAgIH1cbiAgICByZXR1cm4gcmVxdWlyZSgnc2hhLmpzJykoa2luZCk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBkZWZhdWx0XzE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVTSEEuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/utils/createSHA.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/utils/dispatcher.js":
/*!******************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/utils/dispatcher.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Dispatcher = void 0;\nclass Dispatcher {\n    constructor(targets) {\n        this.targets = targets;\n    }\n    callTargets(methodName, ...args) {\n        return this.targets.map((target) => {\n            const method = target[methodName];\n            if (typeof method === 'function') {\n                return method.apply(target, args);\n            }\n        });\n    }\n    hasHook(methodName) {\n        return this.targets.some((target) => typeof target[methodName] === 'function');\n    }\n    async invokeHook(methodName, ...args) {\n        return Promise.all(this.callTargets(methodName, ...args));\n    }\n    async invokeHooksUntilNonNull(methodName, ...args) {\n        for (const target of this.targets) {\n            const method = target[methodName];\n            if (typeof method !== 'function') {\n                continue;\n            }\n            const value = await method.apply(target, args);\n            if (value !== null) {\n                return value;\n            }\n        }\n        return null;\n    }\n    async invokeDidStartHook(methodName, ...args) {\n        const hookReturnValues = await Promise.all(this.callTargets(methodName, ...args));\n        const didEndHooks = hookReturnValues.filter((hook) => !!hook);\n        didEndHooks.reverse();\n        return async (...args) => {\n            await Promise.all(didEndHooks.map((hook) => hook(...args)));\n        };\n    }\n    invokeSyncDidStartHook(methodName, ...args) {\n        const didEndHooks = [];\n        for (const target of this.targets) {\n            const method = target[methodName];\n            if (typeof method === 'function') {\n                const didEndHook = method.apply(target, args);\n                if (didEndHook) {\n                    didEndHooks.push(didEndHook);\n                }\n            }\n        }\n        didEndHooks.reverse();\n        return (...args) => {\n            for (const didEndHook of didEndHooks) {\n                didEndHook(...args);\n            }\n        };\n    }\n}\nexports.Dispatcher = Dispatcher;\n//# sourceMappingURL=dispatcher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvdXRpbHMvZGlzcGF0Y2hlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXHV0aWxzXFxkaXNwYXRjaGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EaXNwYXRjaGVyID0gdm9pZCAwO1xuY2xhc3MgRGlzcGF0Y2hlciB7XG4gICAgY29uc3RydWN0b3IodGFyZ2V0cykge1xuICAgICAgICB0aGlzLnRhcmdldHMgPSB0YXJnZXRzO1xuICAgIH1cbiAgICBjYWxsVGFyZ2V0cyhtZXRob2ROYW1lLCAuLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRhcmdldHMubWFwKCh0YXJnZXQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG1ldGhvZCA9IHRhcmdldFttZXRob2ROYW1lXTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbWV0aG9kID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1ldGhvZC5hcHBseSh0YXJnZXQsIGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgaGFzSG9vayhtZXRob2ROYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRhcmdldHMuc29tZSgodGFyZ2V0KSA9PiB0eXBlb2YgdGFyZ2V0W21ldGhvZE5hbWVdID09PSAnZnVuY3Rpb24nKTtcbiAgICB9XG4gICAgYXN5bmMgaW52b2tlSG9vayhtZXRob2ROYW1lLCAuLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbCh0aGlzLmNhbGxUYXJnZXRzKG1ldGhvZE5hbWUsIC4uLmFyZ3MpKTtcbiAgICB9XG4gICAgYXN5bmMgaW52b2tlSG9va3NVbnRpbE5vbk51bGwobWV0aG9kTmFtZSwgLi4uYXJncykge1xuICAgICAgICBmb3IgKGNvbnN0IHRhcmdldCBvZiB0aGlzLnRhcmdldHMpIHtcbiAgICAgICAgICAgIGNvbnN0IG1ldGhvZCA9IHRhcmdldFttZXRob2ROYW1lXTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbWV0aG9kICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IG1ldGhvZC5hcHBseSh0YXJnZXQsIGFyZ3MpO1xuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBhc3luYyBpbnZva2VEaWRTdGFydEhvb2sobWV0aG9kTmFtZSwgLi4uYXJncykge1xuICAgICAgICBjb25zdCBob29rUmV0dXJuVmFsdWVzID0gYXdhaXQgUHJvbWlzZS5hbGwodGhpcy5jYWxsVGFyZ2V0cyhtZXRob2ROYW1lLCAuLi5hcmdzKSk7XG4gICAgICAgIGNvbnN0IGRpZEVuZEhvb2tzID0gaG9va1JldHVyblZhbHVlcy5maWx0ZXIoKGhvb2spID0+ICEhaG9vayk7XG4gICAgICAgIGRpZEVuZEhvb2tzLnJldmVyc2UoKTtcbiAgICAgICAgcmV0dXJuIGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChkaWRFbmRIb29rcy5tYXAoKGhvb2spID0+IGhvb2soLi4uYXJncykpKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaW52b2tlU3luY0RpZFN0YXJ0SG9vayhtZXRob2ROYW1lLCAuLi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IGRpZEVuZEhvb2tzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgdGFyZ2V0IG9mIHRoaXMudGFyZ2V0cykge1xuICAgICAgICAgICAgY29uc3QgbWV0aG9kID0gdGFyZ2V0W21ldGhvZE5hbWVdO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBtZXRob2QgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkaWRFbmRIb29rID0gbWV0aG9kLmFwcGx5KHRhcmdldCwgYXJncyk7XG4gICAgICAgICAgICAgICAgaWYgKGRpZEVuZEhvb2spIHtcbiAgICAgICAgICAgICAgICAgICAgZGlkRW5kSG9va3MucHVzaChkaWRFbmRIb29rKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZGlkRW5kSG9va3MucmV2ZXJzZSgpO1xuICAgICAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZGlkRW5kSG9vayBvZiBkaWRFbmRIb29rcykge1xuICAgICAgICAgICAgICAgIGRpZEVuZEhvb2soLi4uYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5EaXNwYXRjaGVyID0gRGlzcGF0Y2hlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpc3BhdGNoZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/utils/dispatcher.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/utils/isNodeLike.js":
/*!******************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/utils/isNodeLike.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = typeof process === 'object' &&\n    process &&\n    process.release &&\n    process.versions &&\n    typeof process.versions.node === 'string';\n//# sourceMappingURL=isNodeLike.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvdXRpbHMvaXNOb2RlTGlrZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxkaXN0XFx1dGlsc1xcaXNOb2RlTGlrZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJlxuICAgIHByb2Nlc3MgJiZcbiAgICBwcm9jZXNzLnJlbGVhc2UgJiZcbiAgICBwcm9jZXNzLnZlcnNpb25zICYmXG4gICAgdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMubm9kZSA9PT0gJ3N0cmluZyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc05vZGVMaWtlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/utils/isNodeLike.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/utils/schemaHash.js":
/*!******************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/utils/schemaHash.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.generateSchemaHash = void 0;\nconst language_1 = __webpack_require__(/*! graphql/language */ \"(rsc)/./node_modules/graphql/language/index.js\");\nconst execution_1 = __webpack_require__(/*! graphql/execution */ \"(rsc)/./node_modules/graphql/execution/index.js\");\nconst utilities_1 = __webpack_require__(/*! graphql/utilities */ \"(rsc)/./node_modules/graphql/utilities/index.js\");\nconst fast_json_stable_stringify_1 = __importDefault(__webpack_require__(/*! fast-json-stable-stringify */ \"(rsc)/./node_modules/fast-json-stable-stringify/index.js\"));\nconst createSHA_1 = __importDefault(__webpack_require__(/*! ./createSHA */ \"(rsc)/./node_modules/apollo-server-core/dist/utils/createSHA.js\"));\nfunction generateSchemaHash(schema) {\n    const introspectionQuery = (0, utilities_1.getIntrospectionQuery)();\n    const document = (0, language_1.parse)(introspectionQuery);\n    const result = (0, execution_1.execute)({\n        schema,\n        document,\n    });\n    if (result &&\n        typeof result.then === 'function') {\n        throw new Error([\n            'The introspection query is resolving asynchronously; execution of an introspection query is not expected to return a `Promise`.',\n            '',\n            'Wrapped type resolvers should maintain the existing execution dynamics of the resolvers they wrap (i.e. async vs sync) or introspection types should be excluded from wrapping by checking them with `graphql/type`s, `isIntrospectionType` predicate function prior to wrapping.',\n        ].join('\\n'));\n    }\n    if (!result || !result.data || !result.data.__schema) {\n        throw new Error('Unable to generate server introspection document.');\n    }\n    const introspectionSchema = result.data.__schema;\n    const stringifiedSchema = (0, fast_json_stable_stringify_1.default)(introspectionSchema);\n    return (0, createSHA_1.default)('sha512')\n        .update(stringifiedSchema)\n        .digest('hex');\n}\nexports.generateSchemaHash = generateSchemaHash;\n//# sourceMappingURL=schemaHash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvdXRpbHMvc2NoZW1hSGFzaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQixtQkFBbUIsbUJBQU8sQ0FBQyx3RUFBa0I7QUFDN0Msb0JBQW9CLG1CQUFPLENBQUMsMEVBQW1CO0FBQy9DLG9CQUFvQixtQkFBTyxDQUFDLDBFQUFtQjtBQUMvQyxxREFBcUQsbUJBQU8sQ0FBQyw0RkFBNEI7QUFDekYsb0NBQW9DLG1CQUFPLENBQUMsb0ZBQWE7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXHV0aWxzXFxzY2hlbWFIYXNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZW5lcmF0ZVNjaGVtYUhhc2ggPSB2b2lkIDA7XG5jb25zdCBsYW5ndWFnZV8xID0gcmVxdWlyZShcImdyYXBocWwvbGFuZ3VhZ2VcIik7XG5jb25zdCBleGVjdXRpb25fMSA9IHJlcXVpcmUoXCJncmFwaHFsL2V4ZWN1dGlvblwiKTtcbmNvbnN0IHV0aWxpdGllc18xID0gcmVxdWlyZShcImdyYXBocWwvdXRpbGl0aWVzXCIpO1xuY29uc3QgZmFzdF9qc29uX3N0YWJsZV9zdHJpbmdpZnlfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZmFzdC1qc29uLXN0YWJsZS1zdHJpbmdpZnlcIikpO1xuY29uc3QgY3JlYXRlU0hBXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vY3JlYXRlU0hBXCIpKTtcbmZ1bmN0aW9uIGdlbmVyYXRlU2NoZW1hSGFzaChzY2hlbWEpIHtcbiAgICBjb25zdCBpbnRyb3NwZWN0aW9uUXVlcnkgPSAoMCwgdXRpbGl0aWVzXzEuZ2V0SW50cm9zcGVjdGlvblF1ZXJ5KSgpO1xuICAgIGNvbnN0IGRvY3VtZW50ID0gKDAsIGxhbmd1YWdlXzEucGFyc2UpKGludHJvc3BlY3Rpb25RdWVyeSk7XG4gICAgY29uc3QgcmVzdWx0ID0gKDAsIGV4ZWN1dGlvbl8xLmV4ZWN1dGUpKHtcbiAgICAgICAgc2NoZW1hLFxuICAgICAgICBkb2N1bWVudCxcbiAgICB9KTtcbiAgICBpZiAocmVzdWx0ICYmXG4gICAgICAgIHR5cGVvZiByZXN1bHQudGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoW1xuICAgICAgICAgICAgJ1RoZSBpbnRyb3NwZWN0aW9uIHF1ZXJ5IGlzIHJlc29sdmluZyBhc3luY2hyb25vdXNseTsgZXhlY3V0aW9uIG9mIGFuIGludHJvc3BlY3Rpb24gcXVlcnkgaXMgbm90IGV4cGVjdGVkIHRvIHJldHVybiBhIGBQcm9taXNlYC4nLFxuICAgICAgICAgICAgJycsXG4gICAgICAgICAgICAnV3JhcHBlZCB0eXBlIHJlc29sdmVycyBzaG91bGQgbWFpbnRhaW4gdGhlIGV4aXN0aW5nIGV4ZWN1dGlvbiBkeW5hbWljcyBvZiB0aGUgcmVzb2x2ZXJzIHRoZXkgd3JhcCAoaS5lLiBhc3luYyB2cyBzeW5jKSBvciBpbnRyb3NwZWN0aW9uIHR5cGVzIHNob3VsZCBiZSBleGNsdWRlZCBmcm9tIHdyYXBwaW5nIGJ5IGNoZWNraW5nIHRoZW0gd2l0aCBgZ3JhcGhxbC90eXBlYHMsIGBpc0ludHJvc3BlY3Rpb25UeXBlYCBwcmVkaWNhdGUgZnVuY3Rpb24gcHJpb3IgdG8gd3JhcHBpbmcuJyxcbiAgICAgICAgXS5qb2luKCdcXG4nKSk7XG4gICAgfVxuICAgIGlmICghcmVzdWx0IHx8ICFyZXN1bHQuZGF0YSB8fCAhcmVzdWx0LmRhdGEuX19zY2hlbWEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gZ2VuZXJhdGUgc2VydmVyIGludHJvc3BlY3Rpb24gZG9jdW1lbnQuJyk7XG4gICAgfVxuICAgIGNvbnN0IGludHJvc3BlY3Rpb25TY2hlbWEgPSByZXN1bHQuZGF0YS5fX3NjaGVtYTtcbiAgICBjb25zdCBzdHJpbmdpZmllZFNjaGVtYSA9ICgwLCBmYXN0X2pzb25fc3RhYmxlX3N0cmluZ2lmeV8xLmRlZmF1bHQpKGludHJvc3BlY3Rpb25TY2hlbWEpO1xuICAgIHJldHVybiAoMCwgY3JlYXRlU0hBXzEuZGVmYXVsdCkoJ3NoYTUxMicpXG4gICAgICAgIC51cGRhdGUoc3RyaW5naWZpZWRTY2hlbWEpXG4gICAgICAgIC5kaWdlc3QoJ2hleCcpO1xufVxuZXhwb3J0cy5nZW5lcmF0ZVNjaGVtYUhhc2ggPSBnZW5lcmF0ZVNjaGVtYUhhc2g7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY2hlbWFIYXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/utils/schemaHash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/utils/schemaInstrumentation.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/utils/schemaInstrumentation.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.whenResultIsFinished = exports.pluginsEnabledForSchemaResolvers = exports.enablePluginsForSchemaResolvers = exports.symbolUserFieldResolver = exports.symbolExecutionDispatcherWillResolveField = void 0;\nconst type_1 = __webpack_require__(/*! graphql/type */ \"(rsc)/./node_modules/graphql/type/index.js\");\nconst execution_1 = __webpack_require__(/*! graphql/execution */ \"(rsc)/./node_modules/graphql/execution/index.js\");\nexports.symbolExecutionDispatcherWillResolveField = Symbol('apolloServerExecutionDispatcherWillResolveField');\nexports.symbolUserFieldResolver = Symbol('apolloServerUserFieldResolver');\nconst symbolPluginsEnabled = Symbol('apolloServerPluginsEnabled');\nfunction enablePluginsForSchemaResolvers(schema) {\n    if (pluginsEnabledForSchemaResolvers(schema)) {\n        return schema;\n    }\n    Object.defineProperty(schema, symbolPluginsEnabled, {\n        value: true,\n    });\n    forEachField(schema, wrapField);\n    return schema;\n}\nexports.enablePluginsForSchemaResolvers = enablePluginsForSchemaResolvers;\nfunction pluginsEnabledForSchemaResolvers(schema) {\n    return !!schema[symbolPluginsEnabled];\n}\nexports.pluginsEnabledForSchemaResolvers = pluginsEnabledForSchemaResolvers;\nfunction wrapField(field) {\n    const originalFieldResolve = field.resolve;\n    field.resolve = (source, args, context, info) => {\n        const parentPath = info.path.prev;\n        const willResolveField = context === null || context === void 0 ? void 0 : context[exports.symbolExecutionDispatcherWillResolveField];\n        const userFieldResolver = context === null || context === void 0 ? void 0 : context[exports.symbolUserFieldResolver];\n        const didResolveField = typeof willResolveField === 'function' &&\n            willResolveField({ source, args, context, info });\n        const resolveObject = info.parentType.resolveObject;\n        let whenObjectResolved;\n        if (parentPath && resolveObject) {\n            if (!parentPath.__fields) {\n                parentPath.__fields = {};\n            }\n            parentPath.__fields[info.fieldName] = info.fieldNodes;\n            whenObjectResolved = parentPath.__whenObjectResolved;\n            if (!whenObjectResolved) {\n                whenObjectResolved = Promise.resolve().then(() => {\n                    return resolveObject(source, parentPath.__fields, context, info);\n                });\n                parentPath.__whenObjectResolved = whenObjectResolved;\n            }\n        }\n        const fieldResolver = originalFieldResolve || userFieldResolver || execution_1.defaultFieldResolver;\n        try {\n            let result;\n            if (whenObjectResolved) {\n                result = whenObjectResolved.then((resolvedObject) => {\n                    return fieldResolver(resolvedObject, args, context, info);\n                });\n            }\n            else {\n                result = fieldResolver(source, args, context, info);\n            }\n            if (typeof didResolveField === 'function') {\n                whenResultIsFinished(result, didResolveField);\n            }\n            return result;\n        }\n        catch (error) {\n            if (typeof didResolveField === 'function') {\n                didResolveField(error);\n            }\n            throw error;\n        }\n    };\n}\nfunction isPromise(x) {\n    return x && typeof x.then === 'function';\n}\nfunction whenResultIsFinished(result, callback) {\n    if (isPromise(result)) {\n        result.then((r) => callback(null, r), (err) => callback(err));\n    }\n    else if (Array.isArray(result)) {\n        if (result.some(isPromise)) {\n            Promise.all(result).then((r) => callback(null, r), (err) => callback(err));\n        }\n        else {\n            callback(null, result);\n        }\n    }\n    else {\n        callback(null, result);\n    }\n}\nexports.whenResultIsFinished = whenResultIsFinished;\nfunction forEachField(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    Object.entries(typeMap).forEach(([typeName, type]) => {\n        if (!(0, type_1.getNamedType)(type).name.startsWith('__') &&\n            type instanceof type_1.GraphQLObjectType) {\n            const fields = type.getFields();\n            Object.entries(fields).forEach(([fieldName, field]) => {\n                fn(field, typeName, fieldName);\n            });\n        }\n    });\n}\n//# sourceMappingURL=schemaInstrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL2Rpc3QvdXRpbHMvc2NoZW1hSW5zdHJ1bWVudGF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLHdDQUF3QyxHQUFHLHVDQUF1QyxHQUFHLCtCQUErQixHQUFHLGlEQUFpRDtBQUN2TSxlQUFlLG1CQUFPLENBQUMsZ0VBQWM7QUFDckMsb0JBQW9CLG1CQUFPLENBQUMsMEVBQW1CO0FBQy9DLGlEQUFpRDtBQUNqRCwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw2QkFBNkI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXGRpc3RcXHV0aWxzXFxzY2hlbWFJbnN0cnVtZW50YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLndoZW5SZXN1bHRJc0ZpbmlzaGVkID0gZXhwb3J0cy5wbHVnaW5zRW5hYmxlZEZvclNjaGVtYVJlc29sdmVycyA9IGV4cG9ydHMuZW5hYmxlUGx1Z2luc0ZvclNjaGVtYVJlc29sdmVycyA9IGV4cG9ydHMuc3ltYm9sVXNlckZpZWxkUmVzb2x2ZXIgPSBleHBvcnRzLnN5bWJvbEV4ZWN1dGlvbkRpc3BhdGNoZXJXaWxsUmVzb2x2ZUZpZWxkID0gdm9pZCAwO1xuY29uc3QgdHlwZV8xID0gcmVxdWlyZShcImdyYXBocWwvdHlwZVwiKTtcbmNvbnN0IGV4ZWN1dGlvbl8xID0gcmVxdWlyZShcImdyYXBocWwvZXhlY3V0aW9uXCIpO1xuZXhwb3J0cy5zeW1ib2xFeGVjdXRpb25EaXNwYXRjaGVyV2lsbFJlc29sdmVGaWVsZCA9IFN5bWJvbCgnYXBvbGxvU2VydmVyRXhlY3V0aW9uRGlzcGF0Y2hlcldpbGxSZXNvbHZlRmllbGQnKTtcbmV4cG9ydHMuc3ltYm9sVXNlckZpZWxkUmVzb2x2ZXIgPSBTeW1ib2woJ2Fwb2xsb1NlcnZlclVzZXJGaWVsZFJlc29sdmVyJyk7XG5jb25zdCBzeW1ib2xQbHVnaW5zRW5hYmxlZCA9IFN5bWJvbCgnYXBvbGxvU2VydmVyUGx1Z2luc0VuYWJsZWQnKTtcbmZ1bmN0aW9uIGVuYWJsZVBsdWdpbnNGb3JTY2hlbWFSZXNvbHZlcnMoc2NoZW1hKSB7XG4gICAgaWYgKHBsdWdpbnNFbmFibGVkRm9yU2NoZW1hUmVzb2x2ZXJzKHNjaGVtYSkpIHtcbiAgICAgICAgcmV0dXJuIHNjaGVtYTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNjaGVtYSwgc3ltYm9sUGx1Z2luc0VuYWJsZWQsIHtcbiAgICAgICAgdmFsdWU6IHRydWUsXG4gICAgfSk7XG4gICAgZm9yRWFjaEZpZWxkKHNjaGVtYSwgd3JhcEZpZWxkKTtcbiAgICByZXR1cm4gc2NoZW1hO1xufVxuZXhwb3J0cy5lbmFibGVQbHVnaW5zRm9yU2NoZW1hUmVzb2x2ZXJzID0gZW5hYmxlUGx1Z2luc0ZvclNjaGVtYVJlc29sdmVycztcbmZ1bmN0aW9uIHBsdWdpbnNFbmFibGVkRm9yU2NoZW1hUmVzb2x2ZXJzKHNjaGVtYSkge1xuICAgIHJldHVybiAhIXNjaGVtYVtzeW1ib2xQbHVnaW5zRW5hYmxlZF07XG59XG5leHBvcnRzLnBsdWdpbnNFbmFibGVkRm9yU2NoZW1hUmVzb2x2ZXJzID0gcGx1Z2luc0VuYWJsZWRGb3JTY2hlbWFSZXNvbHZlcnM7XG5mdW5jdGlvbiB3cmFwRmllbGQoZmllbGQpIHtcbiAgICBjb25zdCBvcmlnaW5hbEZpZWxkUmVzb2x2ZSA9IGZpZWxkLnJlc29sdmU7XG4gICAgZmllbGQucmVzb2x2ZSA9IChzb3VyY2UsIGFyZ3MsIGNvbnRleHQsIGluZm8pID0+IHtcbiAgICAgICAgY29uc3QgcGFyZW50UGF0aCA9IGluZm8ucGF0aC5wcmV2O1xuICAgICAgICBjb25zdCB3aWxsUmVzb2x2ZUZpZWxkID0gY29udGV4dCA9PT0gbnVsbCB8fCBjb250ZXh0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250ZXh0W2V4cG9ydHMuc3ltYm9sRXhlY3V0aW9uRGlzcGF0Y2hlcldpbGxSZXNvbHZlRmllbGRdO1xuICAgICAgICBjb25zdCB1c2VyRmllbGRSZXNvbHZlciA9IGNvbnRleHQgPT09IG51bGwgfHwgY29udGV4dCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGV4dFtleHBvcnRzLnN5bWJvbFVzZXJGaWVsZFJlc29sdmVyXTtcbiAgICAgICAgY29uc3QgZGlkUmVzb2x2ZUZpZWxkID0gdHlwZW9mIHdpbGxSZXNvbHZlRmllbGQgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgICAgICAgIHdpbGxSZXNvbHZlRmllbGQoeyBzb3VyY2UsIGFyZ3MsIGNvbnRleHQsIGluZm8gfSk7XG4gICAgICAgIGNvbnN0IHJlc29sdmVPYmplY3QgPSBpbmZvLnBhcmVudFR5cGUucmVzb2x2ZU9iamVjdDtcbiAgICAgICAgbGV0IHdoZW5PYmplY3RSZXNvbHZlZDtcbiAgICAgICAgaWYgKHBhcmVudFBhdGggJiYgcmVzb2x2ZU9iamVjdCkge1xuICAgICAgICAgICAgaWYgKCFwYXJlbnRQYXRoLl9fZmllbGRzKSB7XG4gICAgICAgICAgICAgICAgcGFyZW50UGF0aC5fX2ZpZWxkcyA9IHt9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyZW50UGF0aC5fX2ZpZWxkc1tpbmZvLmZpZWxkTmFtZV0gPSBpbmZvLmZpZWxkTm9kZXM7XG4gICAgICAgICAgICB3aGVuT2JqZWN0UmVzb2x2ZWQgPSBwYXJlbnRQYXRoLl9fd2hlbk9iamVjdFJlc29sdmVkO1xuICAgICAgICAgICAgaWYgKCF3aGVuT2JqZWN0UmVzb2x2ZWQpIHtcbiAgICAgICAgICAgICAgICB3aGVuT2JqZWN0UmVzb2x2ZWQgPSBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmVPYmplY3Qoc291cmNlLCBwYXJlbnRQYXRoLl9fZmllbGRzLCBjb250ZXh0LCBpbmZvKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBwYXJlbnRQYXRoLl9fd2hlbk9iamVjdFJlc29sdmVkID0gd2hlbk9iamVjdFJlc29sdmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZpZWxkUmVzb2x2ZXIgPSBvcmlnaW5hbEZpZWxkUmVzb2x2ZSB8fCB1c2VyRmllbGRSZXNvbHZlciB8fCBleGVjdXRpb25fMS5kZWZhdWx0RmllbGRSZXNvbHZlcjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGxldCByZXN1bHQ7XG4gICAgICAgICAgICBpZiAod2hlbk9iamVjdFJlc29sdmVkKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gd2hlbk9iamVjdFJlc29sdmVkLnRoZW4oKHJlc29sdmVkT2JqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmaWVsZFJlc29sdmVyKHJlc29sdmVkT2JqZWN0LCBhcmdzLCBjb250ZXh0LCBpbmZvKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZpZWxkUmVzb2x2ZXIoc291cmNlLCBhcmdzLCBjb250ZXh0LCBpbmZvKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgZGlkUmVzb2x2ZUZpZWxkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgd2hlblJlc3VsdElzRmluaXNoZWQocmVzdWx0LCBkaWRSZXNvbHZlRmllbGQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZGlkUmVzb2x2ZUZpZWxkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgZGlkUmVzb2x2ZUZpZWxkKGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGlzUHJvbWlzZSh4KSB7XG4gICAgcmV0dXJuIHggJiYgdHlwZW9mIHgudGhlbiA9PT0gJ2Z1bmN0aW9uJztcbn1cbmZ1bmN0aW9uIHdoZW5SZXN1bHRJc0ZpbmlzaGVkKHJlc3VsdCwgY2FsbGJhY2spIHtcbiAgICBpZiAoaXNQcm9taXNlKHJlc3VsdCkpIHtcbiAgICAgICAgcmVzdWx0LnRoZW4oKHIpID0+IGNhbGxiYWNrKG51bGwsIHIpLCAoZXJyKSA9PiBjYWxsYmFjayhlcnIpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShyZXN1bHQpKSB7XG4gICAgICAgIGlmIChyZXN1bHQuc29tZShpc1Byb21pc2UpKSB7XG4gICAgICAgICAgICBQcm9taXNlLmFsbChyZXN1bHQpLnRoZW4oKHIpID0+IGNhbGxiYWNrKG51bGwsIHIpLCAoZXJyKSA9PiBjYWxsYmFjayhlcnIpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3VsdCk7XG4gICAgfVxufVxuZXhwb3J0cy53aGVuUmVzdWx0SXNGaW5pc2hlZCA9IHdoZW5SZXN1bHRJc0ZpbmlzaGVkO1xuZnVuY3Rpb24gZm9yRWFjaEZpZWxkKHNjaGVtYSwgZm4pIHtcbiAgICBjb25zdCB0eXBlTWFwID0gc2NoZW1hLmdldFR5cGVNYXAoKTtcbiAgICBPYmplY3QuZW50cmllcyh0eXBlTWFwKS5mb3JFYWNoKChbdHlwZU5hbWUsIHR5cGVdKSA9PiB7XG4gICAgICAgIGlmICghKDAsIHR5cGVfMS5nZXROYW1lZFR5cGUpKHR5cGUpLm5hbWUuc3RhcnRzV2l0aCgnX18nKSAmJlxuICAgICAgICAgICAgdHlwZSBpbnN0YW5jZW9mIHR5cGVfMS5HcmFwaFFMT2JqZWN0VHlwZSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKGZpZWxkcykuZm9yRWFjaCgoW2ZpZWxkTmFtZSwgZmllbGRdKSA9PiB7XG4gICAgICAgICAgICAgICAgZm4oZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjaGVtYUluc3RydW1lbnRhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/utils/schemaInstrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/dist/utils/schemaManager.js":
/*!*********************************************************************!*\
  !*** ./node_modules/apollo-server-core/dist/utils/schemaManager.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GatewayIsTooOldError = exports.SchemaManager = void 0;\nclass SchemaManager {\n    constructor(options) {\n        this.onSchemaLoadOrUpdateListeners = new Set();\n        this.isStopped = false;\n        this.logger = options.logger;\n        this.schemaDerivedDataProvider = options.schemaDerivedDataProvider;\n        if ('gateway' in options) {\n            this.modeSpecificState = {\n                mode: 'gateway',\n                gateway: options.gateway,\n                apolloConfig: options.apolloConfig,\n            };\n        }\n        else {\n            this.modeSpecificState = {\n                mode: 'schema',\n                apiSchema: options.apiSchema,\n                schemaDerivedData: options.schemaDerivedDataProvider(options.apiSchema),\n            };\n        }\n    }\n    async start() {\n        if (this.modeSpecificState.mode === 'gateway') {\n            const gateway = this.modeSpecificState.gateway;\n            if (gateway.onSchemaLoadOrUpdate) {\n                this.modeSpecificState.unsubscribeFromGateway =\n                    gateway.onSchemaLoadOrUpdate((schemaContext) => {\n                        this.processSchemaLoadOrUpdateEvent(schemaContext);\n                    });\n            }\n            else if (gateway.onSchemaChange) {\n                this.modeSpecificState.unsubscribeFromGateway = gateway.onSchemaChange((apiSchema) => {\n                    this.processSchemaLoadOrUpdateEvent({ apiSchema });\n                });\n            }\n            else {\n                throw new Error(\"Unexpectedly couldn't find onSchemaChange or onSchemaLoadOrUpdate on gateway\");\n            }\n            const config = await this.modeSpecificState.gateway.load({\n                apollo: this.modeSpecificState.apolloConfig,\n            });\n            if (!this.schemaDerivedData) {\n                this.processSchemaLoadOrUpdateEvent({ apiSchema: config.schema });\n            }\n            return config.executor;\n        }\n        else {\n            this.processSchemaLoadOrUpdateEvent({\n                apiSchema: this.modeSpecificState.apiSchema,\n            }, this.modeSpecificState.schemaDerivedData);\n            return null;\n        }\n    }\n    onSchemaLoadOrUpdate(callback) {\n        if (this.modeSpecificState.mode === 'gateway' &&\n            !this.modeSpecificState.gateway.onSchemaLoadOrUpdate) {\n            throw new GatewayIsTooOldError([\n                `Your gateway is too old to register a 'onSchemaLoadOrUpdate' listener.`,\n                `Please update your version of @apollo/gateway to at least 0.35.0.`,\n            ].join(' '));\n        }\n        else {\n            if (!this.schemaContext) {\n                throw new Error('You must call start() before onSchemaLoadOrUpdate()');\n            }\n            if (!this.isStopped) {\n                try {\n                    callback(this.schemaContext);\n                }\n                catch (e) {\n                    throw new Error(`An error was thrown from an 'onSchemaLoadOrUpdate' listener: ${e.message}`);\n                }\n            }\n            this.onSchemaLoadOrUpdateListeners.add(callback);\n        }\n        return () => {\n            this.onSchemaLoadOrUpdateListeners.delete(callback);\n        };\n    }\n    getSchemaDerivedData() {\n        if (!this.schemaDerivedData) {\n            throw new Error('You must call start() before getSchemaDerivedData()');\n        }\n        return this.schemaDerivedData;\n    }\n    async stop() {\n        var _a, _b, _c, _d;\n        this.isStopped = true;\n        if (this.modeSpecificState.mode === 'gateway') {\n            (_b = (_a = this.modeSpecificState).unsubscribeFromGateway) === null || _b === void 0 ? void 0 : _b.call(_a);\n            await ((_d = (_c = this.modeSpecificState.gateway).stop) === null || _d === void 0 ? void 0 : _d.call(_c));\n        }\n    }\n    processSchemaLoadOrUpdateEvent(schemaContext, schemaDerivedData) {\n        if (!this.isStopped) {\n            this.schemaDerivedData =\n                schemaDerivedData !== null && schemaDerivedData !== void 0 ? schemaDerivedData : this.schemaDerivedDataProvider(schemaContext.apiSchema);\n            this.schemaContext = schemaContext;\n            this.onSchemaLoadOrUpdateListeners.forEach((listener) => {\n                try {\n                    listener(schemaContext);\n                }\n                catch (e) {\n                    this.logger.error(\"An error was thrown from an 'onSchemaLoadOrUpdate' listener\");\n                    this.logger.error(e);\n                }\n            });\n        }\n    }\n}\nexports.SchemaManager = SchemaManager;\nclass GatewayIsTooOldError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.GatewayIsTooOldError = GatewayIsTooOldError;\n//# sourceMappingURL=schemaManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/dist/utils/schemaManager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.dropunuseddefinitions/dist/index.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.dropunuseddefinitions/dist/index.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.dropUnusedDefinitions = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction dropUnusedDefinitions(ast, operationName) {\n    const separated = (0, graphql_1.separateOperations)(ast)[operationName];\n    if (!separated) {\n        return ast;\n    }\n    return separated;\n}\nexports.dropUnusedDefinitions = dropUnusedDefinitions;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLmRyb3B1bnVzZWRkZWZpbml0aW9ucy9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGFwb2xsb1xcdXRpbHMuZHJvcHVudXNlZGRlZmluaXRpb25zXFxkaXN0XFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZHJvcFVudXNlZERlZmluaXRpb25zID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5mdW5jdGlvbiBkcm9wVW51c2VkRGVmaW5pdGlvbnMoYXN0LCBvcGVyYXRpb25OYW1lKSB7XG4gICAgY29uc3Qgc2VwYXJhdGVkID0gKDAsIGdyYXBocWxfMS5zZXBhcmF0ZU9wZXJhdGlvbnMpKGFzdClbb3BlcmF0aW9uTmFtZV07XG4gICAgaWYgKCFzZXBhcmF0ZWQpIHtcbiAgICAgICAgcmV0dXJuIGFzdDtcbiAgICB9XG4gICAgcmV0dXJuIHNlcGFyYXRlZDtcbn1cbmV4cG9ydHMuZHJvcFVudXNlZERlZmluaXRpb25zID0gZHJvcFVudXNlZERlZmluaXRpb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.dropunuseddefinitions/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/ErrorsAreMissesCache.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/ErrorsAreMissesCache.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorsAreMissesCache = void 0;\nclass ErrorsAreMissesCache {\n    constructor(cache, logger) {\n        this.cache = cache;\n        this.logger = logger;\n    }\n    async get(key) {\n        try {\n            return await this.cache.get(key);\n        }\n        catch (e) {\n            if (this.logger) {\n                if (e instanceof Error) {\n                    this.logger.error(e.message);\n                }\n                else {\n                    this.logger.error(e);\n                }\n            }\n            return undefined;\n        }\n    }\n    async set(key, value, opts) {\n        return this.cache.set(key, value, opts);\n    }\n    async delete(key) {\n        return this.cache.delete(key);\n    }\n}\nexports.ErrorsAreMissesCache = ErrorsAreMissesCache;\n//# sourceMappingURL=ErrorsAreMissesCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLmtleXZhbHVlY2FjaGUvZGlzdC9FcnJvcnNBcmVNaXNzZXNDYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBhcG9sbG9cXHV0aWxzLmtleXZhbHVlY2FjaGVcXGRpc3RcXEVycm9yc0FyZU1pc3Nlc0NhY2hlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FcnJvcnNBcmVNaXNzZXNDYWNoZSA9IHZvaWQgMDtcbmNsYXNzIEVycm9yc0FyZU1pc3Nlc0NhY2hlIHtcbiAgICBjb25zdHJ1Y3RvcihjYWNoZSwgbG9nZ2VyKSB7XG4gICAgICAgIHRoaXMuY2FjaGUgPSBjYWNoZTtcbiAgICAgICAgdGhpcy5sb2dnZXIgPSBsb2dnZXI7XG4gICAgfVxuICAgIGFzeW5jIGdldChrZXkpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmNhY2hlLmdldChrZXkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5sb2dnZXIpIHtcbiAgICAgICAgICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKGUubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcihlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIHNldChrZXksIHZhbHVlLCBvcHRzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhY2hlLnNldChrZXksIHZhbHVlLCBvcHRzKTtcbiAgICB9XG4gICAgYXN5bmMgZGVsZXRlKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWNoZS5kZWxldGUoa2V5KTtcbiAgICB9XG59XG5leHBvcnRzLkVycm9yc0FyZU1pc3Nlc0NhY2hlID0gRXJyb3JzQXJlTWlzc2VzQ2FjaGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FcnJvcnNBcmVNaXNzZXNDYWNoZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/ErrorsAreMissesCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/InMemoryLRUCache.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/InMemoryLRUCache.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemoryLRUCache = void 0;\nconst lru_cache_1 = __importDefault(__webpack_require__(/*! lru-cache */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/node_modules/lru-cache/index.js\"));\nclass InMemoryLRUCache {\n    constructor(lruCacheOpts) {\n        this.cache = new lru_cache_1.default({\n            sizeCalculation: InMemoryLRUCache.sizeCalculation,\n            maxSize: Math.pow(2, 20) * 30,\n            ...lruCacheOpts,\n        });\n    }\n    static sizeCalculation(item) {\n        if (typeof item === \"string\") {\n            return item.length;\n        }\n        if (typeof item === \"object\") {\n            return Buffer.byteLength(JSON.stringify(item), \"utf8\");\n        }\n        return 1;\n    }\n    async set(key, value, options) {\n        if (options === null || options === void 0 ? void 0 : options.ttl) {\n            this.cache.set(key, value, { ttl: options.ttl * 1000 });\n        }\n        else {\n            this.cache.set(key, value);\n        }\n    }\n    async get(key) {\n        return this.cache.get(key);\n    }\n    async delete(key) {\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.cache.clear();\n    }\n    keys() {\n        return [...this.cache.keys()];\n    }\n}\nexports.InMemoryLRUCache = InMemoryLRUCache;\n//# sourceMappingURL=InMemoryLRUCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLmtleXZhbHVlY2FjaGUvZGlzdC9Jbk1lbW9yeUxSVUNhY2hlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG9DQUFvQyxtQkFBTyxDQUFDLG1JQUFXO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMseUJBQXlCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGFwb2xsb1xcdXRpbHMua2V5dmFsdWVjYWNoZVxcZGlzdFxcSW5NZW1vcnlMUlVDYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW5NZW1vcnlMUlVDYWNoZSA9IHZvaWQgMDtcbmNvbnN0IGxydV9jYWNoZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJscnUtY2FjaGVcIikpO1xuY2xhc3MgSW5NZW1vcnlMUlVDYWNoZSB7XG4gICAgY29uc3RydWN0b3IobHJ1Q2FjaGVPcHRzKSB7XG4gICAgICAgIHRoaXMuY2FjaGUgPSBuZXcgbHJ1X2NhY2hlXzEuZGVmYXVsdCh7XG4gICAgICAgICAgICBzaXplQ2FsY3VsYXRpb246IEluTWVtb3J5TFJVQ2FjaGUuc2l6ZUNhbGN1bGF0aW9uLFxuICAgICAgICAgICAgbWF4U2l6ZTogTWF0aC5wb3coMiwgMjApICogMzAsXG4gICAgICAgICAgICAuLi5scnVDYWNoZU9wdHMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgc2l6ZUNhbGN1bGF0aW9uKGl0ZW0pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmJ5dGVMZW5ndGgoSlNPTi5zdHJpbmdpZnkoaXRlbSksIFwidXRmOFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgYXN5bmMgc2V0KGtleSwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50dGwpIHtcbiAgICAgICAgICAgIHRoaXMuY2FjaGUuc2V0KGtleSwgdmFsdWUsIHsgdHRsOiBvcHRpb25zLnR0bCAqIDEwMDAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmNhY2hlLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBnZXQoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhY2hlLmdldChrZXkpO1xuICAgIH1cbiAgICBhc3luYyBkZWxldGUoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhY2hlLmRlbGV0ZShrZXkpO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5jYWNoZS5jbGVhcigpO1xuICAgIH1cbiAgICBrZXlzKCkge1xuICAgICAgICByZXR1cm4gWy4uLnRoaXMuY2FjaGUua2V5cygpXTtcbiAgICB9XG59XG5leHBvcnRzLkluTWVtb3J5TFJVQ2FjaGUgPSBJbk1lbW9yeUxSVUNhY2hlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5NZW1vcnlMUlVDYWNoZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/InMemoryLRUCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/PrefixingKeyValueCache.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/PrefixingKeyValueCache.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PrefixingKeyValueCache = void 0;\nclass PrefixingKeyValueCache {\n    constructor(wrapped, prefix) {\n        this.wrapped = wrapped;\n        this.prefix = prefix;\n    }\n    get(key) {\n        return this.wrapped.get(this.prefix + key);\n    }\n    set(key, value, options) {\n        return this.wrapped.set(this.prefix + key, value, options);\n    }\n    delete(key) {\n        return this.wrapped.delete(this.prefix + key);\n    }\n}\nexports.PrefixingKeyValueCache = PrefixingKeyValueCache;\n//# sourceMappingURL=PrefixingKeyValueCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLmtleXZhbHVlY2FjaGUvZGlzdC9QcmVmaXhpbmdLZXlWYWx1ZUNhY2hlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBhcG9sbG9cXHV0aWxzLmtleXZhbHVlY2FjaGVcXGRpc3RcXFByZWZpeGluZ0tleVZhbHVlQ2FjaGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByZWZpeGluZ0tleVZhbHVlQ2FjaGUgPSB2b2lkIDA7XG5jbGFzcyBQcmVmaXhpbmdLZXlWYWx1ZUNhY2hlIHtcbiAgICBjb25zdHJ1Y3Rvcih3cmFwcGVkLCBwcmVmaXgpIHtcbiAgICAgICAgdGhpcy53cmFwcGVkID0gd3JhcHBlZDtcbiAgICAgICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XG4gICAgfVxuICAgIGdldChrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud3JhcHBlZC5nZXQodGhpcy5wcmVmaXggKyBrZXkpO1xuICAgIH1cbiAgICBzZXQoa2V5LCB2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy53cmFwcGVkLnNldCh0aGlzLnByZWZpeCArIGtleSwgdmFsdWUsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBkZWxldGUoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLndyYXBwZWQuZGVsZXRlKHRoaXMucHJlZml4ICsga2V5KTtcbiAgICB9XG59XG5leHBvcnRzLlByZWZpeGluZ0tleVZhbHVlQ2FjaGUgPSBQcmVmaXhpbmdLZXlWYWx1ZUNhY2hlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHJlZml4aW5nS2V5VmFsdWVDYWNoZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/PrefixingKeyValueCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorsAreMissesCache = exports.InMemoryLRUCache = exports.PrefixingKeyValueCache = void 0;\nvar PrefixingKeyValueCache_1 = __webpack_require__(/*! ./PrefixingKeyValueCache */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/PrefixingKeyValueCache.js\");\nObject.defineProperty(exports, \"PrefixingKeyValueCache\", ({ enumerable: true, get: function () { return PrefixingKeyValueCache_1.PrefixingKeyValueCache; } }));\nvar InMemoryLRUCache_1 = __webpack_require__(/*! ./InMemoryLRUCache */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/InMemoryLRUCache.js\");\nObject.defineProperty(exports, \"InMemoryLRUCache\", ({ enumerable: true, get: function () { return InMemoryLRUCache_1.InMemoryLRUCache; } }));\nvar ErrorsAreMissesCache_1 = __webpack_require__(/*! ./ErrorsAreMissesCache */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/ErrorsAreMissesCache.js\");\nObject.defineProperty(exports, \"ErrorsAreMissesCache\", ({ enumerable: true, get: function () { return ErrorsAreMissesCache_1.ErrorsAreMissesCache; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLmtleXZhbHVlY2FjaGUvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRyx3QkFBd0IsR0FBRyw4QkFBOEI7QUFDeEYsK0JBQStCLG1CQUFPLENBQUMsaUpBQTBCO0FBQ2pFLDBEQUF5RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQztBQUM1Six5QkFBeUIsbUJBQU8sQ0FBQyxxSUFBb0I7QUFDckQsb0RBQW1ELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQzFJLDZCQUE2QixtQkFBTyxDQUFDLDZJQUF3QjtBQUM3RCx3REFBdUQsRUFBRSxxQ0FBcUMsdURBQXVELEVBQUM7QUFDdEoiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBhcG9sbG9cXHV0aWxzLmtleXZhbHVlY2FjaGVcXGRpc3RcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FcnJvcnNBcmVNaXNzZXNDYWNoZSA9IGV4cG9ydHMuSW5NZW1vcnlMUlVDYWNoZSA9IGV4cG9ydHMuUHJlZml4aW5nS2V5VmFsdWVDYWNoZSA9IHZvaWQgMDtcbnZhciBQcmVmaXhpbmdLZXlWYWx1ZUNhY2hlXzEgPSByZXF1aXJlKFwiLi9QcmVmaXhpbmdLZXlWYWx1ZUNhY2hlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHJlZml4aW5nS2V5VmFsdWVDYWNoZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUHJlZml4aW5nS2V5VmFsdWVDYWNoZV8xLlByZWZpeGluZ0tleVZhbHVlQ2FjaGU7IH0gfSk7XG52YXIgSW5NZW1vcnlMUlVDYWNoZV8xID0gcmVxdWlyZShcIi4vSW5NZW1vcnlMUlVDYWNoZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkluTWVtb3J5TFJVQ2FjaGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEluTWVtb3J5TFJVQ2FjaGVfMS5Jbk1lbW9yeUxSVUNhY2hlOyB9IH0pO1xudmFyIEVycm9yc0FyZU1pc3Nlc0NhY2hlXzEgPSByZXF1aXJlKFwiLi9FcnJvcnNBcmVNaXNzZXNDYWNoZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkVycm9yc0FyZU1pc3Nlc0NhY2hlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBFcnJvcnNBcmVNaXNzZXNDYWNoZV8xLkVycm9yc0FyZU1pc3Nlc0NhY2hlOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/node_modules/lru-cache/index.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/node_modules/lru-cache/index.js ***!
  \******************************************************************************************************************/
/***/ ((module) => {

eval("const perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst hasAbortController = typeof AbortController === 'function'\n\n// minimal backwards-compatibility polyfill\n// this doesn't have nearly all the checks and whatnot that\n// actual AbortController/Signal has, but it's enough for\n// our purposes, and if used properly, behaves the same.\nconst AC = hasAbortController\n  ? AbortController\n  : class AbortController {\n      constructor() {\n        this.signal = new AS()\n      }\n      abort() {\n        this.signal.dispatchEvent('abort')\n      }\n    }\n\nconst hasAbortSignal = typeof AbortSignal === 'function'\n// Some polyfills put this on the AC class, not global\nconst hasACAbortSignal = typeof AC.AbortSignal === 'function'\nconst AS = hasAbortSignal\n  ? AbortSignal\n  : hasACAbortSignal\n  ? AC.AbortController\n  : class AbortSignal {\n      constructor() {\n        this.aborted = false\n        this._listeners = []\n      }\n      dispatchEvent(type) {\n        if (type === 'abort') {\n          this.aborted = true\n          const e = { type, target: this }\n          this.onabort(e)\n          this._listeners.forEach(f => f(e), this)\n        }\n      }\n      onabort() {}\n      addEventListener(ev, fn) {\n        if (ev === 'abort') {\n          this._listeners.push(fn)\n        }\n      }\n      removeEventListener(ev, fn) {\n        if (ev === 'abort') {\n          this._listeners = this._listeners.filter(f => f !== fn)\n        }\n      }\n    }\n\nconst warned = new Set()\nconst deprecatedOption = (opt, instead) => {\n  const code = `LRU_CACHE_OPTION_${opt}`\n  if (shouldWarn(code)) {\n    warn(code, `${opt} option`, `options.${instead}`, LRUCache)\n  }\n}\nconst deprecatedMethod = (method, instead) => {\n  const code = `LRU_CACHE_METHOD_${method}`\n  if (shouldWarn(code)) {\n    const { prototype } = LRUCache\n    const { get } = Object.getOwnPropertyDescriptor(prototype, method)\n    warn(code, `${method} method`, `cache.${instead}()`, get)\n  }\n}\nconst deprecatedProperty = (field, instead) => {\n  const code = `LRU_CACHE_PROPERTY_${field}`\n  if (shouldWarn(code)) {\n    const { prototype } = LRUCache\n    const { get } = Object.getOwnPropertyDescriptor(prototype, field)\n    warn(code, `${field} property`, `cache.${instead}`, get)\n  }\n}\n\nconst emitWarning = (...a) => {\n  typeof process === 'object' &&\n  process &&\n  typeof process.emitWarning === 'function'\n    ? process.emitWarning(...a)\n    : console.error(...a)\n}\n\nconst shouldWarn = code => !warned.has(code)\n\nconst warn = (code, what, instead, fn) => {\n  warned.add(code)\n  const msg = `The ${what} is deprecated. Please use ${instead} instead.`\n  emitWarning(msg, 'DeprecationWarning', code, fn)\n}\n\nconst isPosInt = n => n && n === Math.floor(n) && n > 0 && isFinite(n)\n\n/* istanbul ignore next - This is a little bit ridiculous, tbh.\n * The maximum array length is 2^32-1 or thereabouts on most JS impls.\n * And well before that point, you're caching the entire world, I mean,\n * that's ~32GB of just integers for the next/prev links, plus whatever\n * else to hold that many keys and values.  Just filling the memory with\n * zeroes at init time is brutal when you get that big.\n * But why not be complete?\n * Maybe in the future, these limits will have expanded. */\nconst getUintArray = max =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n\nclass ZeroArray extends Array {\n  constructor(size) {\n    super(size)\n    this.fill(0)\n  }\n}\n\nclass Stack {\n  constructor(max) {\n    if (max === 0) {\n      return []\n    }\n    const UintArray = getUintArray(max)\n    this.heap = new UintArray(max)\n    this.length = 0\n  }\n  push(n) {\n    this.heap[this.length++] = n\n  }\n  pop() {\n    return this.heap[--this.length]\n  }\n}\n\nclass LRUCache {\n  constructor(options = {}) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      sizeCalculation,\n      fetchMethod,\n      fetchContext,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n    } = options\n\n    // deprecated options, don't trigger a warning for getting them if\n    // the thing being passed in is another LRUCache we're copying.\n    const { length, maxAge, stale } =\n      options instanceof LRUCache ? {} : options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.max = max\n    this.maxSize = maxSize\n    this.sizeCalculation = sizeCalculation || length\n    if (this.sizeCalculation) {\n      if (!this.maxSize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    this.fetchMethod = fetchMethod || null\n    if (this.fetchMethod && typeof this.fetchMethod !== 'function') {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n\n    this.fetchContext = fetchContext\n    if (!this.fetchMethod && fetchContext !== undefined) {\n      throw new TypeError(\n        'cannot set fetchContext without fetchMethod'\n      )\n    }\n\n    this.keyMap = new Map()\n    this.keyList = new Array(max).fill(null)\n    this.valList = new Array(max).fill(null)\n    this.next = new UintArray(max)\n    this.prev = new UintArray(max)\n    this.head = 0\n    this.tail = 0\n    this.free = new Stack(max)\n    this.initialFill = 1\n    this.size = 0\n\n    if (typeof dispose === 'function') {\n      this.dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.disposeAfter = disposeAfter\n      this.disposed = []\n    } else {\n      this.disposeAfter = null\n      this.disposed = null\n    }\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n\n    if (this.maxSize !== 0) {\n      if (!isPosInt(this.maxSize)) {\n        throw new TypeError(\n          'maxSize must be a positive integer if specified'\n        )\n      }\n      this.initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale || !!stale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || maxAge || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.max === 0 && this.ttl === 0 && this.maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.max && !this.maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n\n    if (stale) {\n      deprecatedOption('stale', 'allowStale')\n    }\n    if (maxAge) {\n      deprecatedOption('maxAge', 'ttl')\n    }\n    if (length) {\n      deprecatedOption('length', 'sizeCalculation')\n    }\n  }\n\n  getRemainingTTL(key) {\n    return this.has(key, { updateAgeOnHas: false }) ? Infinity : 0\n  }\n\n  initializeTTLTracking() {\n    this.ttls = new ZeroArray(this.max)\n    this.starts = new ZeroArray(this.max)\n\n    this.setItemTTL = (index, ttl, start = perf.now()) => {\n      this.starts[index] = ttl !== 0 ? start : 0\n      this.ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.isStale(index)) {\n            this.delete(this.keyList[index])\n          }\n        }, ttl + 1)\n        /* istanbul ignore else - unref() not supported on all platforms */\n        if (t.unref) {\n          t.unref()\n        }\n      }\n    }\n\n    this.updateItemAge = index => {\n      this.starts[index] = this.ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        /* istanbul ignore else - not available on all platforms */\n        if (t.unref) {\n          t.unref()\n        }\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      return this.ttls[index] === 0 || this.starts[index] === 0\n        ? Infinity\n        : this.starts[index] +\n            this.ttls[index] -\n            (cachedNow || getNow())\n    }\n\n    this.isStale = index => {\n      return (\n        this.ttls[index] !== 0 &&\n        this.starts[index] !== 0 &&\n        (cachedNow || getNow()) - this.starts[index] >\n          this.ttls[index]\n      )\n    }\n  }\n  updateItemAge(index) {}\n  setItemTTL(index, ttl, start) {}\n  isStale(index) {\n    return false\n  }\n\n  initializeSizeTracking() {\n    this.calculatedSize = 0\n    this.sizes = new ZeroArray(this.max)\n    this.removeItemSize = index => {\n      this.calculatedSize -= this.sizes[index]\n      this.sizes[index] = 0\n    }\n    this.requireSize = (k, v, size, sizeCalculation) => {\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer)'\n          )\n        }\n      }\n      return size\n    }\n    this.addItemSize = (index, size) => {\n      this.sizes[index] = size\n      const maxSize = this.maxSize - this.sizes[index]\n      while (this.calculatedSize > maxSize) {\n        this.evict(true)\n      }\n      this.calculatedSize += this.sizes[index]\n    }\n  }\n  removeItemSize(index) {}\n  addItemSize(index, size) {}\n  requireSize(k, v, size, sizeCalculation) {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize on cache'\n      )\n    }\n  }\n\n  *indexes({ allowStale = this.allowStale } = {}) {\n    if (this.size) {\n      for (let i = this.tail; true; ) {\n        if (!this.isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.isStale(i)) {\n          yield i\n        }\n        if (i === this.head) {\n          break\n        } else {\n          i = this.prev[i]\n        }\n      }\n    }\n  }\n\n  *rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.size) {\n      for (let i = this.head; true; ) {\n        if (!this.isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.isStale(i)) {\n          yield i\n        }\n        if (i === this.tail) {\n          break\n        } else {\n          i = this.next[i]\n        }\n      }\n    }\n  }\n\n  isValidIndex(index) {\n    return this.keyMap.get(this.keyList[index]) === index\n  }\n\n  *entries() {\n    for (const i of this.indexes()) {\n      yield [this.keyList[i], this.valList[i]]\n    }\n  }\n  *rentries() {\n    for (const i of this.rindexes()) {\n      yield [this.keyList[i], this.valList[i]]\n    }\n  }\n\n  *keys() {\n    for (const i of this.indexes()) {\n      yield this.keyList[i]\n    }\n  }\n  *rkeys() {\n    for (const i of this.rindexes()) {\n      yield this.keyList[i]\n    }\n  }\n\n  *values() {\n    for (const i of this.indexes()) {\n      yield this.valList[i]\n    }\n  }\n  *rvalues() {\n    for (const i of this.rindexes()) {\n      yield this.valList[i]\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  find(fn, getOptions = {}) {\n    for (const i of this.indexes()) {\n      if (fn(this.valList[i], this.keyList[i], this)) {\n        return this.get(this.keyList[i], getOptions)\n      }\n    }\n  }\n\n  forEach(fn, thisp = this) {\n    for (const i of this.indexes()) {\n      fn.call(thisp, this.valList[i], this.keyList[i], this)\n    }\n  }\n\n  rforEach(fn, thisp = this) {\n    for (const i of this.rindexes()) {\n      fn.call(thisp, this.valList[i], this.keyList[i], this)\n    }\n  }\n\n  get prune() {\n    deprecatedMethod('prune', 'purgeStale')\n    return this.purgeStale\n  }\n\n  purgeStale() {\n    let deleted = false\n    for (const i of this.rindexes({ allowStale: true })) {\n      if (this.isStale(i)) {\n        this.delete(this.keyList[i])\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  dump() {\n    const arr = []\n    for (const i of this.indexes({ allowStale: true })) {\n      const key = this.keyList[i]\n      const v = this.valList[i]\n      const value = this.isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      const entry = { value }\n      if (this.ttls) {\n        entry.ttl = this.ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - this.starts[i]\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.sizes) {\n        entry.size = this.sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  load(arr) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset.\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  dispose(v, k, reason) {}\n\n  set(\n    k,\n    v,\n    {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n    } = {}\n  ) {\n    size = this.requireSize(k, v, size, sizeCalculation)\n    // if the item doesn't fit, don't do anything\n    if (this.maxSize && size > this.maxSize) {\n      return this\n    }\n    let index = this.size === 0 ? undefined : this.keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = this.newIndex()\n      this.keyList[index] = k\n      this.valList[index] = v\n      this.keyMap.set(k, index)\n      this.next[this.tail] = index\n      this.prev[index] = this.tail\n      this.tail = index\n      this.size++\n      this.addItemSize(index, size)\n      noUpdateTTL = false\n    } else {\n      // update\n      const oldVal = this.valList[index]\n      if (v !== oldVal) {\n        if (this.isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort()\n        } else {\n          if (!noDisposeOnSet) {\n            this.dispose(oldVal, k, 'set')\n            if (this.disposeAfter) {\n              this.disposed.push([oldVal, k, 'set'])\n            }\n          }\n        }\n        this.removeItemSize(index)\n        this.valList[index] = v\n        this.addItemSize(index, size)\n      }\n      this.moveToTail(index)\n    }\n    if (ttl !== 0 && this.ttl === 0 && !this.ttls) {\n      this.initializeTTLTracking()\n    }\n    if (!noUpdateTTL) {\n      this.setItemTTL(index, ttl, start)\n    }\n    if (this.disposeAfter) {\n      while (this.disposed.length) {\n        this.disposeAfter(...this.disposed.shift())\n      }\n    }\n    return this\n  }\n\n  newIndex() {\n    if (this.size === 0) {\n      return this.tail\n    }\n    if (this.size === this.max && this.max !== 0) {\n      return this.evict(false)\n    }\n    if (this.free.length !== 0) {\n      return this.free.pop()\n    }\n    // initial fill, just keep writing down the list\n    return this.initialFill++\n  }\n\n  pop() {\n    if (this.size) {\n      const val = this.valList[this.head]\n      this.evict(true)\n      return val\n    }\n  }\n\n  evict(free) {\n    const head = this.head\n    const k = this.keyList[head]\n    const v = this.valList[head]\n    if (this.isBackgroundFetch(v)) {\n      v.__abortController.abort()\n    } else {\n      this.dispose(v, k, 'evict')\n      if (this.disposeAfter) {\n        this.disposed.push([v, k, 'evict'])\n      }\n    }\n    this.removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.keyList[head] = null\n      this.valList[head] = null\n      this.free.push(head)\n    }\n    this.head = this.next[head]\n    this.keyMap.delete(k)\n    this.size--\n    return head\n  }\n\n  has(k, { updateAgeOnHas = this.updateAgeOnHas } = {}) {\n    const index = this.keyMap.get(k)\n    if (index !== undefined) {\n      if (!this.isStale(index)) {\n        if (updateAgeOnHas) {\n          this.updateItemAge(index)\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  // like get(), but without any LRU updating or TTL expiration\n  peek(k, { allowStale = this.allowStale } = {}) {\n    const index = this.keyMap.get(k)\n    if (index !== undefined && (allowStale || !this.isStale(index))) {\n      const v = this.valList[index]\n      // either stale and allowed, or forcing a refresh of non-stale value\n      return this.isBackgroundFetch(v) ? v.__staleWhileFetching : v\n    }\n  }\n\n  backgroundFetch(k, index, options, context) {\n    const v = index === undefined ? undefined : this.valList[index]\n    if (this.isBackgroundFetch(v)) {\n      return v\n    }\n    const ac = new AC()\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n    const cb = v => {\n      if (!ac.signal.aborted) {\n        this.set(k, v, fetchOpts.options)\n      }\n      return v\n    }\n    const eb = er => {\n      if (this.valList[index] === p) {\n        const del =\n          !options.noDeleteOnFetchRejection ||\n          p.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          this.valList[index] = p.__staleWhileFetching\n        }\n      }\n      if (p.__returned === p) {\n        throw er\n      }\n    }\n    const pcall = res => res(this.fetchMethod(k, v, fetchOpts))\n    const p = new Promise(pcall).then(cb, eb)\n    p.__abortController = ac\n    p.__staleWhileFetching = v\n    p.__returned = null\n    if (index === undefined) {\n      this.set(k, p, fetchOpts.options)\n      index = this.keyMap.get(k)\n    } else {\n      this.valList[index] = p\n    }\n    return p\n  }\n\n  isBackgroundFetch(p) {\n    return (\n      p &&\n      typeof p === 'object' &&\n      typeof p.then === 'function' &&\n      Object.prototype.hasOwnProperty.call(\n        p,\n        '__staleWhileFetching'\n      ) &&\n      Object.prototype.hasOwnProperty.call(p, '__returned') &&\n      (p.__returned === p || p.__returned === null)\n    )\n  }\n\n  // this takes the union of get() and set() opts, because it does both\n  async fetch(\n    k,\n    {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      fetchContext = this.fetchContext,\n      forceRefresh = false,\n    } = {}\n  ) {\n    if (!this.fetchMethod) {\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n    }\n\n    let index = this.keyMap.get(k)\n    if (index === undefined) {\n      const p = this.backgroundFetch(k, index, options, fetchContext)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.valList[index]\n      if (this.isBackgroundFetch(v)) {\n        return allowStale && v.__staleWhileFetching !== undefined\n          ? v.__staleWhileFetching\n          : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      if (!forceRefresh && !this.isStale(index)) {\n        this.moveToTail(index)\n        if (updateAgeOnGet) {\n          this.updateItemAge(index)\n        }\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.backgroundFetch(k, index, options, fetchContext)\n      return allowStale && p.__staleWhileFetching !== undefined\n        ? p.__staleWhileFetching\n        : (p.__returned = p)\n    }\n  }\n\n  get(\n    k,\n    {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n    } = {}\n  ) {\n    const index = this.keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.valList[index]\n      const fetching = this.isBackgroundFetch(value)\n      if (this.isStale(index)) {\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          return allowStale ? value : undefined\n        } else {\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching,\n        // so we just return undefined\n        if (fetching) {\n          return undefined\n        }\n        this.moveToTail(index)\n        if (updateAgeOnGet) {\n          this.updateItemAge(index)\n        }\n        return value\n      }\n    }\n  }\n\n  connect(p, n) {\n    this.prev[n] = p\n    this.next[p] = n\n  }\n\n  moveToTail(index) {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.tail) {\n      if (index === this.head) {\n        this.head = this.next[index]\n      } else {\n        this.connect(this.prev[index], this.next[index])\n      }\n      this.connect(this.tail, index)\n      this.tail = index\n    }\n  }\n\n  get del() {\n    deprecatedMethod('del', 'delete')\n    return this.delete\n  }\n\n  delete(k) {\n    let deleted = false\n    if (this.size !== 0) {\n      const index = this.keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.size === 1) {\n          this.clear()\n        } else {\n          this.removeItemSize(index)\n          const v = this.valList[index]\n          if (this.isBackgroundFetch(v)) {\n            v.__abortController.abort()\n          } else {\n            this.dispose(v, k, 'delete')\n            if (this.disposeAfter) {\n              this.disposed.push([v, k, 'delete'])\n            }\n          }\n          this.keyMap.delete(k)\n          this.keyList[index] = null\n          this.valList[index] = null\n          if (index === this.tail) {\n            this.tail = this.prev[index]\n          } else if (index === this.head) {\n            this.head = this.next[index]\n          } else {\n            this.next[this.prev[index]] = this.next[index]\n            this.prev[this.next[index]] = this.prev[index]\n          }\n          this.size--\n          this.free.push(index)\n        }\n      }\n    }\n    if (this.disposed) {\n      while (this.disposed.length) {\n        this.disposeAfter(...this.disposed.shift())\n      }\n    }\n    return deleted\n  }\n\n  clear() {\n    for (const index of this.rindexes({ allowStale: true })) {\n      const v = this.valList[index]\n      if (this.isBackgroundFetch(v)) {\n        v.__abortController.abort()\n      } else {\n        const k = this.keyList[index]\n        this.dispose(v, k, 'delete')\n        if (this.disposeAfter) {\n          this.disposed.push([v, k, 'delete'])\n        }\n      }\n    }\n\n    this.keyMap.clear()\n    this.valList.fill(null)\n    this.keyList.fill(null)\n    if (this.ttls) {\n      this.ttls.fill(0)\n      this.starts.fill(0)\n    }\n    if (this.sizes) {\n      this.sizes.fill(0)\n    }\n    this.head = 0\n    this.tail = 0\n    this.initialFill = 1\n    this.free.length = 0\n    this.calculatedSize = 0\n    this.size = 0\n    if (this.disposed) {\n      while (this.disposed.length) {\n        this.disposeAfter(...this.disposed.shift())\n      }\n    }\n  }\n\n  get reset() {\n    deprecatedMethod('reset', 'clear')\n    return this.clear\n  }\n\n  get length() {\n    deprecatedProperty('length', 'size')\n    return this.size\n  }\n\n  static get AbortController() {\n    return AC\n  }\n  static get AbortSignal() {\n    return AS\n  }\n}\n\nmodule.exports = LRUCache\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.keyvaluecache/node_modules/lru-cache/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.printwithreducedwhitespace/dist/index.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.printwithreducedwhitespace/dist/index.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.printWithReducedWhitespace = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction printWithReducedWhitespace(ast) {\n    const sanitizedAST = (0, graphql_1.visit)(ast, {\n        StringValue(node) {\n            return {\n                ...node,\n                value: Buffer.from(node.value, \"utf8\").toString(\"hex\"),\n                block: false,\n            };\n        },\n    });\n    const withWhitespace = (0, graphql_1.print)(sanitizedAST);\n    const minimizedButStillHex = withWhitespace\n        .replace(/\\s+/g, \" \")\n        .replace(/([^_a-zA-Z0-9]) /g, (_, c) => c)\n        .replace(/ ([^_a-zA-Z0-9])/g, (_, c) => c);\n    return minimizedButStillHex.replace(/\"([a-f0-9]+)\"/g, (_, hex) => JSON.stringify(Buffer.from(hex, \"hex\").toString(\"utf8\")));\n}\nexports.printWithReducedWhitespace = printWithReducedWhitespace;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLnByaW50d2l0aHJlZHVjZWR3aGl0ZXNwYWNlL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAYXBvbGxvXFx1dGlscy5wcmludHdpdGhyZWR1Y2Vkd2hpdGVzcGFjZVxcZGlzdFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnByaW50V2l0aFJlZHVjZWRXaGl0ZXNwYWNlID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5mdW5jdGlvbiBwcmludFdpdGhSZWR1Y2VkV2hpdGVzcGFjZShhc3QpIHtcbiAgICBjb25zdCBzYW5pdGl6ZWRBU1QgPSAoMCwgZ3JhcGhxbF8xLnZpc2l0KShhc3QsIHtcbiAgICAgICAgU3RyaW5nVmFsdWUobm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBCdWZmZXIuZnJvbShub2RlLnZhbHVlLCBcInV0ZjhcIikudG9TdHJpbmcoXCJoZXhcIiksXG4gICAgICAgICAgICAgICAgYmxvY2s6IGZhbHNlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zdCB3aXRoV2hpdGVzcGFjZSA9ICgwLCBncmFwaHFsXzEucHJpbnQpKHNhbml0aXplZEFTVCk7XG4gICAgY29uc3QgbWluaW1pemVkQnV0U3RpbGxIZXggPSB3aXRoV2hpdGVzcGFjZVxuICAgICAgICAucmVwbGFjZSgvXFxzKy9nLCBcIiBcIilcbiAgICAgICAgLnJlcGxhY2UoLyhbXl9hLXpBLVowLTldKSAvZywgKF8sIGMpID0+IGMpXG4gICAgICAgIC5yZXBsYWNlKC8gKFteX2EtekEtWjAtOV0pL2csIChfLCBjKSA9PiBjKTtcbiAgICByZXR1cm4gbWluaW1pemVkQnV0U3RpbGxIZXgucmVwbGFjZSgvXCIoW2EtZjAtOV0rKVwiL2csIChfLCBoZXgpID0+IEpTT04uc3RyaW5naWZ5KEJ1ZmZlci5mcm9tKGhleCwgXCJoZXhcIikudG9TdHJpbmcoXCJ1dGY4XCIpKSk7XG59XG5leHBvcnRzLnByaW50V2l0aFJlZHVjZWRXaGl0ZXNwYWNlID0gcHJpbnRXaXRoUmVkdWNlZFdoaXRlc3BhY2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.printwithreducedwhitespace/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.removealiases/dist/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.removealiases/dist/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.removeAliases = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction removeAliases(ast) {\n    return (0, graphql_1.visit)(ast, {\n        Field(node) {\n            const { alias, ...rest } = node;\n            return rest;\n        },\n    });\n}\nexports.removeAliases = removeAliases;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLnJlbW92ZWFsaWFzZXMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBhcG9sbG9cXHV0aWxzLnJlbW92ZWFsaWFzZXNcXGRpc3RcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yZW1vdmVBbGlhc2VzID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5mdW5jdGlvbiByZW1vdmVBbGlhc2VzKGFzdCkge1xuICAgIHJldHVybiAoMCwgZ3JhcGhxbF8xLnZpc2l0KShhc3QsIHtcbiAgICAgICAgRmllbGQobm9kZSkge1xuICAgICAgICAgICAgY29uc3QgeyBhbGlhcywgLi4ucmVzdCB9ID0gbm9kZTtcbiAgICAgICAgICAgIHJldHVybiByZXN0O1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuZXhwb3J0cy5yZW1vdmVBbGlhc2VzID0gcmVtb3ZlQWxpYXNlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.removealiases/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.sortast/dist/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.sortast/dist/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sortAST = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst lodash_sortby_1 = __importDefault(__webpack_require__(/*! lodash.sortby */ \"(rsc)/./node_modules/lodash.sortby/index.js\"));\nfunction sortAST(ast) {\n    return (0, graphql_1.visit)(ast, {\n        Document(node) {\n            return {\n                ...node,\n                definitions: (0, lodash_sortby_1.default)(node.definitions, \"kind\", \"name.value\"),\n            };\n        },\n        OperationDefinition(node) {\n            return sortVariableDefinitions(node);\n        },\n        SelectionSet(node) {\n            return {\n                ...node,\n                selections: (0, lodash_sortby_1.default)(node.selections, \"kind\", \"name.value\"),\n            };\n        },\n        Field(node) {\n            return sortArguments(node);\n        },\n        FragmentSpread(node) {\n            return sortDirectives(node);\n        },\n        InlineFragment(node) {\n            return sortDirectives(node);\n        },\n        FragmentDefinition(node) {\n            return sortDirectives(sortVariableDefinitions(node));\n        },\n        Directive(node) {\n            return sortArguments(node);\n        },\n    });\n}\nexports.sortAST = sortAST;\nfunction sortDirectives(node) {\n    return \"directives\" in node\n        ? { ...node, directives: (0, lodash_sortby_1.default)(node.directives, \"name.value\") }\n        : node;\n}\nfunction sortArguments(node) {\n    return \"arguments\" in node\n        ? { ...node, arguments: (0, lodash_sortby_1.default)(node.arguments, \"name.value\") }\n        : node;\n}\nfunction sortVariableDefinitions(node) {\n    return \"variableDefinitions\" in node\n        ? {\n            ...node,\n            variableDefinitions: (0, lodash_sortby_1.default)(node.variableDefinitions, \"variable.name.value\"),\n        }\n        : node;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLnNvcnRhc3QvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyx3Q0FBd0MsbUJBQU8sQ0FBQyxrRUFBZTtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBhcG9sbG9cXHV0aWxzLnNvcnRhc3RcXGRpc3RcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zb3J0QVNUID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5jb25zdCBsb2Rhc2hfc29ydGJ5XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImxvZGFzaC5zb3J0YnlcIikpO1xuZnVuY3Rpb24gc29ydEFTVChhc3QpIHtcbiAgICByZXR1cm4gKDAsIGdyYXBocWxfMS52aXNpdCkoYXN0LCB7XG4gICAgICAgIERvY3VtZW50KG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgICAgICBkZWZpbml0aW9uczogKDAsIGxvZGFzaF9zb3J0YnlfMS5kZWZhdWx0KShub2RlLmRlZmluaXRpb25zLCBcImtpbmRcIiwgXCJuYW1lLnZhbHVlXCIpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgT3BlcmF0aW9uRGVmaW5pdGlvbihub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gc29ydFZhcmlhYmxlRGVmaW5pdGlvbnMobm9kZSk7XG4gICAgICAgIH0sXG4gICAgICAgIFNlbGVjdGlvblNldChub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLm5vZGUsXG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uczogKDAsIGxvZGFzaF9zb3J0YnlfMS5kZWZhdWx0KShub2RlLnNlbGVjdGlvbnMsIFwia2luZFwiLCBcIm5hbWUudmFsdWVcIiksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBGaWVsZChub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gc29ydEFyZ3VtZW50cyhub2RlKTtcbiAgICAgICAgfSxcbiAgICAgICAgRnJhZ21lbnRTcHJlYWQobm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIHNvcnREaXJlY3RpdmVzKG5vZGUpO1xuICAgICAgICB9LFxuICAgICAgICBJbmxpbmVGcmFnbWVudChub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gc29ydERpcmVjdGl2ZXMobm9kZSk7XG4gICAgICAgIH0sXG4gICAgICAgIEZyYWdtZW50RGVmaW5pdGlvbihub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gc29ydERpcmVjdGl2ZXMoc29ydFZhcmlhYmxlRGVmaW5pdGlvbnMobm9kZSkpO1xuICAgICAgICB9LFxuICAgICAgICBEaXJlY3RpdmUobm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIHNvcnRBcmd1bWVudHMobm9kZSk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5leHBvcnRzLnNvcnRBU1QgPSBzb3J0QVNUO1xuZnVuY3Rpb24gc29ydERpcmVjdGl2ZXMobm9kZSkge1xuICAgIHJldHVybiBcImRpcmVjdGl2ZXNcIiBpbiBub2RlXG4gICAgICAgID8geyAuLi5ub2RlLCBkaXJlY3RpdmVzOiAoMCwgbG9kYXNoX3NvcnRieV8xLmRlZmF1bHQpKG5vZGUuZGlyZWN0aXZlcywgXCJuYW1lLnZhbHVlXCIpIH1cbiAgICAgICAgOiBub2RlO1xufVxuZnVuY3Rpb24gc29ydEFyZ3VtZW50cyhub2RlKSB7XG4gICAgcmV0dXJuIFwiYXJndW1lbnRzXCIgaW4gbm9kZVxuICAgICAgICA/IHsgLi4ubm9kZSwgYXJndW1lbnRzOiAoMCwgbG9kYXNoX3NvcnRieV8xLmRlZmF1bHQpKG5vZGUuYXJndW1lbnRzLCBcIm5hbWUudmFsdWVcIikgfVxuICAgICAgICA6IG5vZGU7XG59XG5mdW5jdGlvbiBzb3J0VmFyaWFibGVEZWZpbml0aW9ucyhub2RlKSB7XG4gICAgcmV0dXJuIFwidmFyaWFibGVEZWZpbml0aW9uc1wiIGluIG5vZGVcbiAgICAgICAgPyB7XG4gICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgdmFyaWFibGVEZWZpbml0aW9uczogKDAsIGxvZGFzaF9zb3J0YnlfMS5kZWZhdWx0KShub2RlLnZhcmlhYmxlRGVmaW5pdGlvbnMsIFwidmFyaWFibGUubmFtZS52YWx1ZVwiKSxcbiAgICAgICAgfVxuICAgICAgICA6IG5vZGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.sortast/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.stripsensitiveliterals/dist/index.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.stripsensitiveliterals/dist/index.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.stripSensitiveLiterals = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction stripSensitiveLiterals(ast, options = {\n    hideListAndObjectLiterals: false,\n}) {\n    const listAndObjectVisitorIfEnabled = options.hideListAndObjectLiterals\n        ? {\n            ListValue(node) {\n                return { ...node, values: [] };\n            },\n            ObjectValue(node) {\n                return { ...node, fields: [] };\n            },\n        }\n        : {};\n    return (0, graphql_1.visit)(ast, {\n        IntValue(node) {\n            return { ...node, value: \"0\" };\n        },\n        FloatValue(node) {\n            return { ...node, value: \"0\" };\n        },\n        StringValue(node) {\n            return { ...node, value: \"\", block: false };\n        },\n        ...listAndObjectVisitorIfEnabled,\n    });\n}\nexports.stripSensitiveLiterals = stripSensitiveLiterals;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLnN0cmlwc2Vuc2l0aXZlbGl0ZXJhbHMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUIsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsYUFBYTtBQUNiO0FBQ0EseUJBQXlCO0FBQ3pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixTQUFTO0FBQ1Q7QUFDQSxxQkFBcUI7QUFDckIsU0FBUztBQUNUO0FBQ0EscUJBQXFCO0FBQ3JCLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGFwb2xsb1xcdXRpbHMuc3RyaXBzZW5zaXRpdmVsaXRlcmFsc1xcZGlzdFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnN0cmlwU2Vuc2l0aXZlTGl0ZXJhbHMgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmZ1bmN0aW9uIHN0cmlwU2Vuc2l0aXZlTGl0ZXJhbHMoYXN0LCBvcHRpb25zID0ge1xuICAgIGhpZGVMaXN0QW5kT2JqZWN0TGl0ZXJhbHM6IGZhbHNlLFxufSkge1xuICAgIGNvbnN0IGxpc3RBbmRPYmplY3RWaXNpdG9ySWZFbmFibGVkID0gb3B0aW9ucy5oaWRlTGlzdEFuZE9iamVjdExpdGVyYWxzXG4gICAgICAgID8ge1xuICAgICAgICAgICAgTGlzdFZhbHVlKG5vZGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyAuLi5ub2RlLCB2YWx1ZXM6IFtdIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgT2JqZWN0VmFsdWUobm9kZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7IC4uLm5vZGUsIGZpZWxkczogW10gfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH1cbiAgICAgICAgOiB7fTtcbiAgICByZXR1cm4gKDAsIGdyYXBocWxfMS52aXNpdCkoYXN0LCB7XG4gICAgICAgIEludFZhbHVlKG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiB7IC4uLm5vZGUsIHZhbHVlOiBcIjBcIiB9O1xuICAgICAgICB9LFxuICAgICAgICBGbG9hdFZhbHVlKG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiB7IC4uLm5vZGUsIHZhbHVlOiBcIjBcIiB9O1xuICAgICAgICB9LFxuICAgICAgICBTdHJpbmdWYWx1ZShub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4geyAuLi5ub2RlLCB2YWx1ZTogXCJcIiwgYmxvY2s6IGZhbHNlIH07XG4gICAgICAgIH0sXG4gICAgICAgIC4uLmxpc3RBbmRPYmplY3RWaXNpdG9ySWZFbmFibGVkLFxuICAgIH0pO1xufVxuZXhwb3J0cy5zdHJpcFNlbnNpdGl2ZUxpdGVyYWxzID0gc3RyaXBTZW5zaXRpdmVMaXRlcmFscztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.stripsensitiveliterals/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/calculateReferencedFieldsByType.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/calculateReferencedFieldsByType.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateReferencedFieldsByType = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst usage_reporting_protobuf_1 = __webpack_require__(/*! @apollo/usage-reporting-protobuf */ \"(rsc)/./node_modules/@apollo/usage-reporting-protobuf/generated/cjs/protobuf.js\");\nfunction calculateReferencedFieldsByType({ document, schema, resolvedOperationName, }) {\n    const documentSeparatedByOperation = (0, graphql_1.separateOperations)(document);\n    const filteredDocument = documentSeparatedByOperation[resolvedOperationName !== null && resolvedOperationName !== void 0 ? resolvedOperationName : \"\"];\n    if (!filteredDocument) {\n        throw Error(`shouldn't happen: operation '${resolvedOperationName !== null && resolvedOperationName !== void 0 ? resolvedOperationName : \"\"}' not found`);\n    }\n    const typeInfo = new graphql_1.TypeInfo(schema);\n    const interfaces = new Set();\n    const referencedFieldSetByType = Object.create(null);\n    (0, graphql_1.visit)(filteredDocument, (0, graphql_1.visitWithTypeInfo)(typeInfo, {\n        Field(field) {\n            const fieldName = field.name.value;\n            const parentType = typeInfo.getParentType();\n            if (!parentType) {\n                throw Error(`shouldn't happen: missing parent type for field ${fieldName}`);\n            }\n            const parentTypeName = parentType.name;\n            if (!referencedFieldSetByType[parentTypeName]) {\n                referencedFieldSetByType[parentTypeName] = new Set();\n                if ((0, graphql_1.isInterfaceType)(parentType)) {\n                    interfaces.add(parentTypeName);\n                }\n            }\n            referencedFieldSetByType[parentTypeName].add(fieldName);\n        },\n    }));\n    const referencedFieldsByType = Object.create(null);\n    for (const [typeName, fieldNames] of Object.entries(referencedFieldSetByType)) {\n        referencedFieldsByType[typeName] = new usage_reporting_protobuf_1.ReferencedFieldsForType({\n            fieldNames: [...fieldNames],\n            isInterface: interfaces.has(typeName),\n        });\n    }\n    return referencedFieldsByType;\n}\nexports.calculateReferencedFieldsByType = calculateReferencedFieldsByType;\n//# sourceMappingURL=calculateReferencedFieldsByType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLnVzYWdlcmVwb3J0aW5nL2Rpc3QvY2FsY3VsYXRlUmVmZXJlbmNlZEZpZWxkc0J5VHlwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUM7QUFDdkMsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkMsbUNBQW1DLG1CQUFPLENBQUMseUhBQWtDO0FBQzdFLDJDQUEyQywwQ0FBMEM7QUFDckY7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGdHQUFnRztBQUNwSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0UsVUFBVTtBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAYXBvbGxvXFx1dGlscy51c2FnZXJlcG9ydGluZ1xcZGlzdFxcY2FsY3VsYXRlUmVmZXJlbmNlZEZpZWxkc0J5VHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2FsY3VsYXRlUmVmZXJlbmNlZEZpZWxkc0J5VHlwZSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgdXNhZ2VfcmVwb3J0aW5nX3Byb3RvYnVmXzEgPSByZXF1aXJlKFwiQGFwb2xsby91c2FnZS1yZXBvcnRpbmctcHJvdG9idWZcIik7XG5mdW5jdGlvbiBjYWxjdWxhdGVSZWZlcmVuY2VkRmllbGRzQnlUeXBlKHsgZG9jdW1lbnQsIHNjaGVtYSwgcmVzb2x2ZWRPcGVyYXRpb25OYW1lLCB9KSB7XG4gICAgY29uc3QgZG9jdW1lbnRTZXBhcmF0ZWRCeU9wZXJhdGlvbiA9ICgwLCBncmFwaHFsXzEuc2VwYXJhdGVPcGVyYXRpb25zKShkb2N1bWVudCk7XG4gICAgY29uc3QgZmlsdGVyZWREb2N1bWVudCA9IGRvY3VtZW50U2VwYXJhdGVkQnlPcGVyYXRpb25bcmVzb2x2ZWRPcGVyYXRpb25OYW1lICE9PSBudWxsICYmIHJlc29sdmVkT3BlcmF0aW9uTmFtZSAhPT0gdm9pZCAwID8gcmVzb2x2ZWRPcGVyYXRpb25OYW1lIDogXCJcIl07XG4gICAgaWYgKCFmaWx0ZXJlZERvY3VtZW50KSB7XG4gICAgICAgIHRocm93IEVycm9yKGBzaG91bGRuJ3QgaGFwcGVuOiBvcGVyYXRpb24gJyR7cmVzb2x2ZWRPcGVyYXRpb25OYW1lICE9PSBudWxsICYmIHJlc29sdmVkT3BlcmF0aW9uTmFtZSAhPT0gdm9pZCAwID8gcmVzb2x2ZWRPcGVyYXRpb25OYW1lIDogXCJcIn0nIG5vdCBmb3VuZGApO1xuICAgIH1cbiAgICBjb25zdCB0eXBlSW5mbyA9IG5ldyBncmFwaHFsXzEuVHlwZUluZm8oc2NoZW1hKTtcbiAgICBjb25zdCBpbnRlcmZhY2VzID0gbmV3IFNldCgpO1xuICAgIGNvbnN0IHJlZmVyZW5jZWRGaWVsZFNldEJ5VHlwZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgKDAsIGdyYXBocWxfMS52aXNpdCkoZmlsdGVyZWREb2N1bWVudCwgKDAsIGdyYXBocWxfMS52aXNpdFdpdGhUeXBlSW5mbykodHlwZUluZm8sIHtcbiAgICAgICAgRmllbGQoZmllbGQpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IGZpZWxkLm5hbWUudmFsdWU7XG4gICAgICAgICAgICBjb25zdCBwYXJlbnRUeXBlID0gdHlwZUluZm8uZ2V0UGFyZW50VHlwZSgpO1xuICAgICAgICAgICAgaWYgKCFwYXJlbnRUeXBlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoYHNob3VsZG4ndCBoYXBwZW46IG1pc3NpbmcgcGFyZW50IHR5cGUgZm9yIGZpZWxkICR7ZmllbGROYW1lfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGFyZW50VHlwZU5hbWUgPSBwYXJlbnRUeXBlLm5hbWU7XG4gICAgICAgICAgICBpZiAoIXJlZmVyZW5jZWRGaWVsZFNldEJ5VHlwZVtwYXJlbnRUeXBlTmFtZV0pIHtcbiAgICAgICAgICAgICAgICByZWZlcmVuY2VkRmllbGRTZXRCeVR5cGVbcGFyZW50VHlwZU5hbWVdID0gbmV3IFNldCgpO1xuICAgICAgICAgICAgICAgIGlmICgoMCwgZ3JhcGhxbF8xLmlzSW50ZXJmYWNlVHlwZSkocGFyZW50VHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJmYWNlcy5hZGQocGFyZW50VHlwZU5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlZmVyZW5jZWRGaWVsZFNldEJ5VHlwZVtwYXJlbnRUeXBlTmFtZV0uYWRkKGZpZWxkTmFtZSk7XG4gICAgICAgIH0sXG4gICAgfSkpO1xuICAgIGNvbnN0IHJlZmVyZW5jZWRGaWVsZHNCeVR5cGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvciAoY29uc3QgW3R5cGVOYW1lLCBmaWVsZE5hbWVzXSBvZiBPYmplY3QuZW50cmllcyhyZWZlcmVuY2VkRmllbGRTZXRCeVR5cGUpKSB7XG4gICAgICAgIHJlZmVyZW5jZWRGaWVsZHNCeVR5cGVbdHlwZU5hbWVdID0gbmV3IHVzYWdlX3JlcG9ydGluZ19wcm90b2J1Zl8xLlJlZmVyZW5jZWRGaWVsZHNGb3JUeXBlKHtcbiAgICAgICAgICAgIGZpZWxkTmFtZXM6IFsuLi5maWVsZE5hbWVzXSxcbiAgICAgICAgICAgIGlzSW50ZXJmYWNlOiBpbnRlcmZhY2VzLmhhcyh0eXBlTmFtZSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVmZXJlbmNlZEZpZWxkc0J5VHlwZTtcbn1cbmV4cG9ydHMuY2FsY3VsYXRlUmVmZXJlbmNlZEZpZWxkc0J5VHlwZSA9IGNhbGN1bGF0ZVJlZmVyZW5jZWRGaWVsZHNCeVR5cGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxjdWxhdGVSZWZlcmVuY2VkRmllbGRzQnlUeXBlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/calculateReferencedFieldsByType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.usageReportingSignature = exports.calculateReferencedFieldsByType = void 0;\nvar calculateReferencedFieldsByType_1 = __webpack_require__(/*! ./calculateReferencedFieldsByType */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/calculateReferencedFieldsByType.js\");\nObject.defineProperty(exports, \"calculateReferencedFieldsByType\", ({ enumerable: true, get: function () { return calculateReferencedFieldsByType_1.calculateReferencedFieldsByType; } }));\nvar signature_1 = __webpack_require__(/*! ./signature */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/signature.js\");\nObject.defineProperty(exports, \"usageReportingSignature\", ({ enumerable: true, get: function () { return signature_1.usageReportingSignature; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLnVzYWdlcmVwb3J0aW5nL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCLEdBQUcsdUNBQXVDO0FBQ3pFLHdDQUF3QyxtQkFBTyxDQUFDLG9LQUFtQztBQUNuRixtRUFBa0UsRUFBRSxxQ0FBcUMsNkVBQTZFLEVBQUM7QUFDdkwsa0JBQWtCLG1CQUFPLENBQUMsd0hBQWE7QUFDdkMsMkRBQTBELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQ2pKIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAYXBvbGxvXFx1dGlscy51c2FnZXJlcG9ydGluZ1xcZGlzdFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVzYWdlUmVwb3J0aW5nU2lnbmF0dXJlID0gZXhwb3J0cy5jYWxjdWxhdGVSZWZlcmVuY2VkRmllbGRzQnlUeXBlID0gdm9pZCAwO1xudmFyIGNhbGN1bGF0ZVJlZmVyZW5jZWRGaWVsZHNCeVR5cGVfMSA9IHJlcXVpcmUoXCIuL2NhbGN1bGF0ZVJlZmVyZW5jZWRGaWVsZHNCeVR5cGVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjYWxjdWxhdGVSZWZlcmVuY2VkRmllbGRzQnlUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjYWxjdWxhdGVSZWZlcmVuY2VkRmllbGRzQnlUeXBlXzEuY2FsY3VsYXRlUmVmZXJlbmNlZEZpZWxkc0J5VHlwZTsgfSB9KTtcbnZhciBzaWduYXR1cmVfMSA9IHJlcXVpcmUoXCIuL3NpZ25hdHVyZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInVzYWdlUmVwb3J0aW5nU2lnbmF0dXJlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduYXR1cmVfMS51c2FnZVJlcG9ydGluZ1NpZ25hdHVyZTsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/signature.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/signature.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.usageReportingSignature = void 0;\nconst utils_dropunuseddefinitions_1 = __webpack_require__(/*! @apollo/utils.dropunuseddefinitions */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.dropunuseddefinitions/dist/index.js\");\nconst utils_stripsensitiveliterals_1 = __webpack_require__(/*! @apollo/utils.stripsensitiveliterals */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.stripsensitiveliterals/dist/index.js\");\nconst utils_printwithreducedwhitespace_1 = __webpack_require__(/*! @apollo/utils.printwithreducedwhitespace */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.printwithreducedwhitespace/dist/index.js\");\nconst utils_removealiases_1 = __webpack_require__(/*! @apollo/utils.removealiases */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.removealiases/dist/index.js\");\nconst utils_sortast_1 = __webpack_require__(/*! @apollo/utils.sortast */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.sortast/dist/index.js\");\nfunction usageReportingSignature(ast, operationName) {\n    return (0, utils_printwithreducedwhitespace_1.printWithReducedWhitespace)((0, utils_sortast_1.sortAST)((0, utils_removealiases_1.removeAliases)((0, utils_stripsensitiveliterals_1.stripSensitiveLiterals)((0, utils_dropunuseddefinitions_1.dropUnusedDefinitions)(ast, operationName), {\n        hideListAndObjectLiterals: true,\n    }))));\n}\nexports.usageReportingSignature = usageReportingSignature;\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AYXBvbGxvL3V0aWxzLnVzYWdlcmVwb3J0aW5nL2Rpc3Qvc2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQjtBQUMvQixzQ0FBc0MsbUJBQU8sQ0FBQyxtSkFBcUM7QUFDbkYsdUNBQXVDLG1CQUFPLENBQUMscUpBQXNDO0FBQ3JGLDJDQUEyQyxtQkFBTyxDQUFDLDZKQUEwQztBQUM3Riw4QkFBOEIsbUJBQU8sQ0FBQyxtSUFBNkI7QUFDbkUsd0JBQXdCLG1CQUFPLENBQUMsdUhBQXVCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLCtCQUErQjtBQUMvQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGFwb2xsb1xcdXRpbHMudXNhZ2VyZXBvcnRpbmdcXGRpc3RcXHNpZ25hdHVyZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNhZ2VSZXBvcnRpbmdTaWduYXR1cmUgPSB2b2lkIDA7XG5jb25zdCB1dGlsc19kcm9wdW51c2VkZGVmaW5pdGlvbnNfMSA9IHJlcXVpcmUoXCJAYXBvbGxvL3V0aWxzLmRyb3B1bnVzZWRkZWZpbml0aW9uc1wiKTtcbmNvbnN0IHV0aWxzX3N0cmlwc2Vuc2l0aXZlbGl0ZXJhbHNfMSA9IHJlcXVpcmUoXCJAYXBvbGxvL3V0aWxzLnN0cmlwc2Vuc2l0aXZlbGl0ZXJhbHNcIik7XG5jb25zdCB1dGlsc19wcmludHdpdGhyZWR1Y2Vkd2hpdGVzcGFjZV8xID0gcmVxdWlyZShcIkBhcG9sbG8vdXRpbHMucHJpbnR3aXRocmVkdWNlZHdoaXRlc3BhY2VcIik7XG5jb25zdCB1dGlsc19yZW1vdmVhbGlhc2VzXzEgPSByZXF1aXJlKFwiQGFwb2xsby91dGlscy5yZW1vdmVhbGlhc2VzXCIpO1xuY29uc3QgdXRpbHNfc29ydGFzdF8xID0gcmVxdWlyZShcIkBhcG9sbG8vdXRpbHMuc29ydGFzdFwiKTtcbmZ1bmN0aW9uIHVzYWdlUmVwb3J0aW5nU2lnbmF0dXJlKGFzdCwgb3BlcmF0aW9uTmFtZSkge1xuICAgIHJldHVybiAoMCwgdXRpbHNfcHJpbnR3aXRocmVkdWNlZHdoaXRlc3BhY2VfMS5wcmludFdpdGhSZWR1Y2VkV2hpdGVzcGFjZSkoKDAsIHV0aWxzX3NvcnRhc3RfMS5zb3J0QVNUKSgoMCwgdXRpbHNfcmVtb3ZlYWxpYXNlc18xLnJlbW92ZUFsaWFzZXMpKCgwLCB1dGlsc19zdHJpcHNlbnNpdGl2ZWxpdGVyYWxzXzEuc3RyaXBTZW5zaXRpdmVMaXRlcmFscykoKDAsIHV0aWxzX2Ryb3B1bnVzZWRkZWZpbml0aW9uc18xLmRyb3BVbnVzZWREZWZpbml0aW9ucykoYXN0LCBvcGVyYXRpb25OYW1lKSwge1xuICAgICAgICBoaWRlTGlzdEFuZE9iamVjdExpdGVyYWxzOiB0cnVlLFxuICAgIH0pKSkpO1xufVxuZXhwb3J0cy51c2FnZVJlcG9ydGluZ1NpZ25hdHVyZSA9IHVzYWdlUmVwb3J0aW5nU2lnbmF0dXJlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbmF0dXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@apollo/utils.usagereporting/dist/signature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/extensions.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/extensions.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.extractExtensionsFromSchema = exports.applyExtensions = exports.mergeExtensions = exports.travelSchemaPossibleExtensions = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nfunction travelSchemaPossibleExtensions(schema, hooks) {\n    hooks.onSchema(schema);\n    const typesMap = schema.getTypeMap();\n    for (const [, type] of Object.entries(typesMap)) {\n        const isPredefinedScalar = (0, graphql_1.isScalarType)(type) && (0, graphql_1.isSpecifiedScalarType)(type);\n        const isIntrospection = (0, graphql_1.isIntrospectionType)(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if ((0, graphql_1.isObjectType)(type)) {\n            hooks.onObjectType(type);\n            const fields = type.getFields();\n            for (const [, field] of Object.entries(fields)) {\n                hooks.onObjectField(type, field);\n                const args = field.args || [];\n                for (const arg of args) {\n                    hooks.onObjectFieldArg(type, field, arg);\n                }\n            }\n        }\n        else if ((0, graphql_1.isInterfaceType)(type)) {\n            hooks.onInterface(type);\n            const fields = type.getFields();\n            for (const [, field] of Object.entries(fields)) {\n                hooks.onInterfaceField(type, field);\n                const args = field.args || [];\n                for (const arg of args) {\n                    hooks.onInterfaceFieldArg(type, field, arg);\n                }\n            }\n        }\n        else if ((0, graphql_1.isInputObjectType)(type)) {\n            hooks.onInputType(type);\n            const fields = type.getFields();\n            for (const [, field] of Object.entries(fields)) {\n                hooks.onInputFieldType(type, field);\n            }\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            hooks.onUnion(type);\n        }\n        else if ((0, graphql_1.isScalarType)(type)) {\n            hooks.onScalar(type);\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            hooks.onEnum(type);\n            for (const value of type.getValues()) {\n                hooks.onEnumValue(type, value);\n            }\n        }\n    }\n}\nexports.travelSchemaPossibleExtensions = travelSchemaPossibleExtensions;\nfunction mergeExtensions(extensions) {\n    return (0, utils_1.mergeDeep)(extensions);\n}\nexports.mergeExtensions = mergeExtensions;\nfunction applyExtensionObject(obj, extensions) {\n    if (!obj) {\n        return;\n    }\n    obj.extensions = (0, utils_1.mergeDeep)([obj.extensions || {}, extensions || {}]);\n}\nfunction applyExtensions(schema, extensions) {\n    applyExtensionObject(schema, extensions.schemaExtensions);\n    for (const [typeName, data] of Object.entries(extensions.types || {})) {\n        const type = schema.getType(typeName);\n        if (type) {\n            applyExtensionObject(type, data.extensions);\n            if (data.type === 'object' || data.type === 'interface') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    if (field) {\n                        applyExtensionObject(field, fieldData.extensions);\n                        for (const [arg, argData] of Object.entries(fieldData.arguments)) {\n                            applyExtensionObject(field.args.find(a => a.name === arg), argData);\n                        }\n                    }\n                }\n            }\n            else if (data.type === 'input') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    applyExtensionObject(field, fieldData.extensions);\n                }\n            }\n            else if (data.type === 'enum') {\n                for (const [valueName, valueData] of Object.entries(data.values)) {\n                    const value = type.getValue(valueName);\n                    applyExtensionObject(value, valueData);\n                }\n            }\n        }\n    }\n    return schema;\n}\nexports.applyExtensions = applyExtensions;\nfunction extractExtensionsFromSchema(schema) {\n    const result = {\n        schemaExtensions: {},\n        types: {},\n    };\n    travelSchemaPossibleExtensions(schema, {\n        onSchema: schema => (result.schemaExtensions = schema.extensions || {}),\n        onObjectType: type => (result.types[type.name] = { fields: {}, type: 'object', extensions: type.extensions || {} }),\n        onObjectField: (type, field) => (result.types[type.name].fields[field.name] = {\n            arguments: {},\n            extensions: field.extensions || {},\n        }),\n        onObjectFieldArg: (type, field, arg) => (result.types[type.name].fields[field.name].arguments[arg.name] = arg.extensions || {}),\n        onInterface: type => (result.types[type.name] = { fields: {}, type: 'interface', extensions: type.extensions || {} }),\n        onInterfaceField: (type, field) => (result.types[type.name].fields[field.name] = {\n            arguments: {},\n            extensions: field.extensions || {},\n        }),\n        onInterfaceFieldArg: (type, field, arg) => (result.types[type.name].fields[field.name].arguments[arg.name] =\n            arg.extensions || {}),\n        onEnum: type => (result.types[type.name] = { values: {}, type: 'enum', extensions: type.extensions || {} }),\n        onEnumValue: (type, value) => (result.types[type.name].values[value.name] = value.extensions || {}),\n        onScalar: type => (result.types[type.name] = { type: 'scalar', extensions: type.extensions || {} }),\n        onUnion: type => (result.types[type.name] = { type: 'union', extensions: type.extensions || {} }),\n        onInputType: type => (result.types[type.name] = { fields: {}, type: 'input', extensions: type.extensions || {} }),\n        onInputFieldType: (type, field) => (result.types[type.name].fields[field.name] = { extensions: field.extensions || {} }),\n    });\n    return result;\n}\nexports.extractExtensionsFromSchema = extractExtensionsFromSchema;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvZXh0ZW5zaW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQ0FBbUMsR0FBRyx1QkFBdUIsR0FBRyx1QkFBdUIsR0FBRyxzQ0FBc0M7QUFDaEksa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkMsZ0JBQWdCLG1CQUFPLENBQUMsb0hBQXNCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxrQkFBa0I7QUFDbkY7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsOEVBQThFO0FBQzlFLDJEQUEyRCxVQUFVLHFEQUFxRDtBQUMxSDtBQUNBLHlCQUF5QjtBQUN6Qiw4Q0FBOEM7QUFDOUMsU0FBUztBQUNULHNJQUFzSTtBQUN0SSwwREFBMEQsVUFBVSx3REFBd0Q7QUFDNUg7QUFDQSx5QkFBeUI7QUFDekIsOENBQThDO0FBQzlDLFNBQVM7QUFDVDtBQUNBLGdDQUFnQztBQUNoQyxxREFBcUQsVUFBVSxtREFBbUQ7QUFDbEgsMEdBQTBHO0FBQzFHLHVEQUF1RCxtREFBbUQ7QUFDMUcsc0RBQXNELGtEQUFrRDtBQUN4RywwREFBMEQsVUFBVSxvREFBb0Q7QUFDeEgsMkZBQTJGLG9DQUFvQztBQUMvSCxLQUFLO0FBQ0w7QUFDQTtBQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXG1lcmdlXFxjanNcXGV4dGVuc2lvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmV4dHJhY3RFeHRlbnNpb25zRnJvbVNjaGVtYSA9IGV4cG9ydHMuYXBwbHlFeHRlbnNpb25zID0gZXhwb3J0cy5tZXJnZUV4dGVuc2lvbnMgPSBleHBvcnRzLnRyYXZlbFNjaGVtYVBvc3NpYmxlRXh0ZW5zaW9ucyA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAZ3JhcGhxbC10b29scy91dGlsc1wiKTtcbmZ1bmN0aW9uIHRyYXZlbFNjaGVtYVBvc3NpYmxlRXh0ZW5zaW9ucyhzY2hlbWEsIGhvb2tzKSB7XG4gICAgaG9va3Mub25TY2hlbWEoc2NoZW1hKTtcbiAgICBjb25zdCB0eXBlc01hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgZm9yIChjb25zdCBbLCB0eXBlXSBvZiBPYmplY3QuZW50cmllcyh0eXBlc01hcCkpIHtcbiAgICAgICAgY29uc3QgaXNQcmVkZWZpbmVkU2NhbGFyID0gKDAsIGdyYXBocWxfMS5pc1NjYWxhclR5cGUpKHR5cGUpICYmICgwLCBncmFwaHFsXzEuaXNTcGVjaWZpZWRTY2FsYXJUeXBlKSh0eXBlKTtcbiAgICAgICAgY29uc3QgaXNJbnRyb3NwZWN0aW9uID0gKDAsIGdyYXBocWxfMS5pc0ludHJvc3BlY3Rpb25UeXBlKSh0eXBlKTtcbiAgICAgICAgaWYgKGlzUHJlZGVmaW5lZFNjYWxhciB8fCBpc0ludHJvc3BlY3Rpb24pIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoMCwgZ3JhcGhxbF8xLmlzT2JqZWN0VHlwZSkodHlwZSkpIHtcbiAgICAgICAgICAgIGhvb2tzLm9uT2JqZWN0VHlwZSh0eXBlKTtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkcyA9IHR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFssIGZpZWxkXSBvZiBPYmplY3QuZW50cmllcyhmaWVsZHMpKSB7XG4gICAgICAgICAgICAgICAgaG9va3Mub25PYmplY3RGaWVsZCh0eXBlLCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgY29uc3QgYXJncyA9IGZpZWxkLmFyZ3MgfHwgW107XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhcmcgb2YgYXJncykge1xuICAgICAgICAgICAgICAgICAgICBob29rcy5vbk9iamVjdEZpZWxkQXJnKHR5cGUsIGZpZWxkLCBhcmcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgoMCwgZ3JhcGhxbF8xLmlzSW50ZXJmYWNlVHlwZSkodHlwZSkpIHtcbiAgICAgICAgICAgIGhvb2tzLm9uSW50ZXJmYWNlKHR5cGUpO1xuICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgWywgZmllbGRdIG9mIE9iamVjdC5lbnRyaWVzKGZpZWxkcykpIHtcbiAgICAgICAgICAgICAgICBob29rcy5vbkludGVyZmFjZUZpZWxkKHR5cGUsIGZpZWxkKTtcbiAgICAgICAgICAgICAgICBjb25zdCBhcmdzID0gZmllbGQuYXJncyB8fCBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGFyZyBvZiBhcmdzKSB7XG4gICAgICAgICAgICAgICAgICAgIGhvb2tzLm9uSW50ZXJmYWNlRmllbGRBcmcodHlwZSwgZmllbGQsIGFyZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCgwLCBncmFwaHFsXzEuaXNJbnB1dE9iamVjdFR5cGUpKHR5cGUpKSB7XG4gICAgICAgICAgICBob29rcy5vbklucHV0VHlwZSh0eXBlKTtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkcyA9IHR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFssIGZpZWxkXSBvZiBPYmplY3QuZW50cmllcyhmaWVsZHMpKSB7XG4gICAgICAgICAgICAgICAgaG9va3Mub25JbnB1dEZpZWxkVHlwZSh0eXBlLCBmaWVsZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoKDAsIGdyYXBocWxfMS5pc1VuaW9uVHlwZSkodHlwZSkpIHtcbiAgICAgICAgICAgIGhvb2tzLm9uVW5pb24odHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoKDAsIGdyYXBocWxfMS5pc1NjYWxhclR5cGUpKHR5cGUpKSB7XG4gICAgICAgICAgICBob29rcy5vblNjYWxhcih0eXBlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgoMCwgZ3JhcGhxbF8xLmlzRW51bVR5cGUpKHR5cGUpKSB7XG4gICAgICAgICAgICBob29rcy5vbkVudW0odHlwZSk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHR5cGUuZ2V0VmFsdWVzKCkpIHtcbiAgICAgICAgICAgICAgICBob29rcy5vbkVudW1WYWx1ZSh0eXBlLCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLnRyYXZlbFNjaGVtYVBvc3NpYmxlRXh0ZW5zaW9ucyA9IHRyYXZlbFNjaGVtYVBvc3NpYmxlRXh0ZW5zaW9ucztcbmZ1bmN0aW9uIG1lcmdlRXh0ZW5zaW9ucyhleHRlbnNpb25zKSB7XG4gICAgcmV0dXJuICgwLCB1dGlsc18xLm1lcmdlRGVlcCkoZXh0ZW5zaW9ucyk7XG59XG5leHBvcnRzLm1lcmdlRXh0ZW5zaW9ucyA9IG1lcmdlRXh0ZW5zaW9ucztcbmZ1bmN0aW9uIGFwcGx5RXh0ZW5zaW9uT2JqZWN0KG9iaiwgZXh0ZW5zaW9ucykge1xuICAgIGlmICghb2JqKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgb2JqLmV4dGVuc2lvbnMgPSAoMCwgdXRpbHNfMS5tZXJnZURlZXApKFtvYmouZXh0ZW5zaW9ucyB8fCB7fSwgZXh0ZW5zaW9ucyB8fCB7fV0pO1xufVxuZnVuY3Rpb24gYXBwbHlFeHRlbnNpb25zKHNjaGVtYSwgZXh0ZW5zaW9ucykge1xuICAgIGFwcGx5RXh0ZW5zaW9uT2JqZWN0KHNjaGVtYSwgZXh0ZW5zaW9ucy5zY2hlbWFFeHRlbnNpb25zKTtcbiAgICBmb3IgKGNvbnN0IFt0eXBlTmFtZSwgZGF0YV0gb2YgT2JqZWN0LmVudHJpZXMoZXh0ZW5zaW9ucy50eXBlcyB8fCB7fSkpIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHNjaGVtYS5nZXRUeXBlKHR5cGVOYW1lKTtcbiAgICAgICAgaWYgKHR5cGUpIHtcbiAgICAgICAgICAgIGFwcGx5RXh0ZW5zaW9uT2JqZWN0KHR5cGUsIGRhdGEuZXh0ZW5zaW9ucyk7XG4gICAgICAgICAgICBpZiAoZGF0YS50eXBlID09PSAnb2JqZWN0JyB8fCBkYXRhLnR5cGUgPT09ICdpbnRlcmZhY2UnKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBbZmllbGROYW1lLCBmaWVsZERhdGFdIG9mIE9iamVjdC5lbnRyaWVzKGRhdGEuZmllbGRzKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IHR5cGUuZ2V0RmllbGRzKClbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcHBseUV4dGVuc2lvbk9iamVjdChmaWVsZCwgZmllbGREYXRhLmV4dGVuc2lvbnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBbYXJnLCBhcmdEYXRhXSBvZiBPYmplY3QuZW50cmllcyhmaWVsZERhdGEuYXJndW1lbnRzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcGx5RXh0ZW5zaW9uT2JqZWN0KGZpZWxkLmFyZ3MuZmluZChhID0+IGEubmFtZSA9PT0gYXJnKSwgYXJnRGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkYXRhLnR5cGUgPT09ICdpbnB1dCcpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtmaWVsZE5hbWUsIGZpZWxkRGF0YV0gb2YgT2JqZWN0LmVudHJpZXMoZGF0YS5maWVsZHMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gdHlwZS5nZXRGaWVsZHMoKVtmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBhcHBseUV4dGVuc2lvbk9iamVjdChmaWVsZCwgZmllbGREYXRhLmV4dGVuc2lvbnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGRhdGEudHlwZSA9PT0gJ2VudW0nKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBbdmFsdWVOYW1lLCB2YWx1ZURhdGFdIG9mIE9iamVjdC5lbnRyaWVzKGRhdGEudmFsdWVzKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHR5cGUuZ2V0VmFsdWUodmFsdWVOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgYXBwbHlFeHRlbnNpb25PYmplY3QodmFsdWUsIHZhbHVlRGF0YSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzY2hlbWE7XG59XG5leHBvcnRzLmFwcGx5RXh0ZW5zaW9ucyA9IGFwcGx5RXh0ZW5zaW9ucztcbmZ1bmN0aW9uIGV4dHJhY3RFeHRlbnNpb25zRnJvbVNjaGVtYShzY2hlbWEpIHtcbiAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgIHNjaGVtYUV4dGVuc2lvbnM6IHt9LFxuICAgICAgICB0eXBlczoge30sXG4gICAgfTtcbiAgICB0cmF2ZWxTY2hlbWFQb3NzaWJsZUV4dGVuc2lvbnMoc2NoZW1hLCB7XG4gICAgICAgIG9uU2NoZW1hOiBzY2hlbWEgPT4gKHJlc3VsdC5zY2hlbWFFeHRlbnNpb25zID0gc2NoZW1hLmV4dGVuc2lvbnMgfHwge30pLFxuICAgICAgICBvbk9iamVjdFR5cGU6IHR5cGUgPT4gKHJlc3VsdC50eXBlc1t0eXBlLm5hbWVdID0geyBmaWVsZHM6IHt9LCB0eXBlOiAnb2JqZWN0JywgZXh0ZW5zaW9uczogdHlwZS5leHRlbnNpb25zIHx8IHt9IH0pLFxuICAgICAgICBvbk9iamVjdEZpZWxkOiAodHlwZSwgZmllbGQpID0+IChyZXN1bHQudHlwZXNbdHlwZS5uYW1lXS5maWVsZHNbZmllbGQubmFtZV0gPSB7XG4gICAgICAgICAgICBhcmd1bWVudHM6IHt9LFxuICAgICAgICAgICAgZXh0ZW5zaW9uczogZmllbGQuZXh0ZW5zaW9ucyB8fCB7fSxcbiAgICAgICAgfSksXG4gICAgICAgIG9uT2JqZWN0RmllbGRBcmc6ICh0eXBlLCBmaWVsZCwgYXJnKSA9PiAocmVzdWx0LnR5cGVzW3R5cGUubmFtZV0uZmllbGRzW2ZpZWxkLm5hbWVdLmFyZ3VtZW50c1thcmcubmFtZV0gPSBhcmcuZXh0ZW5zaW9ucyB8fCB7fSksXG4gICAgICAgIG9uSW50ZXJmYWNlOiB0eXBlID0+IChyZXN1bHQudHlwZXNbdHlwZS5uYW1lXSA9IHsgZmllbGRzOiB7fSwgdHlwZTogJ2ludGVyZmFjZScsIGV4dGVuc2lvbnM6IHR5cGUuZXh0ZW5zaW9ucyB8fCB7fSB9KSxcbiAgICAgICAgb25JbnRlcmZhY2VGaWVsZDogKHR5cGUsIGZpZWxkKSA9PiAocmVzdWx0LnR5cGVzW3R5cGUubmFtZV0uZmllbGRzW2ZpZWxkLm5hbWVdID0ge1xuICAgICAgICAgICAgYXJndW1lbnRzOiB7fSxcbiAgICAgICAgICAgIGV4dGVuc2lvbnM6IGZpZWxkLmV4dGVuc2lvbnMgfHwge30sXG4gICAgICAgIH0pLFxuICAgICAgICBvbkludGVyZmFjZUZpZWxkQXJnOiAodHlwZSwgZmllbGQsIGFyZykgPT4gKHJlc3VsdC50eXBlc1t0eXBlLm5hbWVdLmZpZWxkc1tmaWVsZC5uYW1lXS5hcmd1bWVudHNbYXJnLm5hbWVdID1cbiAgICAgICAgICAgIGFyZy5leHRlbnNpb25zIHx8IHt9KSxcbiAgICAgICAgb25FbnVtOiB0eXBlID0+IChyZXN1bHQudHlwZXNbdHlwZS5uYW1lXSA9IHsgdmFsdWVzOiB7fSwgdHlwZTogJ2VudW0nLCBleHRlbnNpb25zOiB0eXBlLmV4dGVuc2lvbnMgfHwge30gfSksXG4gICAgICAgIG9uRW51bVZhbHVlOiAodHlwZSwgdmFsdWUpID0+IChyZXN1bHQudHlwZXNbdHlwZS5uYW1lXS52YWx1ZXNbdmFsdWUubmFtZV0gPSB2YWx1ZS5leHRlbnNpb25zIHx8IHt9KSxcbiAgICAgICAgb25TY2FsYXI6IHR5cGUgPT4gKHJlc3VsdC50eXBlc1t0eXBlLm5hbWVdID0geyB0eXBlOiAnc2NhbGFyJywgZXh0ZW5zaW9uczogdHlwZS5leHRlbnNpb25zIHx8IHt9IH0pLFxuICAgICAgICBvblVuaW9uOiB0eXBlID0+IChyZXN1bHQudHlwZXNbdHlwZS5uYW1lXSA9IHsgdHlwZTogJ3VuaW9uJywgZXh0ZW5zaW9uczogdHlwZS5leHRlbnNpb25zIHx8IHt9IH0pLFxuICAgICAgICBvbklucHV0VHlwZTogdHlwZSA9PiAocmVzdWx0LnR5cGVzW3R5cGUubmFtZV0gPSB7IGZpZWxkczoge30sIHR5cGU6ICdpbnB1dCcsIGV4dGVuc2lvbnM6IHR5cGUuZXh0ZW5zaW9ucyB8fCB7fSB9KSxcbiAgICAgICAgb25JbnB1dEZpZWxkVHlwZTogKHR5cGUsIGZpZWxkKSA9PiAocmVzdWx0LnR5cGVzW3R5cGUubmFtZV0uZmllbGRzW2ZpZWxkLm5hbWVdID0geyBleHRlbnNpb25zOiBmaWVsZC5leHRlbnNpb25zIHx8IHt9IH0pLFxuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmV4dHJhY3RFeHRlbnNpb25zRnJvbVNjaGVtYSA9IGV4dHJhY3RFeHRlbnNpb25zRnJvbVNjaGVtYTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/extensions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./merge-resolvers.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/merge-resolvers.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./typedefs-mergers/index.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./extensions.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/extensions.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsOEhBQXNCO0FBQ25ELHFCQUFxQixtQkFBTyxDQUFDLDRJQUE2QjtBQUMxRCxxQkFBcUIsbUJBQU8sQ0FBQyxvSEFBaUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxtZXJnZVxcY2pzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tZXJnZS1yZXNvbHZlcnMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZWRlZnMtbWVyZ2Vycy9pbmRleC5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9leHRlbnNpb25zLmpzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/merge-resolvers.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/merge-resolvers.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeResolvers = void 0;\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\n/**\n * Deep merges multiple resolver definition objects into a single definition.\n * @param resolversDefinitions Resolver definitions to be merged\n * @param options Additional options\n *\n * ```js\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const clientResolver = require('./clientResolver');\n * const productResolver = require('./productResolver');\n *\n * const resolvers = mergeResolvers([\n *  clientResolver,\n *  productResolver,\n * ]);\n * ```\n *\n * If you don't want to manually create the array of resolver objects, you can\n * also use this function along with loadFiles:\n *\n * ```js\n * const path = require('path');\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const { loadFilesSync } = require('@graphql-tools/load-files');\n *\n * const resolversArray = loadFilesSync(path.join(__dirname, './resolvers'));\n *\n * const resolvers = mergeResolvers(resolversArray)\n * ```\n */\nfunction mergeResolvers(resolversDefinitions, options) {\n    if (!resolversDefinitions || (Array.isArray(resolversDefinitions) && resolversDefinitions.length === 0)) {\n        return {};\n    }\n    if (!Array.isArray(resolversDefinitions)) {\n        return resolversDefinitions;\n    }\n    if (resolversDefinitions.length === 1) {\n        return resolversDefinitions[0] || {};\n    }\n    const resolvers = new Array();\n    for (let resolversDefinition of resolversDefinitions) {\n        if (Array.isArray(resolversDefinition)) {\n            resolversDefinition = mergeResolvers(resolversDefinition);\n        }\n        if (typeof resolversDefinition === 'object' && resolversDefinition) {\n            resolvers.push(resolversDefinition);\n        }\n    }\n    const result = (0, utils_1.mergeDeep)(resolvers, true);\n    if (options === null || options === void 0 ? void 0 : options.exclusions) {\n        for (const exclusion of options.exclusions) {\n            const [typeName, fieldName] = exclusion.split('.');\n            if (!fieldName || fieldName === '*') {\n                delete result[typeName];\n            }\n            else if (result[typeName]) {\n                delete result[typeName][fieldName];\n            }\n        }\n    }\n    return result;\n}\nexports.mergeResolvers = mergeResolvers;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvbWVyZ2UtcmVzb2x2ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQyxvSEFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsZ0JBQWdCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXG1lcmdlXFxjanNcXG1lcmdlLXJlc29sdmVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWVyZ2VSZXNvbHZlcnMgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBncmFwaHFsLXRvb2xzL3V0aWxzXCIpO1xuLyoqXG4gKiBEZWVwIG1lcmdlcyBtdWx0aXBsZSByZXNvbHZlciBkZWZpbml0aW9uIG9iamVjdHMgaW50byBhIHNpbmdsZSBkZWZpbml0aW9uLlxuICogQHBhcmFtIHJlc29sdmVyc0RlZmluaXRpb25zIFJlc29sdmVyIGRlZmluaXRpb25zIHRvIGJlIG1lcmdlZFxuICogQHBhcmFtIG9wdGlvbnMgQWRkaXRpb25hbCBvcHRpb25zXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHsgbWVyZ2VSZXNvbHZlcnMgfSA9IHJlcXVpcmUoJ0BncmFwaHFsLXRvb2xzL21lcmdlJyk7XG4gKiBjb25zdCBjbGllbnRSZXNvbHZlciA9IHJlcXVpcmUoJy4vY2xpZW50UmVzb2x2ZXInKTtcbiAqIGNvbnN0IHByb2R1Y3RSZXNvbHZlciA9IHJlcXVpcmUoJy4vcHJvZHVjdFJlc29sdmVyJyk7XG4gKlxuICogY29uc3QgcmVzb2x2ZXJzID0gbWVyZ2VSZXNvbHZlcnMoW1xuICogIGNsaWVudFJlc29sdmVyLFxuICogIHByb2R1Y3RSZXNvbHZlcixcbiAqIF0pO1xuICogYGBgXG4gKlxuICogSWYgeW91IGRvbid0IHdhbnQgdG8gbWFudWFsbHkgY3JlYXRlIHRoZSBhcnJheSBvZiByZXNvbHZlciBvYmplY3RzLCB5b3UgY2FuXG4gKiBhbHNvIHVzZSB0aGlzIGZ1bmN0aW9uIGFsb25nIHdpdGggbG9hZEZpbGVzOlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuICogY29uc3QgeyBtZXJnZVJlc29sdmVycyB9ID0gcmVxdWlyZSgnQGdyYXBocWwtdG9vbHMvbWVyZ2UnKTtcbiAqIGNvbnN0IHsgbG9hZEZpbGVzU3luYyB9ID0gcmVxdWlyZSgnQGdyYXBocWwtdG9vbHMvbG9hZC1maWxlcycpO1xuICpcbiAqIGNvbnN0IHJlc29sdmVyc0FycmF5ID0gbG9hZEZpbGVzU3luYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi9yZXNvbHZlcnMnKSk7XG4gKlxuICogY29uc3QgcmVzb2x2ZXJzID0gbWVyZ2VSZXNvbHZlcnMocmVzb2x2ZXJzQXJyYXkpXG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gbWVyZ2VSZXNvbHZlcnMocmVzb2x2ZXJzRGVmaW5pdGlvbnMsIG9wdGlvbnMpIHtcbiAgICBpZiAoIXJlc29sdmVyc0RlZmluaXRpb25zIHx8IChBcnJheS5pc0FycmF5KHJlc29sdmVyc0RlZmluaXRpb25zKSAmJiByZXNvbHZlcnNEZWZpbml0aW9ucy5sZW5ndGggPT09IDApKSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHJlc29sdmVyc0RlZmluaXRpb25zKSkge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZXJzRGVmaW5pdGlvbnM7XG4gICAgfVxuICAgIGlmIChyZXNvbHZlcnNEZWZpbml0aW9ucy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVyc0RlZmluaXRpb25zWzBdIHx8IHt9O1xuICAgIH1cbiAgICBjb25zdCByZXNvbHZlcnMgPSBuZXcgQXJyYXkoKTtcbiAgICBmb3IgKGxldCByZXNvbHZlcnNEZWZpbml0aW9uIG9mIHJlc29sdmVyc0RlZmluaXRpb25zKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHJlc29sdmVyc0RlZmluaXRpb24pKSB7XG4gICAgICAgICAgICByZXNvbHZlcnNEZWZpbml0aW9uID0gbWVyZ2VSZXNvbHZlcnMocmVzb2x2ZXJzRGVmaW5pdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiByZXNvbHZlcnNEZWZpbml0aW9uID09PSAnb2JqZWN0JyAmJiByZXNvbHZlcnNEZWZpbml0aW9uKSB7XG4gICAgICAgICAgICByZXNvbHZlcnMucHVzaChyZXNvbHZlcnNEZWZpbml0aW9uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSAoMCwgdXRpbHNfMS5tZXJnZURlZXApKHJlc29sdmVycywgdHJ1ZSk7XG4gICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5leGNsdXNpb25zKSB7XG4gICAgICAgIGZvciAoY29uc3QgZXhjbHVzaW9uIG9mIG9wdGlvbnMuZXhjbHVzaW9ucykge1xuICAgICAgICAgICAgY29uc3QgW3R5cGVOYW1lLCBmaWVsZE5hbWVdID0gZXhjbHVzaW9uLnNwbGl0KCcuJyk7XG4gICAgICAgICAgICBpZiAoIWZpZWxkTmFtZSB8fCBmaWVsZE5hbWUgPT09ICcqJykge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSByZXN1bHRbdHlwZU5hbWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVzdWx0W3R5cGVOYW1lXSkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSByZXN1bHRbdHlwZU5hbWVdW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMubWVyZ2VSZXNvbHZlcnMgPSBtZXJnZVJlc29sdmVycztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/merge-resolvers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/arguments.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/arguments.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeArguments = void 0;\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nfunction mergeArguments(args1, args2, config) {\n    const result = deduplicateArguments([...args2, ...args1].filter(utils_1.isSome));\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeArguments = mergeArguments;\nfunction deduplicateArguments(args) {\n    return args.reduce((acc, current) => {\n        const dup = acc.find(arg => arg.name.value === current.name.value);\n        if (!dup) {\n            return acc.concat([current]);\n        }\n        return acc;\n    }, []);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9hcmd1bWVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGdCQUFnQixtQkFBTyxDQUFDLG9IQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXG1lcmdlXFxjanNcXHR5cGVkZWZzLW1lcmdlcnNcXGFyZ3VtZW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWVyZ2VBcmd1bWVudHMgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBncmFwaHFsLXRvb2xzL3V0aWxzXCIpO1xuZnVuY3Rpb24gbWVyZ2VBcmd1bWVudHMoYXJnczEsIGFyZ3MyLCBjb25maWcpIHtcbiAgICBjb25zdCByZXN1bHQgPSBkZWR1cGxpY2F0ZUFyZ3VtZW50cyhbLi4uYXJnczIsIC4uLmFyZ3MxXS5maWx0ZXIodXRpbHNfMS5pc1NvbWUpKTtcbiAgICBpZiAoY29uZmlnICYmIGNvbmZpZy5zb3J0KSB7XG4gICAgICAgIHJlc3VsdC5zb3J0KHV0aWxzXzEuY29tcGFyZU5vZGVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMubWVyZ2VBcmd1bWVudHMgPSBtZXJnZUFyZ3VtZW50cztcbmZ1bmN0aW9uIGRlZHVwbGljYXRlQXJndW1lbnRzKGFyZ3MpIHtcbiAgICByZXR1cm4gYXJncy5yZWR1Y2UoKGFjYywgY3VycmVudCkgPT4ge1xuICAgICAgICBjb25zdCBkdXAgPSBhY2MuZmluZChhcmcgPT4gYXJnLm5hbWUudmFsdWUgPT09IGN1cnJlbnQubmFtZS52YWx1ZSk7XG4gICAgICAgIGlmICghZHVwKSB7XG4gICAgICAgICAgICByZXR1cm4gYWNjLmNvbmNhdChbY3VycmVudF0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgW10pO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/arguments.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeDirective = exports.mergeDirectives = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nfunction directiveAlreadyExists(directivesArr, otherDirective) {\n    return !!directivesArr.find(directive => directive.name.value === otherDirective.name.value);\n}\nfunction nameAlreadyExists(name, namesArr) {\n    return namesArr.some(({ value }) => value === name.value);\n}\nfunction mergeArguments(a1, a2) {\n    const result = [...a2];\n    for (const argument of a1) {\n        const existingIndex = result.findIndex(a => a.name.value === argument.name.value);\n        if (existingIndex > -1) {\n            const existingArg = result[existingIndex];\n            if (existingArg.value.kind === 'ListValue') {\n                const source = existingArg.value.values;\n                const target = argument.value.values;\n                // merge values of two lists\n                existingArg.value.values = deduplicateLists(source, target, (targetVal, source) => {\n                    const value = targetVal.value;\n                    return !value || !source.some((sourceVal) => sourceVal.value === value);\n                });\n            }\n            else {\n                existingArg.value = argument.value;\n            }\n        }\n        else {\n            result.push(argument);\n        }\n    }\n    return result;\n}\nfunction deduplicateDirectives(directives) {\n    return directives\n        .map((directive, i, all) => {\n        const firstAt = all.findIndex(d => d.name.value === directive.name.value);\n        if (firstAt !== i) {\n            const dup = all[firstAt];\n            directive.arguments = mergeArguments(directive.arguments, dup.arguments);\n            return null;\n        }\n        return directive;\n    })\n        .filter(utils_1.isSome);\n}\nfunction mergeDirectives(d1 = [], d2 = [], config) {\n    const reverseOrder = config && config.reverseDirectives;\n    const asNext = reverseOrder ? d1 : d2;\n    const asFirst = reverseOrder ? d2 : d1;\n    const result = deduplicateDirectives([...asNext]);\n    for (const directive of asFirst) {\n        if (directiveAlreadyExists(result, directive)) {\n            const existingDirectiveIndex = result.findIndex(d => d.name.value === directive.name.value);\n            const existingDirective = result[existingDirectiveIndex];\n            result[existingDirectiveIndex].arguments = mergeArguments(directive.arguments || [], existingDirective.arguments || []);\n        }\n        else {\n            result.push(directive);\n        }\n    }\n    return result;\n}\nexports.mergeDirectives = mergeDirectives;\nfunction validateInputs(node, existingNode) {\n    const printedNode = (0, graphql_1.print)({\n        ...node,\n        description: undefined,\n    });\n    const printedExistingNode = (0, graphql_1.print)({\n        ...existingNode,\n        description: undefined,\n    });\n    // eslint-disable-next-line\n    const leaveInputs = new RegExp('(directive @w*d*)|( on .*$)', 'g');\n    const sameArguments = printedNode.replace(leaveInputs, '') === printedExistingNode.replace(leaveInputs, '');\n    if (!sameArguments) {\n        throw new Error(`Unable to merge GraphQL directive \"${node.name.value}\". \\nExisting directive:  \\n\\t${printedExistingNode} \\nReceived directive: \\n\\t${printedNode}`);\n    }\n}\nfunction mergeDirective(node, existingNode) {\n    if (existingNode) {\n        validateInputs(node, existingNode);\n        return {\n            ...node,\n            locations: [\n                ...existingNode.locations,\n                ...node.locations.filter(name => !nameAlreadyExists(name, existingNode.locations)),\n            ],\n        };\n    }\n    return node;\n}\nexports.mergeDirective = mergeDirective;\nfunction deduplicateLists(source, target, filterFn) {\n    return source.concat(target.filter(val => filterFn(val, source)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9kaXJlY3RpdmVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLHVCQUF1QjtBQUNoRCxrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyxvSEFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsT0FBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsZ0JBQWdCLGdDQUFnQyxxQkFBcUIsNEJBQTRCLFlBQVk7QUFDM0s7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXG1lcmdlXFxjanNcXHR5cGVkZWZzLW1lcmdlcnNcXGRpcmVjdGl2ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lcmdlRGlyZWN0aXZlID0gZXhwb3J0cy5tZXJnZURpcmVjdGl2ZXMgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQGdyYXBocWwtdG9vbHMvdXRpbHNcIik7XG5mdW5jdGlvbiBkaXJlY3RpdmVBbHJlYWR5RXhpc3RzKGRpcmVjdGl2ZXNBcnIsIG90aGVyRGlyZWN0aXZlKSB7XG4gICAgcmV0dXJuICEhZGlyZWN0aXZlc0Fyci5maW5kKGRpcmVjdGl2ZSA9PiBkaXJlY3RpdmUubmFtZS52YWx1ZSA9PT0gb3RoZXJEaXJlY3RpdmUubmFtZS52YWx1ZSk7XG59XG5mdW5jdGlvbiBuYW1lQWxyZWFkeUV4aXN0cyhuYW1lLCBuYW1lc0Fycikge1xuICAgIHJldHVybiBuYW1lc0Fyci5zb21lKCh7IHZhbHVlIH0pID0+IHZhbHVlID09PSBuYW1lLnZhbHVlKTtcbn1cbmZ1bmN0aW9uIG1lcmdlQXJndW1lbnRzKGExLCBhMikge1xuICAgIGNvbnN0IHJlc3VsdCA9IFsuLi5hMl07XG4gICAgZm9yIChjb25zdCBhcmd1bWVudCBvZiBhMSkge1xuICAgICAgICBjb25zdCBleGlzdGluZ0luZGV4ID0gcmVzdWx0LmZpbmRJbmRleChhID0+IGEubmFtZS52YWx1ZSA9PT0gYXJndW1lbnQubmFtZS52YWx1ZSk7XG4gICAgICAgIGlmIChleGlzdGluZ0luZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nQXJnID0gcmVzdWx0W2V4aXN0aW5nSW5kZXhdO1xuICAgICAgICAgICAgaWYgKGV4aXN0aW5nQXJnLnZhbHVlLmtpbmQgPT09ICdMaXN0VmFsdWUnKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc291cmNlID0gZXhpc3RpbmdBcmcudmFsdWUudmFsdWVzO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGFyZ3VtZW50LnZhbHVlLnZhbHVlcztcbiAgICAgICAgICAgICAgICAvLyBtZXJnZSB2YWx1ZXMgb2YgdHdvIGxpc3RzXG4gICAgICAgICAgICAgICAgZXhpc3RpbmdBcmcudmFsdWUudmFsdWVzID0gZGVkdXBsaWNhdGVMaXN0cyhzb3VyY2UsIHRhcmdldCwgKHRhcmdldFZhbCwgc291cmNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGFyZ2V0VmFsLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIXZhbHVlIHx8ICFzb3VyY2Uuc29tZSgoc291cmNlVmFsKSA9PiBzb3VyY2VWYWwudmFsdWUgPT09IHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGV4aXN0aW5nQXJnLnZhbHVlID0gYXJndW1lbnQudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChhcmd1bWVudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGRlZHVwbGljYXRlRGlyZWN0aXZlcyhkaXJlY3RpdmVzKSB7XG4gICAgcmV0dXJuIGRpcmVjdGl2ZXNcbiAgICAgICAgLm1hcCgoZGlyZWN0aXZlLCBpLCBhbGwpID0+IHtcbiAgICAgICAgY29uc3QgZmlyc3RBdCA9IGFsbC5maW5kSW5kZXgoZCA9PiBkLm5hbWUudmFsdWUgPT09IGRpcmVjdGl2ZS5uYW1lLnZhbHVlKTtcbiAgICAgICAgaWYgKGZpcnN0QXQgIT09IGkpIHtcbiAgICAgICAgICAgIGNvbnN0IGR1cCA9IGFsbFtmaXJzdEF0XTtcbiAgICAgICAgICAgIGRpcmVjdGl2ZS5hcmd1bWVudHMgPSBtZXJnZUFyZ3VtZW50cyhkaXJlY3RpdmUuYXJndW1lbnRzLCBkdXAuYXJndW1lbnRzKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaXJlY3RpdmU7XG4gICAgfSlcbiAgICAgICAgLmZpbHRlcih1dGlsc18xLmlzU29tZSk7XG59XG5mdW5jdGlvbiBtZXJnZURpcmVjdGl2ZXMoZDEgPSBbXSwgZDIgPSBbXSwgY29uZmlnKSB7XG4gICAgY29uc3QgcmV2ZXJzZU9yZGVyID0gY29uZmlnICYmIGNvbmZpZy5yZXZlcnNlRGlyZWN0aXZlcztcbiAgICBjb25zdCBhc05leHQgPSByZXZlcnNlT3JkZXIgPyBkMSA6IGQyO1xuICAgIGNvbnN0IGFzRmlyc3QgPSByZXZlcnNlT3JkZXIgPyBkMiA6IGQxO1xuICAgIGNvbnN0IHJlc3VsdCA9IGRlZHVwbGljYXRlRGlyZWN0aXZlcyhbLi4uYXNOZXh0XSk7XG4gICAgZm9yIChjb25zdCBkaXJlY3RpdmUgb2YgYXNGaXJzdCkge1xuICAgICAgICBpZiAoZGlyZWN0aXZlQWxyZWFkeUV4aXN0cyhyZXN1bHQsIGRpcmVjdGl2ZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nRGlyZWN0aXZlSW5kZXggPSByZXN1bHQuZmluZEluZGV4KGQgPT4gZC5uYW1lLnZhbHVlID09PSBkaXJlY3RpdmUubmFtZS52YWx1ZSk7XG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ0RpcmVjdGl2ZSA9IHJlc3VsdFtleGlzdGluZ0RpcmVjdGl2ZUluZGV4XTtcbiAgICAgICAgICAgIHJlc3VsdFtleGlzdGluZ0RpcmVjdGl2ZUluZGV4XS5hcmd1bWVudHMgPSBtZXJnZUFyZ3VtZW50cyhkaXJlY3RpdmUuYXJndW1lbnRzIHx8IFtdLCBleGlzdGluZ0RpcmVjdGl2ZS5hcmd1bWVudHMgfHwgW10pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goZGlyZWN0aXZlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5tZXJnZURpcmVjdGl2ZXMgPSBtZXJnZURpcmVjdGl2ZXM7XG5mdW5jdGlvbiB2YWxpZGF0ZUlucHV0cyhub2RlLCBleGlzdGluZ05vZGUpIHtcbiAgICBjb25zdCBwcmludGVkTm9kZSA9ICgwLCBncmFwaHFsXzEucHJpbnQpKHtcbiAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgZGVzY3JpcHRpb246IHVuZGVmaW5lZCxcbiAgICB9KTtcbiAgICBjb25zdCBwcmludGVkRXhpc3RpbmdOb2RlID0gKDAsIGdyYXBocWxfMS5wcmludCkoe1xuICAgICAgICAuLi5leGlzdGluZ05vZGUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiB1bmRlZmluZWQsXG4gICAgfSk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgY29uc3QgbGVhdmVJbnB1dHMgPSBuZXcgUmVnRXhwKCcoZGlyZWN0aXZlIEB3KmQqKXwoIG9uIC4qJCknLCAnZycpO1xuICAgIGNvbnN0IHNhbWVBcmd1bWVudHMgPSBwcmludGVkTm9kZS5yZXBsYWNlKGxlYXZlSW5wdXRzLCAnJykgPT09IHByaW50ZWRFeGlzdGluZ05vZGUucmVwbGFjZShsZWF2ZUlucHV0cywgJycpO1xuICAgIGlmICghc2FtZUFyZ3VtZW50cykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBtZXJnZSBHcmFwaFFMIGRpcmVjdGl2ZSBcIiR7bm9kZS5uYW1lLnZhbHVlfVwiLiBcXG5FeGlzdGluZyBkaXJlY3RpdmU6ICBcXG5cXHQke3ByaW50ZWRFeGlzdGluZ05vZGV9IFxcblJlY2VpdmVkIGRpcmVjdGl2ZTogXFxuXFx0JHtwcmludGVkTm9kZX1gKTtcbiAgICB9XG59XG5mdW5jdGlvbiBtZXJnZURpcmVjdGl2ZShub2RlLCBleGlzdGluZ05vZGUpIHtcbiAgICBpZiAoZXhpc3RpbmdOb2RlKSB7XG4gICAgICAgIHZhbGlkYXRlSW5wdXRzKG5vZGUsIGV4aXN0aW5nTm9kZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgbG9jYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgLi4uZXhpc3RpbmdOb2RlLmxvY2F0aW9ucyxcbiAgICAgICAgICAgICAgICAuLi5ub2RlLmxvY2F0aW9ucy5maWx0ZXIobmFtZSA9PiAhbmFtZUFscmVhZHlFeGlzdHMobmFtZSwgZXhpc3RpbmdOb2RlLmxvY2F0aW9ucykpLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIG5vZGU7XG59XG5leHBvcnRzLm1lcmdlRGlyZWN0aXZlID0gbWVyZ2VEaXJlY3RpdmU7XG5mdW5jdGlvbiBkZWR1cGxpY2F0ZUxpc3RzKHNvdXJjZSwgdGFyZ2V0LCBmaWx0ZXJGbikge1xuICAgIHJldHVybiBzb3VyY2UuY29uY2F0KHRhcmdldC5maWx0ZXIodmFsID0+IGZpbHRlckZuKHZhbCwgc291cmNlKSkpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum-values.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum-values.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeEnumValues = void 0;\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nfunction mergeEnumValues(first, second, config) {\n    if (config === null || config === void 0 ? void 0 : config.consistentEnumMerge) {\n        const reversed = [];\n        if (first) {\n            reversed.push(...first);\n        }\n        first = second;\n        second = reversed;\n    }\n    const enumValueMap = new Map();\n    if (first) {\n        for (const firstValue of first) {\n            enumValueMap.set(firstValue.name.value, firstValue);\n        }\n    }\n    if (second) {\n        for (const secondValue of second) {\n            const enumValue = secondValue.name.value;\n            if (enumValueMap.has(enumValue)) {\n                const firstValue = enumValueMap.get(enumValue);\n                firstValue.description = secondValue.description || firstValue.description;\n                firstValue.directives = (0, directives_js_1.mergeDirectives)(secondValue.directives, firstValue.directives);\n            }\n            else {\n                enumValueMap.set(enumValue, secondValue);\n            }\n        }\n    }\n    const result = [...enumValueMap.values()];\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeEnumValues = mergeEnumValues;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9lbnVtLXZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIsd0JBQXdCLG1CQUFPLENBQUMscUlBQWlCO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLG9IQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXG1lcmdlXFxjanNcXHR5cGVkZWZzLW1lcmdlcnNcXGVudW0tdmFsdWVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tZXJnZUVudW1WYWx1ZXMgPSB2b2lkIDA7XG5jb25zdCBkaXJlY3RpdmVzX2pzXzEgPSByZXF1aXJlKFwiLi9kaXJlY3RpdmVzLmpzXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAZ3JhcGhxbC10b29scy91dGlsc1wiKTtcbmZ1bmN0aW9uIG1lcmdlRW51bVZhbHVlcyhmaXJzdCwgc2Vjb25kLCBjb25maWcpIHtcbiAgICBpZiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnNpc3RlbnRFbnVtTWVyZ2UpIHtcbiAgICAgICAgY29uc3QgcmV2ZXJzZWQgPSBbXTtcbiAgICAgICAgaWYgKGZpcnN0KSB7XG4gICAgICAgICAgICByZXZlcnNlZC5wdXNoKC4uLmZpcnN0KTtcbiAgICAgICAgfVxuICAgICAgICBmaXJzdCA9IHNlY29uZDtcbiAgICAgICAgc2Vjb25kID0gcmV2ZXJzZWQ7XG4gICAgfVxuICAgIGNvbnN0IGVudW1WYWx1ZU1hcCA9IG5ldyBNYXAoKTtcbiAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgZm9yIChjb25zdCBmaXJzdFZhbHVlIG9mIGZpcnN0KSB7XG4gICAgICAgICAgICBlbnVtVmFsdWVNYXAuc2V0KGZpcnN0VmFsdWUubmFtZS52YWx1ZSwgZmlyc3RWYWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHNlY29uZCkge1xuICAgICAgICBmb3IgKGNvbnN0IHNlY29uZFZhbHVlIG9mIHNlY29uZCkge1xuICAgICAgICAgICAgY29uc3QgZW51bVZhbHVlID0gc2Vjb25kVmFsdWUubmFtZS52YWx1ZTtcbiAgICAgICAgICAgIGlmIChlbnVtVmFsdWVNYXAuaGFzKGVudW1WYWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaXJzdFZhbHVlID0gZW51bVZhbHVlTWFwLmdldChlbnVtVmFsdWUpO1xuICAgICAgICAgICAgICAgIGZpcnN0VmFsdWUuZGVzY3JpcHRpb24gPSBzZWNvbmRWYWx1ZS5kZXNjcmlwdGlvbiB8fCBmaXJzdFZhbHVlLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgICAgIGZpcnN0VmFsdWUuZGlyZWN0aXZlcyA9ICgwLCBkaXJlY3RpdmVzX2pzXzEubWVyZ2VEaXJlY3RpdmVzKShzZWNvbmRWYWx1ZS5kaXJlY3RpdmVzLCBmaXJzdFZhbHVlLmRpcmVjdGl2ZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZW51bVZhbHVlTWFwLnNldChlbnVtVmFsdWUsIHNlY29uZFZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBbLi4uZW51bVZhbHVlTWFwLnZhbHVlcygpXTtcbiAgICBpZiAoY29uZmlnICYmIGNvbmZpZy5zb3J0KSB7XG4gICAgICAgIHJlc3VsdC5zb3J0KHV0aWxzXzEuY29tcGFyZU5vZGVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMubWVyZ2VFbnVtVmFsdWVzID0gbWVyZ2VFbnVtVmFsdWVzO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum-values.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeEnum = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nconst enum_values_js_1 = __webpack_require__(/*! ./enum-values.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum-values.js\");\nfunction mergeEnum(e1, e2, config) {\n    if (e2) {\n        return {\n            name: e1.name,\n            description: e1['description'] || e2['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || e1.kind === 'EnumTypeDefinition' || e2.kind === 'EnumTypeDefinition'\n                ? 'EnumTypeDefinition'\n                : 'EnumTypeExtension',\n            loc: e1.loc,\n            directives: (0, directives_js_1.mergeDirectives)(e1.directives, e2.directives, config),\n            values: (0, enum_values_js_1.mergeEnumValues)(e1.values, e2.values, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...e1,\n            kind: graphql_1.Kind.ENUM_TYPE_DEFINITION,\n        }\n        : e1;\n}\nexports.mergeEnum = mergeEnum;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9lbnVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyx3QkFBd0IsbUJBQU8sQ0FBQyxxSUFBaUI7QUFDakQseUJBQXlCLG1CQUFPLENBQUMsdUlBQWtCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxtZXJnZVxcY2pzXFx0eXBlZGVmcy1tZXJnZXJzXFxlbnVtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tZXJnZUVudW0gPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmNvbnN0IGRpcmVjdGl2ZXNfanNfMSA9IHJlcXVpcmUoXCIuL2RpcmVjdGl2ZXMuanNcIik7XG5jb25zdCBlbnVtX3ZhbHVlc19qc18xID0gcmVxdWlyZShcIi4vZW51bS12YWx1ZXMuanNcIik7XG5mdW5jdGlvbiBtZXJnZUVudW0oZTEsIGUyLCBjb25maWcpIHtcbiAgICBpZiAoZTIpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IGUxLm5hbWUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogZTFbJ2Rlc2NyaXB0aW9uJ10gfHwgZTJbJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICAgICAgICBraW5kOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKSB8fCBlMS5raW5kID09PSAnRW51bVR5cGVEZWZpbml0aW9uJyB8fCBlMi5raW5kID09PSAnRW51bVR5cGVEZWZpbml0aW9uJ1xuICAgICAgICAgICAgICAgID8gJ0VudW1UeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICA6ICdFbnVtVHlwZUV4dGVuc2lvbicsXG4gICAgICAgICAgICBsb2M6IGUxLmxvYyxcbiAgICAgICAgICAgIGRpcmVjdGl2ZXM6ICgwLCBkaXJlY3RpdmVzX2pzXzEubWVyZ2VEaXJlY3RpdmVzKShlMS5kaXJlY3RpdmVzLCBlMi5kaXJlY3RpdmVzLCBjb25maWcpLFxuICAgICAgICAgICAgdmFsdWVzOiAoMCwgZW51bV92YWx1ZXNfanNfMS5tZXJnZUVudW1WYWx1ZXMpKGUxLnZhbHVlcywgZTIudmFsdWVzLCBjb25maWcpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jb252ZXJ0RXh0ZW5zaW9ucylcbiAgICAgICAgPyB7XG4gICAgICAgICAgICAuLi5lMSxcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLkVOVU1fVFlQRV9ERUZJTklUSU9OLFxuICAgICAgICB9XG4gICAgICAgIDogZTE7XG59XG5leHBvcnRzLm1lcmdlRW51bSA9IG1lcmdlRW51bTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/fields.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/fields.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeFields = void 0;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/utils.js\");\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nconst arguments_js_1 = __webpack_require__(/*! ./arguments.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/arguments.js\");\nfunction fieldAlreadyExists(fieldsArr, otherField, config) {\n    const result = fieldsArr.find(field => field.name.value === otherField.name.value);\n    if (result && !(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n        const t1 = (0, utils_js_1.extractType)(result.type);\n        const t2 = (0, utils_js_1.extractType)(otherField.type);\n        if (t1.name.value !== t2.name.value) {\n            throw new Error(`Field \"${otherField.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n        }\n    }\n    return !!result;\n}\nfunction mergeFields(type, f1, f2, config) {\n    const result = [];\n    if (f2 != null) {\n        result.push(...f2);\n    }\n    if (f1 != null) {\n        for (const field of f1) {\n            if (fieldAlreadyExists(result, field, config)) {\n                const existing = result.find((f) => f.name.value === field.name.value);\n                if (!(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n                    if (config === null || config === void 0 ? void 0 : config.throwOnConflict) {\n                        preventConflicts(type, existing, field, false);\n                    }\n                    else {\n                        preventConflicts(type, existing, field, true);\n                    }\n                    if ((0, utils_js_1.isNonNullTypeNode)(field.type) && !(0, utils_js_1.isNonNullTypeNode)(existing.type)) {\n                        existing.type = field.type;\n                    }\n                }\n                existing.arguments = (0, arguments_js_1.mergeArguments)(field['arguments'] || [], existing.arguments || [], config);\n                existing.directives = (0, directives_js_1.mergeDirectives)(field.directives, existing.directives, config);\n                existing.description = field.description || existing.description;\n            }\n            else {\n                result.push(field);\n            }\n        }\n    }\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    if (config && config.exclusions) {\n        const exclusions = config.exclusions;\n        return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n    }\n    return result;\n}\nexports.mergeFields = mergeFields;\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n    const aType = (0, utils_js_1.printTypeNode)(a.type);\n    const bType = (0, utils_js_1.printTypeNode)(b.type);\n    if (aType !== bType && !safeChangeForFieldType(a.type, b.type, ignoreNullability)) {\n        throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n    }\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n    // both are named\n    if (!(0, utils_js_1.isWrappingTypeNode)(oldType) && !(0, utils_js_1.isWrappingTypeNode)(newType)) {\n        return oldType.toString() === newType.toString();\n    }\n    // new is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(newType)) {\n        const ofType = (0, utils_js_1.isNonNullTypeNode)(oldType) ? oldType.type : oldType;\n        return safeChangeForFieldType(ofType, newType.type);\n    }\n    // old is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(oldType)) {\n        return safeChangeForFieldType(newType, oldType, ignoreNullability);\n    }\n    // old is list\n    if ((0, utils_js_1.isListTypeNode)(oldType)) {\n        return (((0, utils_js_1.isListTypeNode)(newType) && safeChangeForFieldType(oldType.type, newType.type)) ||\n            ((0, utils_js_1.isNonNullTypeNode)(newType) && safeChangeForFieldType(oldType, newType['type'])));\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9maWVsZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLG1CQUFtQixtQkFBTyxDQUFDLDJIQUFZO0FBQ3ZDLHdCQUF3QixtQkFBTyxDQUFDLHFJQUFpQjtBQUNqRCxnQkFBZ0IsbUJBQU8sQ0FBQyxvSEFBc0I7QUFDOUMsdUJBQXVCLG1CQUFPLENBQUMsbUlBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxzQkFBc0Isd0RBQXdELGNBQWMscUNBQXFDLGNBQWM7QUFDckw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxnQkFBZ0IsR0FBRyxpQkFBaUI7QUFDbEc7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGdCQUFnQixHQUFHLGFBQWEsdUJBQXVCLE1BQU0sUUFBUSxNQUFNO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxtZXJnZVxcY2pzXFx0eXBlZGVmcy1tZXJnZXJzXFxmaWVsZHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lcmdlRmllbGRzID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY29uc3QgZGlyZWN0aXZlc19qc18xID0gcmVxdWlyZShcIi4vZGlyZWN0aXZlcy5qc1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQGdyYXBocWwtdG9vbHMvdXRpbHNcIik7XG5jb25zdCBhcmd1bWVudHNfanNfMSA9IHJlcXVpcmUoXCIuL2FyZ3VtZW50cy5qc1wiKTtcbmZ1bmN0aW9uIGZpZWxkQWxyZWFkeUV4aXN0cyhmaWVsZHNBcnIsIG90aGVyRmllbGQsIGNvbmZpZykge1xuICAgIGNvbnN0IHJlc3VsdCA9IGZpZWxkc0Fyci5maW5kKGZpZWxkID0+IGZpZWxkLm5hbWUudmFsdWUgPT09IG90aGVyRmllbGQubmFtZS52YWx1ZSk7XG4gICAgaWYgKHJlc3VsdCAmJiAhKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5pZ25vcmVGaWVsZENvbmZsaWN0cykpIHtcbiAgICAgICAgY29uc3QgdDEgPSAoMCwgdXRpbHNfanNfMS5leHRyYWN0VHlwZSkocmVzdWx0LnR5cGUpO1xuICAgICAgICBjb25zdCB0MiA9ICgwLCB1dGlsc19qc18xLmV4dHJhY3RUeXBlKShvdGhlckZpZWxkLnR5cGUpO1xuICAgICAgICBpZiAodDEubmFtZS52YWx1ZSAhPT0gdDIubmFtZS52YWx1ZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGaWVsZCBcIiR7b3RoZXJGaWVsZC5uYW1lLnZhbHVlfVwiIGFscmVhZHkgZGVmaW5lZCB3aXRoIGEgZGlmZmVyZW50IHR5cGUuIERlY2xhcmVkIGFzIFwiJHt0MS5uYW1lLnZhbHVlfVwiLCBidXQgeW91IHRyaWVkIHRvIG92ZXJyaWRlIHdpdGggXCIke3QyLm5hbWUudmFsdWV9XCJgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gISFyZXN1bHQ7XG59XG5mdW5jdGlvbiBtZXJnZUZpZWxkcyh0eXBlLCBmMSwgZjIsIGNvbmZpZykge1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgIGlmIChmMiAhPSBudWxsKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKC4uLmYyKTtcbiAgICB9XG4gICAgaWYgKGYxICE9IG51bGwpIHtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZCBvZiBmMSkge1xuICAgICAgICAgICAgaWYgKGZpZWxkQWxyZWFkeUV4aXN0cyhyZXN1bHQsIGZpZWxkLCBjb25maWcpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmcgPSByZXN1bHQuZmluZCgoZikgPT4gZi5uYW1lLnZhbHVlID09PSBmaWVsZC5uYW1lLnZhbHVlKTtcbiAgICAgICAgICAgICAgICBpZiAoIShjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuaWdub3JlRmllbGRDb25mbGljdHMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcudGhyb3dPbkNvbmZsaWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2ZW50Q29uZmxpY3RzKHR5cGUsIGV4aXN0aW5nLCBmaWVsZCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmVudENvbmZsaWN0cyh0eXBlLCBleGlzdGluZywgZmllbGQsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICgoMCwgdXRpbHNfanNfMS5pc05vbk51bGxUeXBlTm9kZSkoZmllbGQudHlwZSkgJiYgISgwLCB1dGlsc19qc18xLmlzTm9uTnVsbFR5cGVOb2RlKShleGlzdGluZy50eXBlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmcudHlwZSA9IGZpZWxkLnR5cGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZXhpc3RpbmcuYXJndW1lbnRzID0gKDAsIGFyZ3VtZW50c19qc18xLm1lcmdlQXJndW1lbnRzKShmaWVsZFsnYXJndW1lbnRzJ10gfHwgW10sIGV4aXN0aW5nLmFyZ3VtZW50cyB8fCBbXSwgY29uZmlnKTtcbiAgICAgICAgICAgICAgICBleGlzdGluZy5kaXJlY3RpdmVzID0gKDAsIGRpcmVjdGl2ZXNfanNfMS5tZXJnZURpcmVjdGl2ZXMpKGZpZWxkLmRpcmVjdGl2ZXMsIGV4aXN0aW5nLmRpcmVjdGl2ZXMsIGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgZXhpc3RpbmcuZGVzY3JpcHRpb24gPSBmaWVsZC5kZXNjcmlwdGlvbiB8fCBleGlzdGluZy5kZXNjcmlwdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGZpZWxkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoY29uZmlnICYmIGNvbmZpZy5zb3J0KSB7XG4gICAgICAgIHJlc3VsdC5zb3J0KHV0aWxzXzEuY29tcGFyZU5vZGVzKTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZyAmJiBjb25maWcuZXhjbHVzaW9ucykge1xuICAgICAgICBjb25zdCBleGNsdXNpb25zID0gY29uZmlnLmV4Y2x1c2lvbnM7XG4gICAgICAgIHJldHVybiByZXN1bHQuZmlsdGVyKGZpZWxkID0+ICFleGNsdXNpb25zLmluY2x1ZGVzKGAke3R5cGUubmFtZS52YWx1ZX0uJHtmaWVsZC5uYW1lLnZhbHVlfWApKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMubWVyZ2VGaWVsZHMgPSBtZXJnZUZpZWxkcztcbmZ1bmN0aW9uIHByZXZlbnRDb25mbGljdHModHlwZSwgYSwgYiwgaWdub3JlTnVsbGFiaWxpdHkgPSBmYWxzZSkge1xuICAgIGNvbnN0IGFUeXBlID0gKDAsIHV0aWxzX2pzXzEucHJpbnRUeXBlTm9kZSkoYS50eXBlKTtcbiAgICBjb25zdCBiVHlwZSA9ICgwLCB1dGlsc19qc18xLnByaW50VHlwZU5vZGUpKGIudHlwZSk7XG4gICAgaWYgKGFUeXBlICE9PSBiVHlwZSAmJiAhc2FmZUNoYW5nZUZvckZpZWxkVHlwZShhLnR5cGUsIGIudHlwZSwgaWdub3JlTnVsbGFiaWxpdHkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmllbGQgJyR7dHlwZS5uYW1lLnZhbHVlfS4ke2EubmFtZS52YWx1ZX0nIGNoYW5nZWQgdHlwZSBmcm9tICcke2FUeXBlfScgdG8gJyR7YlR5cGV9J2ApO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHNhZmVDaGFuZ2VGb3JGaWVsZFR5cGUob2xkVHlwZSwgbmV3VHlwZSwgaWdub3JlTnVsbGFiaWxpdHkgPSBmYWxzZSkge1xuICAgIC8vIGJvdGggYXJlIG5hbWVkXG4gICAgaWYgKCEoMCwgdXRpbHNfanNfMS5pc1dyYXBwaW5nVHlwZU5vZGUpKG9sZFR5cGUpICYmICEoMCwgdXRpbHNfanNfMS5pc1dyYXBwaW5nVHlwZU5vZGUpKG5ld1R5cGUpKSB7XG4gICAgICAgIHJldHVybiBvbGRUeXBlLnRvU3RyaW5nKCkgPT09IG5ld1R5cGUudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgLy8gbmV3IGlzIG5vbi1udWxsXG4gICAgaWYgKCgwLCB1dGlsc19qc18xLmlzTm9uTnVsbFR5cGVOb2RlKShuZXdUeXBlKSkge1xuICAgICAgICBjb25zdCBvZlR5cGUgPSAoMCwgdXRpbHNfanNfMS5pc05vbk51bGxUeXBlTm9kZSkob2xkVHlwZSkgPyBvbGRUeXBlLnR5cGUgOiBvbGRUeXBlO1xuICAgICAgICByZXR1cm4gc2FmZUNoYW5nZUZvckZpZWxkVHlwZShvZlR5cGUsIG5ld1R5cGUudHlwZSk7XG4gICAgfVxuICAgIC8vIG9sZCBpcyBub24tbnVsbFxuICAgIGlmICgoMCwgdXRpbHNfanNfMS5pc05vbk51bGxUeXBlTm9kZSkob2xkVHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIHNhZmVDaGFuZ2VGb3JGaWVsZFR5cGUobmV3VHlwZSwgb2xkVHlwZSwgaWdub3JlTnVsbGFiaWxpdHkpO1xuICAgIH1cbiAgICAvLyBvbGQgaXMgbGlzdFxuICAgIGlmICgoMCwgdXRpbHNfanNfMS5pc0xpc3RUeXBlTm9kZSkob2xkVHlwZSkpIHtcbiAgICAgICAgcmV0dXJuICgoKDAsIHV0aWxzX2pzXzEuaXNMaXN0VHlwZU5vZGUpKG5ld1R5cGUpICYmIHNhZmVDaGFuZ2VGb3JGaWVsZFR5cGUob2xkVHlwZS50eXBlLCBuZXdUeXBlLnR5cGUpKSB8fFxuICAgICAgICAgICAgKCgwLCB1dGlsc19qc18xLmlzTm9uTnVsbFR5cGVOb2RlKShuZXdUeXBlKSAmJiBzYWZlQ2hhbmdlRm9yRmllbGRUeXBlKG9sZFR5cGUsIG5ld1R5cGVbJ3R5cGUnXSkpKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/fields.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/index.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/index.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./arguments.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/arguments.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./enum-values.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum-values.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./enum.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./fields.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/fields.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./input-type.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/input-type.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./interface.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/interface.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./merge-named-type-array.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-named-type-array.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./merge-nodes.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-nodes.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./merge-typedefs.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-typedefs.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./scalar.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/scalar.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./type.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/type.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./union.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/union.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyx1REFBTztBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQyxtSUFBZ0I7QUFDN0MscUJBQXFCLG1CQUFPLENBQUMscUlBQWlCO0FBQzlDLHFCQUFxQixtQkFBTyxDQUFDLHVJQUFrQjtBQUMvQyxxQkFBcUIsbUJBQU8sQ0FBQyx5SEFBVztBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQyw2SEFBYTtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQyxxSUFBaUI7QUFDOUMscUJBQXFCLG1CQUFPLENBQUMsbUlBQWdCO0FBQzdDLHFCQUFxQixtQkFBTyxDQUFDLDZKQUE2QjtBQUMxRCxxQkFBcUIsbUJBQU8sQ0FBQyx1SUFBa0I7QUFDL0MscUJBQXFCLG1CQUFPLENBQUMsNklBQXFCO0FBQ2xELHFCQUFxQixtQkFBTyxDQUFDLDZIQUFhO0FBQzFDLHFCQUFxQixtQkFBTyxDQUFDLHlIQUFXO0FBQ3hDLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFZO0FBQ3pDLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFZIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcbWVyZ2VcXGNqc1xcdHlwZWRlZnMtbWVyZ2Vyc1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXJndW1lbnRzLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RpcmVjdGl2ZXMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW51bS12YWx1ZXMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW51bS5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9maWVsZHMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaW5wdXQtdHlwZS5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pbnRlcmZhY2UuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWVyZ2UtbmFtZWQtdHlwZS1hcnJheS5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tZXJnZS1ub2Rlcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tZXJnZS10eXBlZGVmcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zY2FsYXIuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZS5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91bmlvbi5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlscy5qc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/input-type.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/input-type.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeInputType = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst fields_js_1 = __webpack_require__(/*! ./fields.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/fields.js\");\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nfunction mergeInputType(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InputObjectTypeDefinition' ||\n                    existingNode.kind === 'InputObjectTypeDefinition'\n                    ? 'InputObjectTypeDefinition'\n                    : 'InputObjectTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL input type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeInputType = mergeInputType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9pbnB1dC10eXBlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyxvQkFBb0IsbUJBQU8sQ0FBQyw2SEFBYTtBQUN6Qyx3QkFBd0IsbUJBQU8sQ0FBQyxxSUFBaUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSxnQkFBZ0IsS0FBSyxVQUFVO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXG1lcmdlXFxjanNcXHR5cGVkZWZzLW1lcmdlcnNcXGlucHV0LXR5cGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lcmdlSW5wdXRUeXBlID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5jb25zdCBmaWVsZHNfanNfMSA9IHJlcXVpcmUoXCIuL2ZpZWxkcy5qc1wiKTtcbmNvbnN0IGRpcmVjdGl2ZXNfanNfMSA9IHJlcXVpcmUoXCIuL2RpcmVjdGl2ZXMuanNcIik7XG5mdW5jdGlvbiBtZXJnZUlucHV0VHlwZShub2RlLCBleGlzdGluZ05vZGUsIGNvbmZpZykge1xuICAgIGlmIChleGlzdGluZ05vZGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogbm9kZS5uYW1lLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBub2RlWydkZXNjcmlwdGlvbiddIHx8IGV4aXN0aW5nTm9kZVsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgICAgICAgICBraW5kOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKSB8fFxuICAgICAgICAgICAgICAgICAgICBub2RlLmtpbmQgPT09ICdJbnB1dE9iamVjdFR5cGVEZWZpbml0aW9uJyB8fFxuICAgICAgICAgICAgICAgICAgICBleGlzdGluZ05vZGUua2luZCA9PT0gJ0lucHV0T2JqZWN0VHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgICAgID8gJ0lucHV0T2JqZWN0VHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgICAgIDogJ0lucHV0T2JqZWN0VHlwZUV4dGVuc2lvbicsXG4gICAgICAgICAgICAgICAgbG9jOiBub2RlLmxvYyxcbiAgICAgICAgICAgICAgICBmaWVsZHM6ICgwLCBmaWVsZHNfanNfMS5tZXJnZUZpZWxkcykobm9kZSwgbm9kZS5maWVsZHMsIGV4aXN0aW5nTm9kZS5maWVsZHMsIGNvbmZpZyksXG4gICAgICAgICAgICAgICAgZGlyZWN0aXZlczogKDAsIGRpcmVjdGl2ZXNfanNfMS5tZXJnZURpcmVjdGl2ZXMpKG5vZGUuZGlyZWN0aXZlcywgZXhpc3RpbmdOb2RlLmRpcmVjdGl2ZXMsIGNvbmZpZyksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBtZXJnZSBHcmFwaFFMIGlucHV0IHR5cGUgXCIke25vZGUubmFtZS52YWx1ZX1cIjogJHtlLm1lc3NhZ2V9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuY29udmVydEV4dGVuc2lvbnMpXG4gICAgICAgID8ge1xuICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLklOUFVUX09CSkVDVF9UWVBFX0RFRklOSVRJT04sXG4gICAgICAgIH1cbiAgICAgICAgOiBub2RlO1xufVxuZXhwb3J0cy5tZXJnZUlucHV0VHlwZSA9IG1lcmdlSW5wdXRUeXBlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/input-type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/interface.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/interface.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeInterface = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst fields_js_1 = __webpack_require__(/*! ./fields.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/fields.js\");\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nconst index_js_1 = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/index.js\");\nfunction mergeInterface(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InterfaceTypeDefinition' ||\n                    existingNode.kind === 'InterfaceTypeDefinition'\n                    ? 'InterfaceTypeDefinition'\n                    : 'InterfaceTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n                interfaces: node['interfaces']\n                    ? (0, index_js_1.mergeNamedTypeArray)(node['interfaces'], existingNode['interfaces'], config)\n                    : undefined,\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeInterface = mergeInterface;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDZIQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLHFJQUFpQjtBQUNqRCxtQkFBbUIsbUJBQU8sQ0FBQywySEFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLGdCQUFnQixLQUFLLFVBQVU7QUFDakc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcbWVyZ2VcXGNqc1xcdHlwZWRlZnMtbWVyZ2Vyc1xcaW50ZXJmYWNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tZXJnZUludGVyZmFjZSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgZmllbGRzX2pzXzEgPSByZXF1aXJlKFwiLi9maWVsZHMuanNcIik7XG5jb25zdCBkaXJlY3RpdmVzX2pzXzEgPSByZXF1aXJlKFwiLi9kaXJlY3RpdmVzLmpzXCIpO1xuY29uc3QgaW5kZXhfanNfMSA9IHJlcXVpcmUoXCIuL2luZGV4LmpzXCIpO1xuZnVuY3Rpb24gbWVyZ2VJbnRlcmZhY2Uobm9kZSwgZXhpc3RpbmdOb2RlLCBjb25maWcpIHtcbiAgICBpZiAoZXhpc3RpbmdOb2RlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG5hbWU6IG5vZGUubmFtZSxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogbm9kZVsnZGVzY3JpcHRpb24nXSB8fCBleGlzdGluZ05vZGVbJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICAgICAgICAgICAga2luZDogKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jb252ZXJ0RXh0ZW5zaW9ucykgfHxcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5raW5kID09PSAnSW50ZXJmYWNlVHlwZURlZmluaXRpb24nIHx8XG4gICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nTm9kZS5raW5kID09PSAnSW50ZXJmYWNlVHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgICAgID8gJ0ludGVyZmFjZVR5cGVEZWZpbml0aW9uJ1xuICAgICAgICAgICAgICAgICAgICA6ICdJbnRlcmZhY2VUeXBlRXh0ZW5zaW9uJyxcbiAgICAgICAgICAgICAgICBsb2M6IG5vZGUubG9jLFxuICAgICAgICAgICAgICAgIGZpZWxkczogKDAsIGZpZWxkc19qc18xLm1lcmdlRmllbGRzKShub2RlLCBub2RlLmZpZWxkcywgZXhpc3RpbmdOb2RlLmZpZWxkcywgY29uZmlnKSxcbiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiAoMCwgZGlyZWN0aXZlc19qc18xLm1lcmdlRGlyZWN0aXZlcykobm9kZS5kaXJlY3RpdmVzLCBleGlzdGluZ05vZGUuZGlyZWN0aXZlcywgY29uZmlnKSxcbiAgICAgICAgICAgICAgICBpbnRlcmZhY2VzOiBub2RlWydpbnRlcmZhY2VzJ11cbiAgICAgICAgICAgICAgICAgICAgPyAoMCwgaW5kZXhfanNfMS5tZXJnZU5hbWVkVHlwZUFycmF5KShub2RlWydpbnRlcmZhY2VzJ10sIGV4aXN0aW5nTm9kZVsnaW50ZXJmYWNlcyddLCBjb25maWcpXG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gbWVyZ2UgR3JhcGhRTCBpbnRlcmZhY2UgXCIke25vZGUubmFtZS52YWx1ZX1cIjogJHtlLm1lc3NhZ2V9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuY29udmVydEV4dGVuc2lvbnMpXG4gICAgICAgID8ge1xuICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLklOVEVSRkFDRV9UWVBFX0RFRklOSVRJT04sXG4gICAgICAgIH1cbiAgICAgICAgOiBub2RlO1xufVxuZXhwb3J0cy5tZXJnZUludGVyZmFjZSA9IG1lcmdlSW50ZXJmYWNlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/interface.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-named-type-array.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-named-type-array.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeNamedTypeArray = void 0;\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nfunction alreadyExists(arr, other) {\n    return !!arr.find(i => i.name.value === other.name.value);\n}\nfunction mergeNamedTypeArray(first = [], second = [], config = {}) {\n    const result = [...second, ...first.filter(d => !alreadyExists(second, d))];\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeNamedTypeArray = mergeNamedTypeArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9tZXJnZS1uYW1lZC10eXBlLWFycmF5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixnQkFBZ0IsbUJBQU8sQ0FBQyxvSEFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXG1lcmdlXFxjanNcXHR5cGVkZWZzLW1lcmdlcnNcXG1lcmdlLW5hbWVkLXR5cGUtYXJyYXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lcmdlTmFtZWRUeXBlQXJyYXkgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBncmFwaHFsLXRvb2xzL3V0aWxzXCIpO1xuZnVuY3Rpb24gYWxyZWFkeUV4aXN0cyhhcnIsIG90aGVyKSB7XG4gICAgcmV0dXJuICEhYXJyLmZpbmQoaSA9PiBpLm5hbWUudmFsdWUgPT09IG90aGVyLm5hbWUudmFsdWUpO1xufVxuZnVuY3Rpb24gbWVyZ2VOYW1lZFR5cGVBcnJheShmaXJzdCA9IFtdLCBzZWNvbmQgPSBbXSwgY29uZmlnID0ge30pIHtcbiAgICBjb25zdCByZXN1bHQgPSBbLi4uc2Vjb25kLCAuLi5maXJzdC5maWx0ZXIoZCA9PiAhYWxyZWFkeUV4aXN0cyhzZWNvbmQsIGQpKV07XG4gICAgaWYgKGNvbmZpZyAmJiBjb25maWcuc29ydCkge1xuICAgICAgICByZXN1bHQuc29ydCh1dGlsc18xLmNvbXBhcmVOb2Rlcyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLm1lcmdlTmFtZWRUeXBlQXJyYXkgPSBtZXJnZU5hbWVkVHlwZUFycmF5O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-named-type-array.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-nodes.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-nodes.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeGraphQLNodes = exports.isNamedDefinitionNode = exports.schemaDefSymbol = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/type.js\");\nconst enum_js_1 = __webpack_require__(/*! ./enum.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/enum.js\");\nconst scalar_js_1 = __webpack_require__(/*! ./scalar.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/scalar.js\");\nconst union_js_1 = __webpack_require__(/*! ./union.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/union.js\");\nconst input_type_js_1 = __webpack_require__(/*! ./input-type.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/input-type.js\");\nconst interface_js_1 = __webpack_require__(/*! ./interface.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/interface.js\");\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nconst schema_def_js_1 = __webpack_require__(/*! ./schema-def.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/schema-def.js\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nexports.schemaDefSymbol = 'SCHEMA_DEF_SYMBOL';\nfunction isNamedDefinitionNode(definitionNode) {\n    return 'name' in definitionNode;\n}\nexports.isNamedDefinitionNode = isNamedDefinitionNode;\nfunction mergeGraphQLNodes(nodes, config) {\n    var _a, _b, _c;\n    const mergedResultMap = {};\n    for (const nodeDefinition of nodes) {\n        if (isNamedDefinitionNode(nodeDefinition)) {\n            const name = (_a = nodeDefinition.name) === null || _a === void 0 ? void 0 : _a.value;\n            if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n                (0, utils_1.collectComment)(nodeDefinition);\n            }\n            if (name == null) {\n                continue;\n            }\n            if (((_b = config === null || config === void 0 ? void 0 : config.exclusions) === null || _b === void 0 ? void 0 : _b.includes(name + '.*')) || ((_c = config === null || config === void 0 ? void 0 : config.exclusions) === null || _c === void 0 ? void 0 : _c.includes(name))) {\n                delete mergedResultMap[name];\n            }\n            else {\n                switch (nodeDefinition.kind) {\n                    case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n                    case graphql_1.Kind.OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, type_js_1.mergeType)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n                    case graphql_1.Kind.ENUM_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, enum_js_1.mergeEnum)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.UNION_TYPE_DEFINITION:\n                    case graphql_1.Kind.UNION_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, union_js_1.mergeUnion)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n                    case graphql_1.Kind.SCALAR_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, scalar_js_1.mergeScalar)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n                    case graphql_1.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, input_type_js_1.mergeInputType)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n                    case graphql_1.Kind.INTERFACE_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, interface_js_1.mergeInterface)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.DIRECTIVE_DEFINITION:\n                        mergedResultMap[name] = (0, directives_js_1.mergeDirective)(nodeDefinition, mergedResultMap[name]);\n                        break;\n                }\n            }\n        }\n        else if (nodeDefinition.kind === graphql_1.Kind.SCHEMA_DEFINITION || nodeDefinition.kind === graphql_1.Kind.SCHEMA_EXTENSION) {\n            mergedResultMap[exports.schemaDefSymbol] = (0, schema_def_js_1.mergeSchemaDefs)(nodeDefinition, mergedResultMap[exports.schemaDefSymbol], config);\n        }\n    }\n    return mergedResultMap;\n}\nexports.mergeGraphQLNodes = mergeGraphQLNodes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9tZXJnZS1ub2Rlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyw2QkFBNkIsR0FBRyx1QkFBdUI7QUFDbkYsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkMsa0JBQWtCLG1CQUFPLENBQUMseUhBQVc7QUFDckMsa0JBQWtCLG1CQUFPLENBQUMseUhBQVc7QUFDckMsb0JBQW9CLG1CQUFPLENBQUMsNkhBQWE7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsMkhBQVk7QUFDdkMsd0JBQXdCLG1CQUFPLENBQUMscUlBQWlCO0FBQ2pELHVCQUF1QixtQkFBTyxDQUFDLG1JQUFnQjtBQUMvQyx3QkFBd0IsbUJBQU8sQ0FBQyxxSUFBaUI7QUFDakQsd0JBQXdCLG1CQUFPLENBQUMscUlBQWlCO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLG9IQUFzQjtBQUM5Qyx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxtZXJnZVxcY2pzXFx0eXBlZGVmcy1tZXJnZXJzXFxtZXJnZS1ub2Rlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWVyZ2VHcmFwaFFMTm9kZXMgPSBleHBvcnRzLmlzTmFtZWREZWZpbml0aW9uTm9kZSA9IGV4cG9ydHMuc2NoZW1hRGVmU3ltYm9sID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5jb25zdCB0eXBlX2pzXzEgPSByZXF1aXJlKFwiLi90eXBlLmpzXCIpO1xuY29uc3QgZW51bV9qc18xID0gcmVxdWlyZShcIi4vZW51bS5qc1wiKTtcbmNvbnN0IHNjYWxhcl9qc18xID0gcmVxdWlyZShcIi4vc2NhbGFyLmpzXCIpO1xuY29uc3QgdW5pb25fanNfMSA9IHJlcXVpcmUoXCIuL3VuaW9uLmpzXCIpO1xuY29uc3QgaW5wdXRfdHlwZV9qc18xID0gcmVxdWlyZShcIi4vaW5wdXQtdHlwZS5qc1wiKTtcbmNvbnN0IGludGVyZmFjZV9qc18xID0gcmVxdWlyZShcIi4vaW50ZXJmYWNlLmpzXCIpO1xuY29uc3QgZGlyZWN0aXZlc19qc18xID0gcmVxdWlyZShcIi4vZGlyZWN0aXZlcy5qc1wiKTtcbmNvbnN0IHNjaGVtYV9kZWZfanNfMSA9IHJlcXVpcmUoXCIuL3NjaGVtYS1kZWYuanNcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBncmFwaHFsLXRvb2xzL3V0aWxzXCIpO1xuZXhwb3J0cy5zY2hlbWFEZWZTeW1ib2wgPSAnU0NIRU1BX0RFRl9TWU1CT0wnO1xuZnVuY3Rpb24gaXNOYW1lZERlZmluaXRpb25Ob2RlKGRlZmluaXRpb25Ob2RlKSB7XG4gICAgcmV0dXJuICduYW1lJyBpbiBkZWZpbml0aW9uTm9kZTtcbn1cbmV4cG9ydHMuaXNOYW1lZERlZmluaXRpb25Ob2RlID0gaXNOYW1lZERlZmluaXRpb25Ob2RlO1xuZnVuY3Rpb24gbWVyZ2VHcmFwaFFMTm9kZXMobm9kZXMsIGNvbmZpZykge1xuICAgIHZhciBfYSwgX2IsIF9jO1xuICAgIGNvbnN0IG1lcmdlZFJlc3VsdE1hcCA9IHt9O1xuICAgIGZvciAoY29uc3Qgbm9kZURlZmluaXRpb24gb2Ygbm9kZXMpIHtcbiAgICAgICAgaWYgKGlzTmFtZWREZWZpbml0aW9uTm9kZShub2RlRGVmaW5pdGlvbikpIHtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSAoX2EgPSBub2RlRGVmaW5pdGlvbi5uYW1lKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudmFsdWU7XG4gICAgICAgICAgICBpZiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbW1lbnREZXNjcmlwdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAoMCwgdXRpbHNfMS5jb2xsZWN0Q29tbWVudCkobm9kZURlZmluaXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCgoX2IgPSBjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuZXhjbHVzaW9ucykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmluY2x1ZGVzKG5hbWUgKyAnLionKSkgfHwgKChfYyA9IGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5leGNsdXNpb25zKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuaW5jbHVkZXMobmFtZSkpKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIG1lcmdlZFJlc3VsdE1hcFtuYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAobm9kZURlZmluaXRpb24ua2luZCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIGdyYXBocWxfMS5LaW5kLk9CSkVDVF9UWVBFX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgZ3JhcGhxbF8xLktpbmQuT0JKRUNUX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VkUmVzdWx0TWFwW25hbWVdID0gKDAsIHR5cGVfanNfMS5tZXJnZVR5cGUpKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbbmFtZV0sIGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5FTlVNX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5FTlVNX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VkUmVzdWx0TWFwW25hbWVdID0gKDAsIGVudW1fanNfMS5tZXJnZUVudW0pKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbbmFtZV0sIGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5VTklPTl9UWVBFX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgZ3JhcGhxbF8xLktpbmQuVU5JT05fVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRSZXN1bHRNYXBbbmFtZV0gPSAoMCwgdW5pb25fanNfMS5tZXJnZVVuaW9uKShub2RlRGVmaW5pdGlvbiwgbWVyZ2VkUmVzdWx0TWFwW25hbWVdLCBjb25maWcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgZ3JhcGhxbF8xLktpbmQuU0NBTEFSX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5TQ0FMQVJfVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRSZXN1bHRNYXBbbmFtZV0gPSAoMCwgc2NhbGFyX2pzXzEubWVyZ2VTY2FsYXIpKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbbmFtZV0sIGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5JTlBVVF9PQkpFQ1RfVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIGdyYXBocWxfMS5LaW5kLklOUFVUX09CSkVDVF9UWVBFX0VYVEVOU0lPTjpcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSA9ICgwLCBpbnB1dF90eXBlX2pzXzEubWVyZ2VJbnB1dFR5cGUpKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbbmFtZV0sIGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5JTlRFUkZBQ0VfVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIGdyYXBocWxfMS5LaW5kLklOVEVSRkFDRV9UWVBFX0VYVEVOU0lPTjpcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSA9ICgwLCBpbnRlcmZhY2VfanNfMS5tZXJnZUludGVyZmFjZSkobm9kZURlZmluaXRpb24sIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSwgY29uZmlnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIGdyYXBocWxfMS5LaW5kLkRJUkVDVElWRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VkUmVzdWx0TWFwW25hbWVdID0gKDAsIGRpcmVjdGl2ZXNfanNfMS5tZXJnZURpcmVjdGl2ZSkobm9kZURlZmluaXRpb24sIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobm9kZURlZmluaXRpb24ua2luZCA9PT0gZ3JhcGhxbF8xLktpbmQuU0NIRU1BX0RFRklOSVRJT04gfHwgbm9kZURlZmluaXRpb24ua2luZCA9PT0gZ3JhcGhxbF8xLktpbmQuU0NIRU1BX0VYVEVOU0lPTikge1xuICAgICAgICAgICAgbWVyZ2VkUmVzdWx0TWFwW2V4cG9ydHMuc2NoZW1hRGVmU3ltYm9sXSA9ICgwLCBzY2hlbWFfZGVmX2pzXzEubWVyZ2VTY2hlbWFEZWZzKShub2RlRGVmaW5pdGlvbiwgbWVyZ2VkUmVzdWx0TWFwW2V4cG9ydHMuc2NoZW1hRGVmU3ltYm9sXSwgY29uZmlnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VkUmVzdWx0TWFwO1xufVxuZXhwb3J0cy5tZXJnZUdyYXBoUUxOb2RlcyA9IG1lcmdlR3JhcGhRTE5vZGVzO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-nodes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-typedefs.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-typedefs.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeGraphQLTypes = exports.mergeTypeDefs = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/utils.js\");\nconst merge_nodes_js_1 = __webpack_require__(/*! ./merge-nodes.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-nodes.js\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nconst schema_def_js_1 = __webpack_require__(/*! ./schema-def.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/schema-def.js\");\nfunction mergeTypeDefs(typeSource, config) {\n    (0, utils_1.resetComments)();\n    const doc = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: mergeGraphQLTypes(typeSource, {\n            useSchemaDefinition: true,\n            forceSchemaDefinition: false,\n            throwOnConflict: false,\n            commentDescriptions: false,\n            ...config,\n        }),\n    };\n    let result;\n    if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n        result = (0, utils_1.printWithComments)(doc);\n    }\n    else {\n        result = doc;\n    }\n    (0, utils_1.resetComments)();\n    return result;\n}\nexports.mergeTypeDefs = mergeTypeDefs;\nfunction visitTypeSources(typeSource, options, allNodes = [], visitedTypeSources = new Set()) {\n    if (typeSource && !visitedTypeSources.has(typeSource)) {\n        visitedTypeSources.add(typeSource);\n        if (typeof typeSource === 'function') {\n            visitTypeSources(typeSource(), options, allNodes, visitedTypeSources);\n        }\n        else if (Array.isArray(typeSource)) {\n            for (const type of typeSource) {\n                visitTypeSources(type, options, allNodes, visitedTypeSources);\n            }\n        }\n        else if ((0, graphql_1.isSchema)(typeSource)) {\n            const documentNode = (0, utils_1.getDocumentNodeFromSchema)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allNodes, visitedTypeSources);\n        }\n        else if ((0, utils_js_1.isStringTypes)(typeSource) || (0, utils_js_1.isSourceTypes)(typeSource)) {\n            const documentNode = (0, graphql_1.parse)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allNodes, visitedTypeSources);\n        }\n        else if (typeof typeSource === 'object' && (0, graphql_1.isDefinitionNode)(typeSource)) {\n            allNodes.push(typeSource);\n        }\n        else if ((0, utils_1.isDocumentNode)(typeSource)) {\n            visitTypeSources(typeSource.definitions, options, allNodes, visitedTypeSources);\n        }\n        else {\n            throw new Error(`typeDefs must contain only strings, documents, schemas, or functions, got ${typeof typeSource}`);\n        }\n    }\n    return allNodes;\n}\nfunction mergeGraphQLTypes(typeSource, config) {\n    var _a, _b, _c;\n    (0, utils_1.resetComments)();\n    const allNodes = visitTypeSources(typeSource, config);\n    const mergedNodes = (0, merge_nodes_js_1.mergeGraphQLNodes)(allNodes, config);\n    if (config === null || config === void 0 ? void 0 : config.useSchemaDefinition) {\n        // XXX: right now we don't handle multiple schema definitions\n        const schemaDef = mergedNodes[merge_nodes_js_1.schemaDefSymbol] || {\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n            operationTypes: [],\n        };\n        const operationTypes = schemaDef.operationTypes;\n        for (const opTypeDefNodeType in schema_def_js_1.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n            const opTypeDefNode = operationTypes.find(operationType => operationType.operation === opTypeDefNodeType);\n            if (!opTypeDefNode) {\n                const possibleRootTypeName = schema_def_js_1.DEFAULT_OPERATION_TYPE_NAME_MAP[opTypeDefNodeType];\n                const existingPossibleRootType = mergedNodes[possibleRootTypeName];\n                if (existingPossibleRootType != null && existingPossibleRootType.name != null) {\n                    operationTypes.push({\n                        kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                        type: {\n                            kind: graphql_1.Kind.NAMED_TYPE,\n                            name: existingPossibleRootType.name,\n                        },\n                        operation: opTypeDefNodeType,\n                    });\n                }\n            }\n        }\n        if (((_a = schemaDef === null || schemaDef === void 0 ? void 0 : schemaDef.operationTypes) === null || _a === void 0 ? void 0 : _a.length) != null && schemaDef.operationTypes.length > 0) {\n            mergedNodes[merge_nodes_js_1.schemaDefSymbol] = schemaDef;\n        }\n    }\n    if ((config === null || config === void 0 ? void 0 : config.forceSchemaDefinition) && !((_c = (_b = mergedNodes[merge_nodes_js_1.schemaDefSymbol]) === null || _b === void 0 ? void 0 : _b.operationTypes) === null || _c === void 0 ? void 0 : _c.length)) {\n        mergedNodes[merge_nodes_js_1.schemaDefSymbol] = {\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n            operationTypes: [\n                {\n                    kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: 'query',\n                    type: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: 'Query',\n                        },\n                    },\n                },\n            ],\n        };\n    }\n    const mergedNodeDefinitions = Object.values(mergedNodes);\n    if (config === null || config === void 0 ? void 0 : config.sort) {\n        const sortFn = typeof config.sort === 'function' ? config.sort : utils_js_1.defaultStringComparator;\n        mergedNodeDefinitions.sort((a, b) => { var _a, _b; return sortFn((_a = a.name) === null || _a === void 0 ? void 0 : _a.value, (_b = b.name) === null || _b === void 0 ? void 0 : _b.value); });\n    }\n    return mergedNodeDefinitions;\n}\nexports.mergeGraphQLTypes = mergeGraphQLTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-typedefs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/scalar.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/scalar.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeScalar = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nfunction mergeScalar(node, existingNode, config) {\n    if (existingNode) {\n        return {\n            name: node.name,\n            description: node['description'] || existingNode['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                node.kind === 'ScalarTypeDefinition' ||\n                existingNode.kind === 'ScalarTypeDefinition'\n                ? 'ScalarTypeDefinition'\n                : 'ScalarTypeExtension',\n            loc: node.loc,\n            directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.SCALAR_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeScalar = mergeScalar;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9zY2FsYXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLHdCQUF3QixtQkFBTyxDQUFDLHFJQUFpQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxtZXJnZVxcY2pzXFx0eXBlZGVmcy1tZXJnZXJzXFxzY2FsYXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lcmdlU2NhbGFyID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5jb25zdCBkaXJlY3RpdmVzX2pzXzEgPSByZXF1aXJlKFwiLi9kaXJlY3RpdmVzLmpzXCIpO1xuZnVuY3Rpb24gbWVyZ2VTY2FsYXIobm9kZSwgZXhpc3RpbmdOb2RlLCBjb25maWcpIHtcbiAgICBpZiAoZXhpc3RpbmdOb2RlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiBub2RlLm5hbWUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogbm9kZVsnZGVzY3JpcHRpb24nXSB8fCBleGlzdGluZ05vZGVbJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICAgICAgICBraW5kOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKSB8fFxuICAgICAgICAgICAgICAgIG5vZGUua2luZCA9PT0gJ1NjYWxhclR5cGVEZWZpbml0aW9uJyB8fFxuICAgICAgICAgICAgICAgIGV4aXN0aW5nTm9kZS5raW5kID09PSAnU2NhbGFyVHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgPyAnU2NhbGFyVHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgOiAnU2NhbGFyVHlwZUV4dGVuc2lvbicsXG4gICAgICAgICAgICBsb2M6IG5vZGUubG9jLFxuICAgICAgICAgICAgZGlyZWN0aXZlczogKDAsIGRpcmVjdGl2ZXNfanNfMS5tZXJnZURpcmVjdGl2ZXMpKG5vZGUuZGlyZWN0aXZlcywgZXhpc3RpbmdOb2RlLmRpcmVjdGl2ZXMsIGNvbmZpZyksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKVxuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLm5vZGUsXG4gICAgICAgICAgICBraW5kOiBncmFwaHFsXzEuS2luZC5TQ0FMQVJfVFlQRV9ERUZJTklUSU9OLFxuICAgICAgICB9XG4gICAgICAgIDogbm9kZTtcbn1cbmV4cG9ydHMubWVyZ2VTY2FsYXIgPSBtZXJnZVNjYWxhcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/scalar.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/schema-def.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/schema-def.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeSchemaDefs = exports.DEFAULT_OPERATION_TYPE_NAME_MAP = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nexports.DEFAULT_OPERATION_TYPE_NAME_MAP = {\n    query: 'Query',\n    mutation: 'Mutation',\n    subscription: 'Subscription',\n};\nfunction mergeOperationTypes(opNodeList = [], existingOpNodeList = []) {\n    const finalOpNodeList = [];\n    for (const opNodeType in exports.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n        const opNode = opNodeList.find(n => n.operation === opNodeType) || existingOpNodeList.find(n => n.operation === opNodeType);\n        if (opNode) {\n            finalOpNodeList.push(opNode);\n        }\n    }\n    return finalOpNodeList;\n}\nfunction mergeSchemaDefs(node, existingNode, config) {\n    if (existingNode) {\n        return {\n            kind: node.kind === graphql_1.Kind.SCHEMA_DEFINITION || existingNode.kind === graphql_1.Kind.SCHEMA_DEFINITION\n                ? graphql_1.Kind.SCHEMA_DEFINITION\n                : graphql_1.Kind.SCHEMA_EXTENSION,\n            description: node['description'] || existingNode['description'],\n            directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n            operationTypes: mergeOperationTypes(node.operationTypes, existingNode.operationTypes),\n        };\n    }\n    return ((config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n        }\n        : node);\n}\nexports.mergeSchemaDefs = mergeSchemaDefs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy9zY2hlbWEtZGVmLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLHVDQUF1QztBQUNqRSxrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyx3QkFBd0IsbUJBQU8sQ0FBQyxxSUFBaUI7QUFDakQsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxtZXJnZVxcY2pzXFx0eXBlZGVmcy1tZXJnZXJzXFxzY2hlbWEtZGVmLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tZXJnZVNjaGVtYURlZnMgPSBleHBvcnRzLkRFRkFVTFRfT1BFUkFUSU9OX1RZUEVfTkFNRV9NQVAgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmNvbnN0IGRpcmVjdGl2ZXNfanNfMSA9IHJlcXVpcmUoXCIuL2RpcmVjdGl2ZXMuanNcIik7XG5leHBvcnRzLkRFRkFVTFRfT1BFUkFUSU9OX1RZUEVfTkFNRV9NQVAgPSB7XG4gICAgcXVlcnk6ICdRdWVyeScsXG4gICAgbXV0YXRpb246ICdNdXRhdGlvbicsXG4gICAgc3Vic2NyaXB0aW9uOiAnU3Vic2NyaXB0aW9uJyxcbn07XG5mdW5jdGlvbiBtZXJnZU9wZXJhdGlvblR5cGVzKG9wTm9kZUxpc3QgPSBbXSwgZXhpc3RpbmdPcE5vZGVMaXN0ID0gW10pIHtcbiAgICBjb25zdCBmaW5hbE9wTm9kZUxpc3QgPSBbXTtcbiAgICBmb3IgKGNvbnN0IG9wTm9kZVR5cGUgaW4gZXhwb3J0cy5ERUZBVUxUX09QRVJBVElPTl9UWVBFX05BTUVfTUFQKSB7XG4gICAgICAgIGNvbnN0IG9wTm9kZSA9IG9wTm9kZUxpc3QuZmluZChuID0+IG4ub3BlcmF0aW9uID09PSBvcE5vZGVUeXBlKSB8fCBleGlzdGluZ09wTm9kZUxpc3QuZmluZChuID0+IG4ub3BlcmF0aW9uID09PSBvcE5vZGVUeXBlKTtcbiAgICAgICAgaWYgKG9wTm9kZSkge1xuICAgICAgICAgICAgZmluYWxPcE5vZGVMaXN0LnB1c2gob3BOb2RlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmluYWxPcE5vZGVMaXN0O1xufVxuZnVuY3Rpb24gbWVyZ2VTY2hlbWFEZWZzKG5vZGUsIGV4aXN0aW5nTm9kZSwgY29uZmlnKSB7XG4gICAgaWYgKGV4aXN0aW5nTm9kZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2luZDogbm9kZS5raW5kID09PSBncmFwaHFsXzEuS2luZC5TQ0hFTUFfREVGSU5JVElPTiB8fCBleGlzdGluZ05vZGUua2luZCA9PT0gZ3JhcGhxbF8xLktpbmQuU0NIRU1BX0RFRklOSVRJT05cbiAgICAgICAgICAgICAgICA/IGdyYXBocWxfMS5LaW5kLlNDSEVNQV9ERUZJTklUSU9OXG4gICAgICAgICAgICAgICAgOiBncmFwaHFsXzEuS2luZC5TQ0hFTUFfRVhURU5TSU9OLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IG5vZGVbJ2Rlc2NyaXB0aW9uJ10gfHwgZXhpc3RpbmdOb2RlWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAgICAgZGlyZWN0aXZlczogKDAsIGRpcmVjdGl2ZXNfanNfMS5tZXJnZURpcmVjdGl2ZXMpKG5vZGUuZGlyZWN0aXZlcywgZXhpc3RpbmdOb2RlLmRpcmVjdGl2ZXMsIGNvbmZpZyksXG4gICAgICAgICAgICBvcGVyYXRpb25UeXBlczogbWVyZ2VPcGVyYXRpb25UeXBlcyhub2RlLm9wZXJhdGlvblR5cGVzLCBleGlzdGluZ05vZGUub3BlcmF0aW9uVHlwZXMpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gKChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuY29udmVydEV4dGVuc2lvbnMpXG4gICAgICAgID8ge1xuICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLlNDSEVNQV9ERUZJTklUSU9OLFxuICAgICAgICB9XG4gICAgICAgIDogbm9kZSk7XG59XG5leHBvcnRzLm1lcmdlU2NoZW1hRGVmcyA9IG1lcmdlU2NoZW1hRGVmcztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/schema-def.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/type.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/type.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeType = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst fields_js_1 = __webpack_require__(/*! ./fields.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/fields.js\");\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nconst merge_named_type_array_js_1 = __webpack_require__(/*! ./merge-named-type-array.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-named-type-array.js\");\nfunction mergeType(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'ObjectTypeDefinition' ||\n                    existingNode.kind === 'ObjectTypeDefinition'\n                    ? 'ObjectTypeDefinition'\n                    : 'ObjectTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n                interfaces: (0, merge_named_type_array_js_1.mergeNamedTypeArray)(node.interfaces, existingNode.interfaces, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeType = mergeType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy90eXBlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyxvQkFBb0IsbUJBQU8sQ0FBQyw2SEFBYTtBQUN6Qyx3QkFBd0IsbUJBQU8sQ0FBQyxxSUFBaUI7QUFDakQsb0NBQW9DLG1CQUFPLENBQUMsNkpBQTZCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxnQkFBZ0IsS0FBSyxVQUFVO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXG1lcmdlXFxjanNcXHR5cGVkZWZzLW1lcmdlcnNcXHR5cGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lcmdlVHlwZSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgZmllbGRzX2pzXzEgPSByZXF1aXJlKFwiLi9maWVsZHMuanNcIik7XG5jb25zdCBkaXJlY3RpdmVzX2pzXzEgPSByZXF1aXJlKFwiLi9kaXJlY3RpdmVzLmpzXCIpO1xuY29uc3QgbWVyZ2VfbmFtZWRfdHlwZV9hcnJheV9qc18xID0gcmVxdWlyZShcIi4vbWVyZ2UtbmFtZWQtdHlwZS1hcnJheS5qc1wiKTtcbmZ1bmN0aW9uIG1lcmdlVHlwZShub2RlLCBleGlzdGluZ05vZGUsIGNvbmZpZykge1xuICAgIGlmIChleGlzdGluZ05vZGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogbm9kZS5uYW1lLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBub2RlWydkZXNjcmlwdGlvbiddIHx8IGV4aXN0aW5nTm9kZVsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgICAgICAgICBraW5kOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKSB8fFxuICAgICAgICAgICAgICAgICAgICBub2RlLmtpbmQgPT09ICdPYmplY3RUeXBlRGVmaW5pdGlvbicgfHxcbiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdOb2RlLmtpbmQgPT09ICdPYmplY3RUeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICAgICAgPyAnT2JqZWN0VHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgICAgIDogJ09iamVjdFR5cGVFeHRlbnNpb24nLFxuICAgICAgICAgICAgICAgIGxvYzogbm9kZS5sb2MsXG4gICAgICAgICAgICAgICAgZmllbGRzOiAoMCwgZmllbGRzX2pzXzEubWVyZ2VGaWVsZHMpKG5vZGUsIG5vZGUuZmllbGRzLCBleGlzdGluZ05vZGUuZmllbGRzLCBjb25maWcpLFxuICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6ICgwLCBkaXJlY3RpdmVzX2pzXzEubWVyZ2VEaXJlY3RpdmVzKShub2RlLmRpcmVjdGl2ZXMsIGV4aXN0aW5nTm9kZS5kaXJlY3RpdmVzLCBjb25maWcpLFxuICAgICAgICAgICAgICAgIGludGVyZmFjZXM6ICgwLCBtZXJnZV9uYW1lZF90eXBlX2FycmF5X2pzXzEubWVyZ2VOYW1lZFR5cGVBcnJheSkobm9kZS5pbnRlcmZhY2VzLCBleGlzdGluZ05vZGUuaW50ZXJmYWNlcywgY29uZmlnKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIG1lcmdlIEdyYXBoUUwgdHlwZSBcIiR7bm9kZS5uYW1lLnZhbHVlfVwiOiAke2UubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jb252ZXJ0RXh0ZW5zaW9ucylcbiAgICAgICAgPyB7XG4gICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuT0JKRUNUX1RZUEVfREVGSU5JVElPTixcbiAgICAgICAgfVxuICAgICAgICA6IG5vZGU7XG59XG5leHBvcnRzLm1lcmdlVHlwZSA9IG1lcmdlVHlwZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/union.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/union.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeUnion = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst directives_js_1 = __webpack_require__(/*! ./directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/directives.js\");\nconst merge_named_type_array_js_1 = __webpack_require__(/*! ./merge-named-type-array.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/merge-named-type-array.js\");\nfunction mergeUnion(first, second, config) {\n    if (second) {\n        return {\n            name: first.name,\n            description: first['description'] || second['description'],\n            // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n            directives: (0, directives_js_1.mergeDirectives)(first.directives, second.directives, config),\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || first.kind === 'UnionTypeDefinition' || second.kind === 'UnionTypeDefinition'\n                ? graphql_1.Kind.UNION_TYPE_DEFINITION\n                : graphql_1.Kind.UNION_TYPE_EXTENSION,\n            loc: first.loc,\n            types: (0, merge_named_type_array_js_1.mergeNamedTypeArray)(first.types, second.types, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...first,\n            kind: graphql_1.Kind.UNION_TYPE_DEFINITION,\n        }\n        : first;\n}\nexports.mergeUnion = mergeUnion;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy91bmlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkMsd0JBQXdCLG1CQUFPLENBQUMscUlBQWlCO0FBQ2pELG9DQUFvQyxtQkFBTyxDQUFDLDZKQUE2QjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxtZXJnZVxcY2pzXFx0eXBlZGVmcy1tZXJnZXJzXFx1bmlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWVyZ2VVbmlvbiA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgZGlyZWN0aXZlc19qc18xID0gcmVxdWlyZShcIi4vZGlyZWN0aXZlcy5qc1wiKTtcbmNvbnN0IG1lcmdlX25hbWVkX3R5cGVfYXJyYXlfanNfMSA9IHJlcXVpcmUoXCIuL21lcmdlLW5hbWVkLXR5cGUtYXJyYXkuanNcIik7XG5mdW5jdGlvbiBtZXJnZVVuaW9uKGZpcnN0LCBzZWNvbmQsIGNvbmZpZykge1xuICAgIGlmIChzZWNvbmQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IGZpcnN0Lm5hbWUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogZmlyc3RbJ2Rlc2NyaXB0aW9uJ10gfHwgc2Vjb25kWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAgICAgLy8gQ29uc3RYTm9kZSBoYXMgYmVlbiBpbnRyb2R1Y2VkIGluIHYxNiBidXQgaXQgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBYTm9kZSBzbyB3ZSBkbyBgYXMgYW55YCBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgICAgICAgICAgIGRpcmVjdGl2ZXM6ICgwLCBkaXJlY3RpdmVzX2pzXzEubWVyZ2VEaXJlY3RpdmVzKShmaXJzdC5kaXJlY3RpdmVzLCBzZWNvbmQuZGlyZWN0aXZlcywgY29uZmlnKSxcbiAgICAgICAgICAgIGtpbmQ6IChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuY29udmVydEV4dGVuc2lvbnMpIHx8IGZpcnN0LmtpbmQgPT09ICdVbmlvblR5cGVEZWZpbml0aW9uJyB8fCBzZWNvbmQua2luZCA9PT0gJ1VuaW9uVHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgPyBncmFwaHFsXzEuS2luZC5VTklPTl9UWVBFX0RFRklOSVRJT05cbiAgICAgICAgICAgICAgICA6IGdyYXBocWxfMS5LaW5kLlVOSU9OX1RZUEVfRVhURU5TSU9OLFxuICAgICAgICAgICAgbG9jOiBmaXJzdC5sb2MsXG4gICAgICAgICAgICB0eXBlczogKDAsIG1lcmdlX25hbWVkX3R5cGVfYXJyYXlfanNfMS5tZXJnZU5hbWVkVHlwZUFycmF5KShmaXJzdC50eXBlcywgc2Vjb25kLnR5cGVzLCBjb25maWcpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jb252ZXJ0RXh0ZW5zaW9ucylcbiAgICAgICAgPyB7XG4gICAgICAgICAgICAuLi5maXJzdCxcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLlVOSU9OX1RZUEVfREVGSU5JVElPTixcbiAgICAgICAgfVxuICAgICAgICA6IGZpcnN0O1xufVxuZXhwb3J0cy5tZXJnZVVuaW9uID0gbWVyZ2VVbmlvbjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/union.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/utils.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/utils.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defaultStringComparator = exports.CompareVal = exports.printTypeNode = exports.isNonNullTypeNode = exports.isListTypeNode = exports.isWrappingTypeNode = exports.extractType = exports.isSourceTypes = exports.isStringTypes = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction isStringTypes(types) {\n    return typeof types === 'string';\n}\nexports.isStringTypes = isStringTypes;\nfunction isSourceTypes(types) {\n    return types instanceof graphql_1.Source;\n}\nexports.isSourceTypes = isSourceTypes;\nfunction extractType(type) {\n    let visitedType = type;\n    while (visitedType.kind === graphql_1.Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n        visitedType = visitedType.type;\n    }\n    return visitedType;\n}\nexports.extractType = extractType;\nfunction isWrappingTypeNode(type) {\n    return type.kind !== graphql_1.Kind.NAMED_TYPE;\n}\nexports.isWrappingTypeNode = isWrappingTypeNode;\nfunction isListTypeNode(type) {\n    return type.kind === graphql_1.Kind.LIST_TYPE;\n}\nexports.isListTypeNode = isListTypeNode;\nfunction isNonNullTypeNode(type) {\n    return type.kind === graphql_1.Kind.NON_NULL_TYPE;\n}\nexports.isNonNullTypeNode = isNonNullTypeNode;\nfunction printTypeNode(type) {\n    if (isListTypeNode(type)) {\n        return `[${printTypeNode(type.type)}]`;\n    }\n    if (isNonNullTypeNode(type)) {\n        return `${printTypeNode(type.type)}!`;\n    }\n    return type.name.value;\n}\nexports.printTypeNode = printTypeNode;\nvar CompareVal;\n(function (CompareVal) {\n    CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n    CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n    CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(CompareVal = exports.CompareVal || (exports.CompareVal = {}));\nfunction defaultStringComparator(a, b) {\n    if (a == null && b == null) {\n        return CompareVal.A_EQUALS_B;\n    }\n    if (a == null) {\n        return CompareVal.A_SMALLER_THAN_B;\n    }\n    if (b == null) {\n        return CompareVal.A_GREATER_THAN_B;\n    }\n    if (a < b)\n        return CompareVal.A_SMALLER_THAN_B;\n    if (a > b)\n        return CompareVal.A_GREATER_THAN_B;\n    return CompareVal.A_EQUALS_B;\n}\nexports.defaultStringComparator = defaultStringComparator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9janMvdHlwZWRlZnMtbWVyZ2Vycy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0IsR0FBRyxrQkFBa0IsR0FBRyxxQkFBcUIsR0FBRyx5QkFBeUIsR0FBRyxzQkFBc0IsR0FBRywwQkFBMEIsR0FBRyxtQkFBbUIsR0FBRyxxQkFBcUIsR0FBRyxxQkFBcUI7QUFDcE8sa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsbUJBQW1CLHlCQUF5QjtBQUM1QztBQUNBO0FBQ0Esa0JBQWtCLHlCQUF5QjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0NBQXNDLGtCQUFrQixLQUFLO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcbWVyZ2VcXGNqc1xcdHlwZWRlZnMtbWVyZ2Vyc1xcdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHRTdHJpbmdDb21wYXJhdG9yID0gZXhwb3J0cy5Db21wYXJlVmFsID0gZXhwb3J0cy5wcmludFR5cGVOb2RlID0gZXhwb3J0cy5pc05vbk51bGxUeXBlTm9kZSA9IGV4cG9ydHMuaXNMaXN0VHlwZU5vZGUgPSBleHBvcnRzLmlzV3JhcHBpbmdUeXBlTm9kZSA9IGV4cG9ydHMuZXh0cmFjdFR5cGUgPSBleHBvcnRzLmlzU291cmNlVHlwZXMgPSBleHBvcnRzLmlzU3RyaW5nVHlwZXMgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmZ1bmN0aW9uIGlzU3RyaW5nVHlwZXModHlwZXMpIHtcbiAgICByZXR1cm4gdHlwZW9mIHR5cGVzID09PSAnc3RyaW5nJztcbn1cbmV4cG9ydHMuaXNTdHJpbmdUeXBlcyA9IGlzU3RyaW5nVHlwZXM7XG5mdW5jdGlvbiBpc1NvdXJjZVR5cGVzKHR5cGVzKSB7XG4gICAgcmV0dXJuIHR5cGVzIGluc3RhbmNlb2YgZ3JhcGhxbF8xLlNvdXJjZTtcbn1cbmV4cG9ydHMuaXNTb3VyY2VUeXBlcyA9IGlzU291cmNlVHlwZXM7XG5mdW5jdGlvbiBleHRyYWN0VHlwZSh0eXBlKSB7XG4gICAgbGV0IHZpc2l0ZWRUeXBlID0gdHlwZTtcbiAgICB3aGlsZSAodmlzaXRlZFR5cGUua2luZCA9PT0gZ3JhcGhxbF8xLktpbmQuTElTVF9UWVBFIHx8IHZpc2l0ZWRUeXBlLmtpbmQgPT09ICdOb25OdWxsVHlwZScpIHtcbiAgICAgICAgdmlzaXRlZFR5cGUgPSB2aXNpdGVkVHlwZS50eXBlO1xuICAgIH1cbiAgICByZXR1cm4gdmlzaXRlZFR5cGU7XG59XG5leHBvcnRzLmV4dHJhY3RUeXBlID0gZXh0cmFjdFR5cGU7XG5mdW5jdGlvbiBpc1dyYXBwaW5nVHlwZU5vZGUodHlwZSkge1xuICAgIHJldHVybiB0eXBlLmtpbmQgIT09IGdyYXBocWxfMS5LaW5kLk5BTUVEX1RZUEU7XG59XG5leHBvcnRzLmlzV3JhcHBpbmdUeXBlTm9kZSA9IGlzV3JhcHBpbmdUeXBlTm9kZTtcbmZ1bmN0aW9uIGlzTGlzdFR5cGVOb2RlKHR5cGUpIHtcbiAgICByZXR1cm4gdHlwZS5raW5kID09PSBncmFwaHFsXzEuS2luZC5MSVNUX1RZUEU7XG59XG5leHBvcnRzLmlzTGlzdFR5cGVOb2RlID0gaXNMaXN0VHlwZU5vZGU7XG5mdW5jdGlvbiBpc05vbk51bGxUeXBlTm9kZSh0eXBlKSB7XG4gICAgcmV0dXJuIHR5cGUua2luZCA9PT0gZ3JhcGhxbF8xLktpbmQuTk9OX05VTExfVFlQRTtcbn1cbmV4cG9ydHMuaXNOb25OdWxsVHlwZU5vZGUgPSBpc05vbk51bGxUeXBlTm9kZTtcbmZ1bmN0aW9uIHByaW50VHlwZU5vZGUodHlwZSkge1xuICAgIGlmIChpc0xpc3RUeXBlTm9kZSh0eXBlKSkge1xuICAgICAgICByZXR1cm4gYFske3ByaW50VHlwZU5vZGUodHlwZS50eXBlKX1dYDtcbiAgICB9XG4gICAgaWYgKGlzTm9uTnVsbFR5cGVOb2RlKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiBgJHtwcmludFR5cGVOb2RlKHR5cGUudHlwZSl9IWA7XG4gICAgfVxuICAgIHJldHVybiB0eXBlLm5hbWUudmFsdWU7XG59XG5leHBvcnRzLnByaW50VHlwZU5vZGUgPSBwcmludFR5cGVOb2RlO1xudmFyIENvbXBhcmVWYWw7XG4oZnVuY3Rpb24gKENvbXBhcmVWYWwpIHtcbiAgICBDb21wYXJlVmFsW0NvbXBhcmVWYWxbXCJBX1NNQUxMRVJfVEhBTl9CXCJdID0gLTFdID0gXCJBX1NNQUxMRVJfVEhBTl9CXCI7XG4gICAgQ29tcGFyZVZhbFtDb21wYXJlVmFsW1wiQV9FUVVBTFNfQlwiXSA9IDBdID0gXCJBX0VRVUFMU19CXCI7XG4gICAgQ29tcGFyZVZhbFtDb21wYXJlVmFsW1wiQV9HUkVBVEVSX1RIQU5fQlwiXSA9IDFdID0gXCJBX0dSRUFURVJfVEhBTl9CXCI7XG59KShDb21wYXJlVmFsID0gZXhwb3J0cy5Db21wYXJlVmFsIHx8IChleHBvcnRzLkNvbXBhcmVWYWwgPSB7fSkpO1xuZnVuY3Rpb24gZGVmYXVsdFN0cmluZ0NvbXBhcmF0b3IoYSwgYikge1xuICAgIGlmIChhID09IG51bGwgJiYgYiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBDb21wYXJlVmFsLkFfRVFVQUxTX0I7XG4gICAgfVxuICAgIGlmIChhID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIENvbXBhcmVWYWwuQV9TTUFMTEVSX1RIQU5fQjtcbiAgICB9XG4gICAgaWYgKGIgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gQ29tcGFyZVZhbC5BX0dSRUFURVJfVEhBTl9CO1xuICAgIH1cbiAgICBpZiAoYSA8IGIpXG4gICAgICAgIHJldHVybiBDb21wYXJlVmFsLkFfU01BTExFUl9USEFOX0I7XG4gICAgaWYgKGEgPiBiKVxuICAgICAgICByZXR1cm4gQ29tcGFyZVZhbC5BX0dSRUFURVJfVEhBTl9CO1xuICAgIHJldHVybiBDb21wYXJlVmFsLkFfRVFVQUxTX0I7XG59XG5leHBvcnRzLmRlZmF1bHRTdHJpbmdDb21wYXJhdG9yID0gZGVmYXVsdFN0cmluZ0NvbXBhcmF0b3I7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/addResolversToSchema.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/addResolversToSchema.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addResolversToSchema = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nconst checkForResolveTypeResolver_js_1 = __webpack_require__(/*! ./checkForResolveTypeResolver.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/checkForResolveTypeResolver.js\");\nconst extendResolversFromInterfaces_js_1 = __webpack_require__(/*! ./extendResolversFromInterfaces.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/extendResolversFromInterfaces.js\");\nfunction addResolversToSchema(schemaOrOptions, legacyInputResolvers, legacyInputValidationOptions) {\n    const options = (0, graphql_1.isSchema)(schemaOrOptions)\n        ? {\n            schema: schemaOrOptions,\n            resolvers: legacyInputResolvers !== null && legacyInputResolvers !== void 0 ? legacyInputResolvers : {},\n            resolverValidationOptions: legacyInputValidationOptions,\n        }\n        : schemaOrOptions;\n    let { schema, resolvers: inputResolvers, defaultFieldResolver, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, } = options;\n    const { requireResolversToMatchSchema = 'error', requireResolversForResolveType } = resolverValidationOptions;\n    const resolvers = inheritResolversFromInterfaces\n        ? (0, extendResolversFromInterfaces_js_1.extendResolversFromInterfaces)(schema, inputResolvers)\n        : inputResolvers;\n    for (const typeName in resolvers) {\n        const resolverValue = resolvers[typeName];\n        const resolverType = typeof resolverValue;\n        if (resolverType !== 'object') {\n            throw new Error(`\"${typeName}\" defined in resolvers, but has invalid value \"${resolverValue}\". The resolver's value must be of type object.`);\n        }\n        const type = schema.getType(typeName);\n        if (type == null) {\n            if (requireResolversToMatchSchema === 'ignore') {\n                continue;\n            }\n            throw new Error(`\"${typeName}\" defined in resolvers, but not in schema`);\n        }\n        else if ((0, graphql_1.isSpecifiedScalarType)(type)) {\n            // allow -- without recommending -- overriding of specified scalar types\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const values = type.getValues();\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    !values.some(value => value.name === fieldName) &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but not present within ${type.name}`);\n                }\n            }\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but ${type.name} is not an object or interface type`);\n                }\n            }\n        }\n        else if ((0, graphql_1.isObjectType)(type) || (0, graphql_1.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__')) {\n                    const fields = type.getFields();\n                    const field = fields[fieldName];\n                    if (field == null) {\n                        // Field present in resolver but not in schema\n                        if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'ignore') {\n                            throw new Error(`${typeName}.${fieldName} defined in resolvers, but not in schema`);\n                        }\n                    }\n                    else {\n                        // Field present in both the resolver and schema\n                        const fieldResolve = resolverValue[fieldName];\n                        if (typeof fieldResolve !== 'function' && typeof fieldResolve !== 'object') {\n                            throw new Error(`Resolver ${typeName}.${fieldName} must be object or function`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    schema = updateResolversInPlace\n        ? addResolversToExistingSchema(schema, resolvers, defaultFieldResolver)\n        : createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver);\n    if (requireResolversForResolveType && requireResolversForResolveType !== 'ignore') {\n        (0, checkForResolveTypeResolver_js_1.checkForResolveTypeResolver)(schema, requireResolversForResolveType);\n    }\n    return schema;\n}\nexports.addResolversToSchema = addResolversToSchema;\nfunction addResolversToExistingSchema(schema, resolvers, defaultFieldResolver) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    const typeMap = schema.getTypeMap();\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        const resolverValue = resolvers[typeName];\n        if ((0, graphql_1.isScalarType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && type.astNode != null) {\n                    type.astNode = {\n                        ...type.astNode,\n                        description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : type.astNode.description,\n                        directives: ((_c = type.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && type.extensionASTNodes != null) {\n                    type.extensionASTNodes = type.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    config[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && config.astNode != null) {\n                    config.astNode = {\n                        ...config.astNode,\n                        description: (_h = (_g = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _g === void 0 ? void 0 : _g.description) !== null && _h !== void 0 ? _h : config.astNode.description,\n                        directives: ((_j = config.astNode.directives) !== null && _j !== void 0 ? _j : []).concat((_l = (_k = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _k === void 0 ? void 0 : _k.directives) !== null && _l !== void 0 ? _l : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                    config.extensionASTNodes = config.extensionASTNodes.concat((_m = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _m !== void 0 ? _m : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else if (enumValueConfigMap[fieldName]) {\n                    enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                }\n            }\n            typeMap[typeName] = new graphql_1.GraphQLEnumType(config);\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isObjectType)(type) || (0, graphql_1.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    // this is for isTypeOf and resolveType and all the other stuff.\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                    continue;\n                }\n                const fields = type.getFields();\n                const field = fields[fieldName];\n                if (field != null) {\n                    const fieldResolve = resolverValue[fieldName];\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        field.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(field, fieldResolve);\n                    }\n                }\n            }\n        }\n    }\n    // serialize all default values prior to healing fields with new scalar/enum types.\n    (0, utils_1.forEachDefaultValue)(schema, utils_1.serializeInputValue);\n    // schema may have new scalar/enum types that require healing\n    (0, utils_1.healSchema)(schema);\n    // reparse all default values with new parsing functions.\n    (0, utils_1.forEachDefaultValue)(schema, utils_1.parseInputValue);\n    if (defaultFieldResolver != null) {\n        (0, utils_1.forEachField)(schema, field => {\n            if (!field.resolve) {\n                field.resolve = defaultFieldResolver;\n            }\n        });\n    }\n    return schema;\n}\nfunction createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver) {\n    schema = (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.SCALAR_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const config = type.toConfig();\n            const resolverValue = resolvers[type.name];\n            if (!(0, graphql_1.isSpecifiedScalarType)(type) && resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else {\n                        config[fieldName] = resolverValue[fieldName];\n                    }\n                }\n                return new graphql_1.GraphQLScalarType(config);\n            }\n        },\n        [utils_1.MapperKind.ENUM_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const resolverValue = resolvers[type.name];\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            if (resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else if (enumValueConfigMap[fieldName]) {\n                        enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                    }\n                }\n                return new graphql_1.GraphQLEnumType(config);\n            }\n        },\n        [utils_1.MapperKind.UNION_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql_1.GraphQLUnionType(config);\n            }\n        },\n        [utils_1.MapperKind.OBJECT_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__isTypeOf']) {\n                    config.isTypeOf = resolverValue['__isTypeOf'];\n                }\n                return new graphql_1.GraphQLObjectType(config);\n            }\n        },\n        [utils_1.MapperKind.INTERFACE_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql_1.GraphQLInterfaceType(config);\n            }\n        },\n        [utils_1.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n            const resolverValue = resolvers[typeName];\n            if (resolverValue != null) {\n                const fieldResolve = resolverValue[fieldName];\n                if (fieldResolve != null) {\n                    const newFieldConfig = { ...fieldConfig };\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        newFieldConfig.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(newFieldConfig, fieldResolve);\n                    }\n                    return newFieldConfig;\n                }\n            }\n        },\n    });\n    if (defaultFieldResolver != null) {\n        schema = (0, utils_1.mapSchema)(schema, {\n            [utils_1.MapperKind.OBJECT_FIELD]: fieldConfig => ({\n                ...fieldConfig,\n                resolve: fieldConfig.resolve != null ? fieldConfig.resolve : defaultFieldResolver,\n            }),\n        });\n    }\n    return schema;\n}\nfunction setFieldProperties(field, propertiesObj) {\n    for (const propertyName in propertiesObj) {\n        field[propertyName] = propertiesObj[propertyName];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/addResolversToSchema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/assertResolversPresent.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/assertResolversPresent.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertResolversPresent = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nfunction assertResolversPresent(schema, resolverValidationOptions = {}) {\n    const { requireResolversForArgs, requireResolversForNonScalar, requireResolversForAllFields } = resolverValidationOptions;\n    if (requireResolversForAllFields && (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    (0, utils_1.forEachField)(schema, (field, typeName, fieldName) => {\n        // requires a resolver for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolver('requireResolversForAllFields', requireResolversForAllFields, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolver('requireResolversForArgs', requireResolversForArgs, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that returns a non-scalar type\n        if (requireResolversForNonScalar !== 'ignore' && !(0, graphql_1.isScalarType)((0, graphql_1.getNamedType)(field.type))) {\n            expectResolver('requireResolversForNonScalar', requireResolversForNonScalar, field, typeName, fieldName);\n        }\n    });\n}\nexports.assertResolversPresent = assertResolversPresent;\nfunction expectResolver(validator, behavior, field, typeName, fieldName) {\n    if (!field.resolve) {\n        const message = `Resolver missing for \"${typeName}.${fieldName}\".\nTo disable this validator, use:\n  resolverValidationOptions: {\n    ${validator}: 'ignore'\n  }`;\n        if (behavior === 'error') {\n            throw new Error(message);\n        }\n        if (behavior === 'warn') {\n            console.warn(message);\n        }\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new Error(`Resolver \"${typeName}.${fieldName}\" must be a function`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvY2pzL2Fzc2VydFJlc29sdmVyc1ByZXNlbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLGdCQUFnQixtQkFBTyxDQUFDLG9IQUFzQjtBQUM5QyxzRUFBc0U7QUFDdEUsWUFBWSxzRkFBc0Y7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSxpREFBaUQsU0FBUyxHQUFHLFVBQVU7QUFDdkU7QUFDQTtBQUNBLE1BQU0sVUFBVTtBQUNoQixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLFNBQVMsR0FBRyxVQUFVO0FBQzNEO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxzY2hlbWFcXGNqc1xcYXNzZXJ0UmVzb2x2ZXJzUHJlc2VudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXNzZXJ0UmVzb2x2ZXJzUHJlc2VudCA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAZ3JhcGhxbC10b29scy91dGlsc1wiKTtcbmZ1bmN0aW9uIGFzc2VydFJlc29sdmVyc1ByZXNlbnQoc2NoZW1hLCByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzLCByZXF1aXJlUmVzb2x2ZXJzRm9yTm9uU2NhbGFyLCByZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzIH0gPSByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zO1xuICAgIGlmIChyZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzICYmIChyZXF1aXJlUmVzb2x2ZXJzRm9yQXJncyB8fCByZXF1aXJlUmVzb2x2ZXJzRm9yTm9uU2NhbGFyKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdyZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzIHRha2VzIHByZWNlZGVuY2Ugb3ZlciB0aGUgbW9yZSBzcGVjaWZpYyBhc3NlcnRpb25zLiAnICtcbiAgICAgICAgICAgICdQbGVhc2UgY29uZmlndXJlIGVpdGhlciByZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzIG9yIHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzIC8gJyArXG4gICAgICAgICAgICAncmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhciwgYnV0IG5vdCBhIGNvbWJpbmF0aW9uIG9mIHRoZW0uJyk7XG4gICAgfVxuICAgICgwLCB1dGlsc18xLmZvckVhY2hGaWVsZCkoc2NoZW1hLCAoZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpID0+IHtcbiAgICAgICAgLy8gcmVxdWlyZXMgYSByZXNvbHZlciBmb3IgKmV2ZXJ5KiBmaWVsZC5cbiAgICAgICAgaWYgKHJlcXVpcmVSZXNvbHZlcnNGb3JBbGxGaWVsZHMpIHtcbiAgICAgICAgICAgIGV4cGVjdFJlc29sdmVyKCdyZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzJywgcmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcywgZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHJlcXVpcmVzIGEgcmVzb2x2ZXIgb24gZXZlcnkgZmllbGQgdGhhdCBoYXMgYXJndW1lbnRzXG4gICAgICAgIGlmIChyZXF1aXJlUmVzb2x2ZXJzRm9yQXJncyAmJiBmaWVsZC5hcmdzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGV4cGVjdFJlc29sdmVyKCdyZXF1aXJlUmVzb2x2ZXJzRm9yQXJncycsIHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzLCBmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gcmVxdWlyZXMgYSByZXNvbHZlciBvbiBldmVyeSBmaWVsZCB0aGF0IHJldHVybnMgYSBub24tc2NhbGFyIHR5cGVcbiAgICAgICAgaWYgKHJlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXIgIT09ICdpZ25vcmUnICYmICEoMCwgZ3JhcGhxbF8xLmlzU2NhbGFyVHlwZSkoKDAsIGdyYXBocWxfMS5nZXROYW1lZFR5cGUpKGZpZWxkLnR5cGUpKSkge1xuICAgICAgICAgICAgZXhwZWN0UmVzb2x2ZXIoJ3JlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXInLCByZXF1aXJlUmVzb2x2ZXJzRm9yTm9uU2NhbGFyLCBmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuYXNzZXJ0UmVzb2x2ZXJzUHJlc2VudCA9IGFzc2VydFJlc29sdmVyc1ByZXNlbnQ7XG5mdW5jdGlvbiBleHBlY3RSZXNvbHZlcih2YWxpZGF0b3IsIGJlaGF2aW9yLCBmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSkge1xuICAgIGlmICghZmllbGQucmVzb2x2ZSkge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gYFJlc29sdmVyIG1pc3NpbmcgZm9yIFwiJHt0eXBlTmFtZX0uJHtmaWVsZE5hbWV9XCIuXG5UbyBkaXNhYmxlIHRoaXMgdmFsaWRhdG9yLCB1c2U6XG4gIHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnM6IHtcbiAgICAke3ZhbGlkYXRvcn06ICdpZ25vcmUnXG4gIH1gO1xuICAgICAgICBpZiAoYmVoYXZpb3IgPT09ICdlcnJvcicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYmVoYXZpb3IgPT09ICd3YXJuJykge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBmaWVsZC5yZXNvbHZlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUmVzb2x2ZXIgXCIke3R5cGVOYW1lfS4ke2ZpZWxkTmFtZX1cIiBtdXN0IGJlIGEgZnVuY3Rpb25gKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/assertResolversPresent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/chainResolvers.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/chainResolvers.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.chainResolvers = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction chainResolvers(resolvers) {\n    return (root, args, ctx, info) => resolvers.reduce((prev, curResolver) => {\n        if (curResolver != null) {\n            return curResolver(prev, args, ctx, info);\n        }\n        return (0, graphql_1.defaultFieldResolver)(prev, args, ctx, info);\n    }, root);\n}\nexports.chainResolvers = chainResolvers;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvY2pzL2NoYWluUmVzb2x2ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxzQkFBc0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxzY2hlbWFcXGNqc1xcY2hhaW5SZXNvbHZlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNoYWluUmVzb2x2ZXJzID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5mdW5jdGlvbiBjaGFpblJlc29sdmVycyhyZXNvbHZlcnMpIHtcbiAgICByZXR1cm4gKHJvb3QsIGFyZ3MsIGN0eCwgaW5mbykgPT4gcmVzb2x2ZXJzLnJlZHVjZSgocHJldiwgY3VyUmVzb2x2ZXIpID0+IHtcbiAgICAgICAgaWYgKGN1clJlc29sdmVyICE9IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBjdXJSZXNvbHZlcihwcmV2LCBhcmdzLCBjdHgsIGluZm8pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoMCwgZ3JhcGhxbF8xLmRlZmF1bHRGaWVsZFJlc29sdmVyKShwcmV2LCBhcmdzLCBjdHgsIGluZm8pO1xuICAgIH0sIHJvb3QpO1xufVxuZXhwb3J0cy5jaGFpblJlc29sdmVycyA9IGNoYWluUmVzb2x2ZXJzO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/chainResolvers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/checkForResolveTypeResolver.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/checkForResolveTypeResolver.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.checkForResolveTypeResolver = void 0;\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.ABSTRACT_TYPE]: type => {\n            if (!type.resolveType) {\n                const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` +\n                    '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n                if (requireResolversForResolveType === 'error') {\n                    throw new Error(message);\n                }\n                if (requireResolversForResolveType === 'warn') {\n                    console.warn(message);\n                }\n            }\n            return undefined;\n        },\n    });\n}\nexports.checkForResolveTypeResolver = checkForResolveTypeResolver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvY2pzL2NoZWNrRm9yUmVzb2x2ZVR5cGVSZXNvbHZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQ0FBbUM7QUFDbkMsZ0JBQWdCLG1CQUFPLENBQUMsb0hBQXNCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsVUFBVTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcc2NoZW1hXFxjanNcXGNoZWNrRm9yUmVzb2x2ZVR5cGVSZXNvbHZlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2hlY2tGb3JSZXNvbHZlVHlwZVJlc29sdmVyID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAZ3JhcGhxbC10b29scy91dGlsc1wiKTtcbi8vIElmIHdlIGhhdmUgYW55IHVuaW9uIG9yIGludGVyZmFjZSB0eXBlcyB0aHJvdyBpZiBubyB0aGVyZSBpcyBubyByZXNvbHZlVHlwZSByZXNvbHZlclxuZnVuY3Rpb24gY2hlY2tGb3JSZXNvbHZlVHlwZVJlc29sdmVyKHNjaGVtYSwgcmVxdWlyZVJlc29sdmVyc0ZvclJlc29sdmVUeXBlKSB7XG4gICAgKDAsIHV0aWxzXzEubWFwU2NoZW1hKShzY2hlbWEsIHtcbiAgICAgICAgW3V0aWxzXzEuTWFwcGVyS2luZC5BQlNUUkFDVF9UWVBFXTogdHlwZSA9PiB7XG4gICAgICAgICAgICBpZiAoIXR5cGUucmVzb2x2ZVR5cGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gYFR5cGUgXCIke3R5cGUubmFtZX1cIiBpcyBtaXNzaW5nIGEgXCJfX3Jlc29sdmVUeXBlXCIgcmVzb2x2ZXIuIFBhc3MgJ2lnbm9yZScgaW50byBgICtcbiAgICAgICAgICAgICAgICAgICAgJ1wicmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucy5yZXF1aXJlUmVzb2x2ZXJzRm9yUmVzb2x2ZVR5cGVcIiB0byBkaXNhYmxlIHRoaXMgZXJyb3IuJztcbiAgICAgICAgICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0ZvclJlc29sdmVUeXBlID09PSAnZXJyb3InKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJlcXVpcmVSZXNvbHZlcnNGb3JSZXNvbHZlVHlwZSA9PT0gJ3dhcm4nKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuZXhwb3J0cy5jaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXIgPSBjaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/checkForResolveTypeResolver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/extendResolversFromInterfaces.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/extendResolversFromInterfaces.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.extendResolversFromInterfaces = void 0;\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    const extendedResolvers = {};\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ('getInterfaces' in type) {\n            extendedResolvers[typeName] = {};\n            for (const iFace of type.getInterfaces()) {\n                if (resolvers[iFace.name]) {\n                    for (const fieldName in resolvers[iFace.name]) {\n                        if (fieldName === '__isTypeOf' || !fieldName.startsWith('__')) {\n                            extendedResolvers[typeName][fieldName] = resolvers[iFace.name][fieldName];\n                        }\n                    }\n                }\n            }\n            const typeResolvers = resolvers[typeName];\n            extendedResolvers[typeName] = {\n                ...extendedResolvers[typeName],\n                ...typeResolvers,\n            };\n        }\n        else {\n            const typeResolvers = resolvers[typeName];\n            if (typeResolvers != null) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    }\n    return extendedResolvers;\n}\nexports.extendResolversFromInterfaces = extendResolversFromInterfaces;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvY2pzL2V4dGVuZFJlc29sdmVyc0Zyb21JbnRlcmZhY2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHNjaGVtYVxcY2pzXFxleHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXMgPSB2b2lkIDA7XG5mdW5jdGlvbiBleHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcyhzY2hlbWEsIHJlc29sdmVycykge1xuICAgIGNvbnN0IGV4dGVuZGVkUmVzb2x2ZXJzID0ge307XG4gICAgY29uc3QgdHlwZU1hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiB0eXBlTWFwKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0eXBlTWFwW3R5cGVOYW1lXTtcbiAgICAgICAgaWYgKCdnZXRJbnRlcmZhY2VzJyBpbiB0eXBlKSB7XG4gICAgICAgICAgICBleHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0gPSB7fTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaUZhY2Ugb2YgdHlwZS5nZXRJbnRlcmZhY2VzKCkpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzb2x2ZXJzW2lGYWNlLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIHJlc29sdmVyc1tpRmFjZS5uYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkTmFtZSA9PT0gJ19faXNUeXBlT2YnIHx8ICFmaWVsZE5hbWUuc3RhcnRzV2l0aCgnX18nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dGVuZGVkUmVzb2x2ZXJzW3R5cGVOYW1lXVtmaWVsZE5hbWVdID0gcmVzb2x2ZXJzW2lGYWNlLm5hbWVdW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0eXBlUmVzb2x2ZXJzID0gcmVzb2x2ZXJzW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGV4dGVuZGVkUmVzb2x2ZXJzW3R5cGVOYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAuLi5leHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0sXG4gICAgICAgICAgICAgICAgLi4udHlwZVJlc29sdmVycyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCB0eXBlUmVzb2x2ZXJzID0gcmVzb2x2ZXJzW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGlmICh0eXBlUmVzb2x2ZXJzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBleHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0gPSB0eXBlUmVzb2x2ZXJzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBleHRlbmRlZFJlc29sdmVycztcbn1cbmV4cG9ydHMuZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXMgPSBleHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/extendResolversFromInterfaces.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.extendResolversFromInterfaces = exports.checkForResolveTypeResolver = exports.addResolversToSchema = exports.chainResolvers = exports.assertResolversPresent = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nvar assertResolversPresent_js_1 = __webpack_require__(/*! ./assertResolversPresent.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/assertResolversPresent.js\");\nObject.defineProperty(exports, \"assertResolversPresent\", ({ enumerable: true, get: function () { return assertResolversPresent_js_1.assertResolversPresent; } }));\nvar chainResolvers_js_1 = __webpack_require__(/*! ./chainResolvers.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/chainResolvers.js\");\nObject.defineProperty(exports, \"chainResolvers\", ({ enumerable: true, get: function () { return chainResolvers_js_1.chainResolvers; } }));\nvar addResolversToSchema_js_1 = __webpack_require__(/*! ./addResolversToSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/addResolversToSchema.js\");\nObject.defineProperty(exports, \"addResolversToSchema\", ({ enumerable: true, get: function () { return addResolversToSchema_js_1.addResolversToSchema; } }));\nvar checkForResolveTypeResolver_js_1 = __webpack_require__(/*! ./checkForResolveTypeResolver.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/checkForResolveTypeResolver.js\");\nObject.defineProperty(exports, \"checkForResolveTypeResolver\", ({ enumerable: true, get: function () { return checkForResolveTypeResolver_js_1.checkForResolveTypeResolver; } }));\nvar extendResolversFromInterfaces_js_1 = __webpack_require__(/*! ./extendResolversFromInterfaces.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/extendResolversFromInterfaces.js\");\nObject.defineProperty(exports, \"extendResolversFromInterfaces\", ({ enumerable: true, get: function () { return extendResolversFromInterfaces_js_1.extendResolversFromInterfaces; } }));\ntslib_1.__exportStar(__webpack_require__(/*! ./makeExecutableSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/makeExecutableSchema.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./merge-schemas.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/merge-schemas.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQyxHQUFHLG1DQUFtQyxHQUFHLDRCQUE0QixHQUFHLHNCQUFzQixHQUFHLDhCQUE4QjtBQUNwSyxnQkFBZ0IsbUJBQU8sQ0FBQyx1REFBTztBQUMvQixrQ0FBa0MsbUJBQU8sQ0FBQyw2SUFBNkI7QUFDdkUsMERBQXlELEVBQUUscUNBQXFDLDhEQUE4RCxFQUFDO0FBQy9KLDBCQUEwQixtQkFBTyxDQUFDLDZIQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDdkksZ0NBQWdDLG1CQUFPLENBQUMseUlBQTJCO0FBQ25FLHdEQUF1RCxFQUFFLHFDQUFxQywwREFBMEQsRUFBQztBQUN6Six1Q0FBdUMsbUJBQU8sQ0FBQyx1SkFBa0M7QUFDakYsK0RBQThELEVBQUUscUNBQXFDLHdFQUF3RSxFQUFDO0FBQzlLLHlDQUF5QyxtQkFBTyxDQUFDLDJKQUFvQztBQUNyRixpRUFBZ0UsRUFBRSxxQ0FBcUMsNEVBQTRFLEVBQUM7QUFDcEwscUJBQXFCLG1CQUFPLENBQUMseUlBQTJCO0FBQ3hELHFCQUFxQixtQkFBTyxDQUFDLDJHQUFZO0FBQ3pDLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFvQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHNjaGVtYVxcY2pzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXMgPSBleHBvcnRzLmNoZWNrRm9yUmVzb2x2ZVR5cGVSZXNvbHZlciA9IGV4cG9ydHMuYWRkUmVzb2x2ZXJzVG9TY2hlbWEgPSBleHBvcnRzLmNoYWluUmVzb2x2ZXJzID0gZXhwb3J0cy5hc3NlcnRSZXNvbHZlcnNQcmVzZW50ID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnZhciBhc3NlcnRSZXNvbHZlcnNQcmVzZW50X2pzXzEgPSByZXF1aXJlKFwiLi9hc3NlcnRSZXNvbHZlcnNQcmVzZW50LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYXNzZXJ0UmVzb2x2ZXJzUHJlc2VudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXNzZXJ0UmVzb2x2ZXJzUHJlc2VudF9qc18xLmFzc2VydFJlc29sdmVyc1ByZXNlbnQ7IH0gfSk7XG52YXIgY2hhaW5SZXNvbHZlcnNfanNfMSA9IHJlcXVpcmUoXCIuL2NoYWluUmVzb2x2ZXJzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY2hhaW5SZXNvbHZlcnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNoYWluUmVzb2x2ZXJzX2pzXzEuY2hhaW5SZXNvbHZlcnM7IH0gfSk7XG52YXIgYWRkUmVzb2x2ZXJzVG9TY2hlbWFfanNfMSA9IHJlcXVpcmUoXCIuL2FkZFJlc29sdmVyc1RvU2NoZW1hLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYWRkUmVzb2x2ZXJzVG9TY2hlbWFcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFkZFJlc29sdmVyc1RvU2NoZW1hX2pzXzEuYWRkUmVzb2x2ZXJzVG9TY2hlbWE7IH0gfSk7XG52YXIgY2hlY2tGb3JSZXNvbHZlVHlwZVJlc29sdmVyX2pzXzEgPSByZXF1aXJlKFwiLi9jaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXIuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNoZWNrRm9yUmVzb2x2ZVR5cGVSZXNvbHZlcl9qc18xLmNoZWNrRm9yUmVzb2x2ZVR5cGVSZXNvbHZlcjsgfSB9KTtcbnZhciBleHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlc19qc18xID0gcmVxdWlyZShcIi4vZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXMuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJleHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXNfanNfMS5leHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlczsgfSB9KTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21ha2VFeGVjdXRhYmxlU2NoZW1hLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21lcmdlLXNjaGVtYXMuanNcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/makeExecutableSchema.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/makeExecutableSchema.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeExecutableSchema = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nconst addResolversToSchema_js_1 = __webpack_require__(/*! ./addResolversToSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/addResolversToSchema.js\");\nconst assertResolversPresent_js_1 = __webpack_require__(/*! ./assertResolversPresent.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/assertResolversPresent.js\");\nconst merge_1 = __webpack_require__(/*! @graphql-tools/merge */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/index.js\");\n/**\n * Builds a schema from the provided type definitions and resolvers.\n *\n * The type definitions are written using Schema Definition Language (SDL). They\n * can be provided as a string, a `DocumentNode`, a function, or an array of any\n * of these. If a function is provided, it will be passed no arguments and\n * should return an array of strings or `DocumentNode`s.\n *\n * Note: You can use `graphql-tag` to not only parse a string into a\n * `DocumentNode` but also to provide additional syntax highlighting in your\n * editor (with the appropriate editor plugin).\n *\n * ```js\n * const typeDefs = gql`\n *   type Query {\n *     posts: [Post]\n *     author(id: Int!): Author\n *   }\n * `;\n * ```\n *\n * The `resolvers` object should be a map of type names to nested object, which\n * themselves map the type's fields to their appropriate resolvers.\n * See the [Resolvers](/docs/resolvers) section of the documentation for more details.\n *\n * ```js\n * const resolvers = {\n *   Query: {\n *     posts: (obj, args, ctx, info) => getAllPosts(),\n *     author: (obj, args, ctx, info) => getAuthorById(args.id)\n *   }\n * };\n * ```\n *\n * Once you've defined both the `typeDefs` and `resolvers`, you can create your\n * schema:\n *\n * ```js\n * const schema = makeExecutableSchema({\n *   typeDefs,\n *   resolvers,\n * })\n * ```\n */\nfunction makeExecutableSchema({ typeDefs, resolvers = {}, resolverValidationOptions = {}, parseOptions = {}, inheritResolversFromInterfaces = false, pruningOptions, updateResolversInPlace = false, schemaExtensions, }) {\n    // Validate and clean up arguments\n    if (typeof resolverValidationOptions !== 'object') {\n        throw new Error('Expected `resolverValidationOptions` to be an object');\n    }\n    if (!typeDefs) {\n        throw new Error('Must provide typeDefs');\n    }\n    let schema;\n    if ((0, graphql_1.isSchema)(typeDefs)) {\n        schema = typeDefs;\n    }\n    else if (parseOptions === null || parseOptions === void 0 ? void 0 : parseOptions.commentDescriptions) {\n        const mergedTypeDefs = (0, merge_1.mergeTypeDefs)(typeDefs, {\n            ...parseOptions,\n            commentDescriptions: true,\n        });\n        schema = (0, graphql_1.buildSchema)(mergedTypeDefs, parseOptions);\n    }\n    else {\n        const mergedTypeDefs = (0, merge_1.mergeTypeDefs)(typeDefs, parseOptions);\n        schema = (0, graphql_1.buildASTSchema)(mergedTypeDefs, parseOptions);\n    }\n    if (pruningOptions) {\n        schema = (0, utils_1.pruneSchema)(schema);\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    schema = (0, addResolversToSchema_js_1.addResolversToSchema)({\n        schema,\n        resolvers: (0, merge_1.mergeResolvers)(resolvers),\n        resolverValidationOptions,\n        inheritResolversFromInterfaces,\n        updateResolversInPlace,\n    });\n    if (Object.keys(resolverValidationOptions).length > 0) {\n        (0, assertResolversPresent_js_1.assertResolversPresent)(schema, resolverValidationOptions);\n    }\n    if (schemaExtensions) {\n        schemaExtensions = (0, merge_1.mergeExtensions)((0, utils_1.asArray)(schemaExtensions));\n        (0, merge_1.applyExtensions)(schema, schemaExtensions);\n    }\n    return schema;\n}\nexports.makeExecutableSchema = makeExecutableSchema;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvY2pzL21ha2VFeGVjdXRhYmxlU2NoZW1hLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyxvSEFBc0I7QUFDOUMsa0NBQWtDLG1CQUFPLENBQUMseUlBQTJCO0FBQ3JFLG9DQUFvQyxtQkFBTyxDQUFDLDZJQUE2QjtBQUN6RSxnQkFBZ0IsbUJBQU8sQ0FBQyxvSEFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsZ0NBQWdDLHdCQUF3QixnQ0FBZ0MsbUJBQW1CLDZHQUE2RztBQUN4TjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcc2NoZW1hXFxjanNcXG1ha2VFeGVjdXRhYmxlU2NoZW1hLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYWtlRXhlY3V0YWJsZVNjaGVtYSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAZ3JhcGhxbC10b29scy91dGlsc1wiKTtcbmNvbnN0IGFkZFJlc29sdmVyc1RvU2NoZW1hX2pzXzEgPSByZXF1aXJlKFwiLi9hZGRSZXNvbHZlcnNUb1NjaGVtYS5qc1wiKTtcbmNvbnN0IGFzc2VydFJlc29sdmVyc1ByZXNlbnRfanNfMSA9IHJlcXVpcmUoXCIuL2Fzc2VydFJlc29sdmVyc1ByZXNlbnQuanNcIik7XG5jb25zdCBtZXJnZV8xID0gcmVxdWlyZShcIkBncmFwaHFsLXRvb2xzL21lcmdlXCIpO1xuLyoqXG4gKiBCdWlsZHMgYSBzY2hlbWEgZnJvbSB0aGUgcHJvdmlkZWQgdHlwZSBkZWZpbml0aW9ucyBhbmQgcmVzb2x2ZXJzLlxuICpcbiAqIFRoZSB0eXBlIGRlZmluaXRpb25zIGFyZSB3cml0dGVuIHVzaW5nIFNjaGVtYSBEZWZpbml0aW9uIExhbmd1YWdlIChTREwpLiBUaGV5XG4gKiBjYW4gYmUgcHJvdmlkZWQgYXMgYSBzdHJpbmcsIGEgYERvY3VtZW50Tm9kZWAsIGEgZnVuY3Rpb24sIG9yIGFuIGFycmF5IG9mIGFueVxuICogb2YgdGhlc2UuIElmIGEgZnVuY3Rpb24gaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIG5vIGFyZ3VtZW50cyBhbmRcbiAqIHNob3VsZCByZXR1cm4gYW4gYXJyYXkgb2Ygc3RyaW5ncyBvciBgRG9jdW1lbnROb2RlYHMuXG4gKlxuICogTm90ZTogWW91IGNhbiB1c2UgYGdyYXBocWwtdGFnYCB0byBub3Qgb25seSBwYXJzZSBhIHN0cmluZyBpbnRvIGFcbiAqIGBEb2N1bWVudE5vZGVgIGJ1dCBhbHNvIHRvIHByb3ZpZGUgYWRkaXRpb25hbCBzeW50YXggaGlnaGxpZ2h0aW5nIGluIHlvdXJcbiAqIGVkaXRvciAod2l0aCB0aGUgYXBwcm9wcmlhdGUgZWRpdG9yIHBsdWdpbikuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHR5cGVEZWZzID0gZ3FsYFxuICogICB0eXBlIFF1ZXJ5IHtcbiAqICAgICBwb3N0czogW1Bvc3RdXG4gKiAgICAgYXV0aG9yKGlkOiBJbnQhKTogQXV0aG9yXG4gKiAgIH1cbiAqIGA7XG4gKiBgYGBcbiAqXG4gKiBUaGUgYHJlc29sdmVyc2Agb2JqZWN0IHNob3VsZCBiZSBhIG1hcCBvZiB0eXBlIG5hbWVzIHRvIG5lc3RlZCBvYmplY3QsIHdoaWNoXG4gKiB0aGVtc2VsdmVzIG1hcCB0aGUgdHlwZSdzIGZpZWxkcyB0byB0aGVpciBhcHByb3ByaWF0ZSByZXNvbHZlcnMuXG4gKiBTZWUgdGhlIFtSZXNvbHZlcnNdKC9kb2NzL3Jlc29sdmVycykgc2VjdGlvbiBvZiB0aGUgZG9jdW1lbnRhdGlvbiBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCByZXNvbHZlcnMgPSB7XG4gKiAgIFF1ZXJ5OiB7XG4gKiAgICAgcG9zdHM6IChvYmosIGFyZ3MsIGN0eCwgaW5mbykgPT4gZ2V0QWxsUG9zdHMoKSxcbiAqICAgICBhdXRob3I6IChvYmosIGFyZ3MsIGN0eCwgaW5mbykgPT4gZ2V0QXV0aG9yQnlJZChhcmdzLmlkKVxuICogICB9XG4gKiB9O1xuICogYGBgXG4gKlxuICogT25jZSB5b3UndmUgZGVmaW5lZCBib3RoIHRoZSBgdHlwZURlZnNgIGFuZCBgcmVzb2x2ZXJzYCwgeW91IGNhbiBjcmVhdGUgeW91clxuICogc2NoZW1hOlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBzY2hlbWEgPSBtYWtlRXhlY3V0YWJsZVNjaGVtYSh7XG4gKiAgIHR5cGVEZWZzLFxuICogICByZXNvbHZlcnMsXG4gKiB9KVxuICogYGBgXG4gKi9cbmZ1bmN0aW9uIG1ha2VFeGVjdXRhYmxlU2NoZW1hKHsgdHlwZURlZnMsIHJlc29sdmVycyA9IHt9LCByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zID0ge30sIHBhcnNlT3B0aW9ucyA9IHt9LCBpbmhlcml0UmVzb2x2ZXJzRnJvbUludGVyZmFjZXMgPSBmYWxzZSwgcHJ1bmluZ09wdGlvbnMsIHVwZGF0ZVJlc29sdmVyc0luUGxhY2UgPSBmYWxzZSwgc2NoZW1hRXh0ZW5zaW9ucywgfSkge1xuICAgIC8vIFZhbGlkYXRlIGFuZCBjbGVhbiB1cCBhcmd1bWVudHNcbiAgICBpZiAodHlwZW9mIHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnMgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnNgIHRvIGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICBpZiAoIXR5cGVEZWZzKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTXVzdCBwcm92aWRlIHR5cGVEZWZzJyk7XG4gICAgfVxuICAgIGxldCBzY2hlbWE7XG4gICAgaWYgKCgwLCBncmFwaHFsXzEuaXNTY2hlbWEpKHR5cGVEZWZzKSkge1xuICAgICAgICBzY2hlbWEgPSB0eXBlRGVmcztcbiAgICB9XG4gICAgZWxzZSBpZiAocGFyc2VPcHRpb25zID09PSBudWxsIHx8IHBhcnNlT3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFyc2VPcHRpb25zLmNvbW1lbnREZXNjcmlwdGlvbnMpIHtcbiAgICAgICAgY29uc3QgbWVyZ2VkVHlwZURlZnMgPSAoMCwgbWVyZ2VfMS5tZXJnZVR5cGVEZWZzKSh0eXBlRGVmcywge1xuICAgICAgICAgICAgLi4ucGFyc2VPcHRpb25zLFxuICAgICAgICAgICAgY29tbWVudERlc2NyaXB0aW9uczogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIHNjaGVtYSA9ICgwLCBncmFwaHFsXzEuYnVpbGRTY2hlbWEpKG1lcmdlZFR5cGVEZWZzLCBwYXJzZU9wdGlvbnMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgbWVyZ2VkVHlwZURlZnMgPSAoMCwgbWVyZ2VfMS5tZXJnZVR5cGVEZWZzKSh0eXBlRGVmcywgcGFyc2VPcHRpb25zKTtcbiAgICAgICAgc2NoZW1hID0gKDAsIGdyYXBocWxfMS5idWlsZEFTVFNjaGVtYSkobWVyZ2VkVHlwZURlZnMsIHBhcnNlT3B0aW9ucyk7XG4gICAgfVxuICAgIGlmIChwcnVuaW5nT3B0aW9ucykge1xuICAgICAgICBzY2hlbWEgPSAoMCwgdXRpbHNfMS5wcnVuZVNjaGVtYSkoc2NoZW1hKTtcbiAgICB9XG4gICAgLy8gV2UgYWxsb3cgcGFzc2luZyBpbiBhbiBhcnJheSBvZiByZXNvbHZlciBtYXBzLCBpbiB3aGljaCBjYXNlIHdlIG1lcmdlIHRoZW1cbiAgICBzY2hlbWEgPSAoMCwgYWRkUmVzb2x2ZXJzVG9TY2hlbWFfanNfMS5hZGRSZXNvbHZlcnNUb1NjaGVtYSkoe1xuICAgICAgICBzY2hlbWEsXG4gICAgICAgIHJlc29sdmVyczogKDAsIG1lcmdlXzEubWVyZ2VSZXNvbHZlcnMpKHJlc29sdmVycyksXG4gICAgICAgIHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnMsXG4gICAgICAgIGluaGVyaXRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcyxcbiAgICAgICAgdXBkYXRlUmVzb2x2ZXJzSW5QbGFjZSxcbiAgICB9KTtcbiAgICBpZiAoT2JqZWN0LmtleXMocmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucykubGVuZ3RoID4gMCkge1xuICAgICAgICAoMCwgYXNzZXJ0UmVzb2x2ZXJzUHJlc2VudF9qc18xLmFzc2VydFJlc29sdmVyc1ByZXNlbnQpKHNjaGVtYSwgcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucyk7XG4gICAgfVxuICAgIGlmIChzY2hlbWFFeHRlbnNpb25zKSB7XG4gICAgICAgIHNjaGVtYUV4dGVuc2lvbnMgPSAoMCwgbWVyZ2VfMS5tZXJnZUV4dGVuc2lvbnMpKCgwLCB1dGlsc18xLmFzQXJyYXkpKHNjaGVtYUV4dGVuc2lvbnMpKTtcbiAgICAgICAgKDAsIG1lcmdlXzEuYXBwbHlFeHRlbnNpb25zKShzY2hlbWEsIHNjaGVtYUV4dGVuc2lvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gc2NoZW1hO1xufVxuZXhwb3J0cy5tYWtlRXhlY3V0YWJsZVNjaGVtYSA9IG1ha2VFeGVjdXRhYmxlU2NoZW1hO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/makeExecutableSchema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/merge-schemas.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/merge-schemas.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeSchemas = void 0;\nconst merge_1 = __webpack_require__(/*! @graphql-tools/merge */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/merge/cjs/index.js\");\nconst utils_1 = __webpack_require__(/*! @graphql-tools/utils */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\");\nconst makeExecutableSchema_js_1 = __webpack_require__(/*! ./makeExecutableSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/makeExecutableSchema.js\");\n/**\n * Synchronously merges multiple schemas, typeDefinitions and/or resolvers into a single schema.\n * @param config Configuration object\n */\nfunction mergeSchemas(config) {\n    const extractedTypeDefs = (0, utils_1.asArray)(config.typeDefs || []);\n    const extractedResolvers = (0, utils_1.asArray)(config.resolvers || []);\n    const extractedSchemaExtensions = (0, utils_1.asArray)(config.schemaExtensions || []);\n    const schemas = config.schemas || [];\n    for (const schema of schemas) {\n        extractedTypeDefs.push(schema);\n        extractedResolvers.push((0, utils_1.getResolversFromSchema)(schema, true));\n        extractedSchemaExtensions.push((0, merge_1.extractExtensionsFromSchema)(schema));\n    }\n    return (0, makeExecutableSchema_js_1.makeExecutableSchema)({\n        parseOptions: config,\n        ...config,\n        typeDefs: extractedTypeDefs,\n        resolvers: extractedResolvers,\n        schemaExtensions: extractedSchemaExtensions,\n    });\n}\nexports.mergeSchemas = mergeSchemas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvY2pzL21lcmdlLXNjaGVtYXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGdCQUFnQixtQkFBTyxDQUFDLG9IQUFzQjtBQUM5QyxnQkFBZ0IsbUJBQU8sQ0FBQyxvSEFBc0I7QUFDOUMsa0NBQWtDLG1CQUFPLENBQUMseUlBQTJCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxvQkFBb0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFxzY2hlbWFcXGNqc1xcbWVyZ2Utc2NoZW1hcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWVyZ2VTY2hlbWFzID0gdm9pZCAwO1xuY29uc3QgbWVyZ2VfMSA9IHJlcXVpcmUoXCJAZ3JhcGhxbC10b29scy9tZXJnZVwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQGdyYXBocWwtdG9vbHMvdXRpbHNcIik7XG5jb25zdCBtYWtlRXhlY3V0YWJsZVNjaGVtYV9qc18xID0gcmVxdWlyZShcIi4vbWFrZUV4ZWN1dGFibGVTY2hlbWEuanNcIik7XG4vKipcbiAqIFN5bmNocm9ub3VzbHkgbWVyZ2VzIG11bHRpcGxlIHNjaGVtYXMsIHR5cGVEZWZpbml0aW9ucyBhbmQvb3IgcmVzb2x2ZXJzIGludG8gYSBzaW5nbGUgc2NoZW1hLlxuICogQHBhcmFtIGNvbmZpZyBDb25maWd1cmF0aW9uIG9iamVjdFxuICovXG5mdW5jdGlvbiBtZXJnZVNjaGVtYXMoY29uZmlnKSB7XG4gICAgY29uc3QgZXh0cmFjdGVkVHlwZURlZnMgPSAoMCwgdXRpbHNfMS5hc0FycmF5KShjb25maWcudHlwZURlZnMgfHwgW10pO1xuICAgIGNvbnN0IGV4dHJhY3RlZFJlc29sdmVycyA9ICgwLCB1dGlsc18xLmFzQXJyYXkpKGNvbmZpZy5yZXNvbHZlcnMgfHwgW10pO1xuICAgIGNvbnN0IGV4dHJhY3RlZFNjaGVtYUV4dGVuc2lvbnMgPSAoMCwgdXRpbHNfMS5hc0FycmF5KShjb25maWcuc2NoZW1hRXh0ZW5zaW9ucyB8fCBbXSk7XG4gICAgY29uc3Qgc2NoZW1hcyA9IGNvbmZpZy5zY2hlbWFzIHx8IFtdO1xuICAgIGZvciAoY29uc3Qgc2NoZW1hIG9mIHNjaGVtYXMpIHtcbiAgICAgICAgZXh0cmFjdGVkVHlwZURlZnMucHVzaChzY2hlbWEpO1xuICAgICAgICBleHRyYWN0ZWRSZXNvbHZlcnMucHVzaCgoMCwgdXRpbHNfMS5nZXRSZXNvbHZlcnNGcm9tU2NoZW1hKShzY2hlbWEsIHRydWUpKTtcbiAgICAgICAgZXh0cmFjdGVkU2NoZW1hRXh0ZW5zaW9ucy5wdXNoKCgwLCBtZXJnZV8xLmV4dHJhY3RFeHRlbnNpb25zRnJvbVNjaGVtYSkoc2NoZW1hKSk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgbWFrZUV4ZWN1dGFibGVTY2hlbWFfanNfMS5tYWtlRXhlY3V0YWJsZVNjaGVtYSkoe1xuICAgICAgICBwYXJzZU9wdGlvbnM6IGNvbmZpZyxcbiAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICB0eXBlRGVmczogZXh0cmFjdGVkVHlwZURlZnMsXG4gICAgICAgIHJlc29sdmVyczogZXh0cmFjdGVkUmVzb2x2ZXJzLFxuICAgICAgICBzY2hlbWFFeHRlbnNpb25zOiBleHRyYWN0ZWRTY2hlbWFFeHRlbnNpb25zLFxuICAgIH0pO1xufVxuZXhwb3J0cy5tZXJnZVNjaGVtYXMgPSBtZXJnZVNjaGVtYXM7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/merge-schemas.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/types.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/types.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvY2pzL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcc2NoZW1hXFxjanNcXHR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/schema/cjs/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/AggregateError.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/AggregateError.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isAggregateError = exports.AggregateError = void 0;\nlet AggregateErrorImpl;\nexports.AggregateError = AggregateErrorImpl;\nif (typeof AggregateError === 'undefined') {\n    class AggregateErrorClass extends Error {\n        constructor(errors, message = '') {\n            super(message);\n            this.errors = errors;\n            this.name = 'AggregateError';\n            Error.captureStackTrace(this, AggregateErrorClass);\n        }\n    }\n    exports.AggregateError = AggregateErrorImpl = function (errors, message) {\n        return new AggregateErrorClass(errors, message);\n    };\n}\nelse {\n    exports.AggregateError = AggregateErrorImpl = AggregateError;\n}\nfunction isAggregateError(error) {\n    return 'errors' in error && Array.isArray(error['errors']);\n}\nexports.isAggregateError = isAggregateError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvQWdncmVnYXRlRXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsc0JBQXNCO0FBQ2pEO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksc0JBQXNCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzQkFBc0I7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxBZ2dyZWdhdGVFcnJvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNBZ2dyZWdhdGVFcnJvciA9IGV4cG9ydHMuQWdncmVnYXRlRXJyb3IgPSB2b2lkIDA7XG5sZXQgQWdncmVnYXRlRXJyb3JJbXBsO1xuZXhwb3J0cy5BZ2dyZWdhdGVFcnJvciA9IEFnZ3JlZ2F0ZUVycm9ySW1wbDtcbmlmICh0eXBlb2YgQWdncmVnYXRlRXJyb3IgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgY2xhc3MgQWdncmVnYXRlRXJyb3JDbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgICAgICAgY29uc3RydWN0b3IoZXJyb3JzLCBtZXNzYWdlID0gJycpIHtcbiAgICAgICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICAgICAgdGhpcy5lcnJvcnMgPSBlcnJvcnM7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSAnQWdncmVnYXRlRXJyb3InO1xuICAgICAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgQWdncmVnYXRlRXJyb3JDbGFzcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZXhwb3J0cy5BZ2dyZWdhdGVFcnJvciA9IEFnZ3JlZ2F0ZUVycm9ySW1wbCA9IGZ1bmN0aW9uIChlcnJvcnMsIG1lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBZ2dyZWdhdGVFcnJvckNsYXNzKGVycm9ycywgbWVzc2FnZSk7XG4gICAgfTtcbn1cbmVsc2Uge1xuICAgIGV4cG9ydHMuQWdncmVnYXRlRXJyb3IgPSBBZ2dyZWdhdGVFcnJvckltcGwgPSBBZ2dyZWdhdGVFcnJvcjtcbn1cbmZ1bmN0aW9uIGlzQWdncmVnYXRlRXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4gJ2Vycm9ycycgaW4gZXJyb3IgJiYgQXJyYXkuaXNBcnJheShlcnJvclsnZXJyb3JzJ10pO1xufVxuZXhwb3J0cy5pc0FnZ3JlZ2F0ZUVycm9yID0gaXNBZ2dyZWdhdGVFcnJvcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/AggregateError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/Interfaces.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/Interfaces.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MapperKind = void 0;\nvar MapperKind;\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(MapperKind = exports.MapperKind || (exports.MapperKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvSW50ZXJmYWNlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0Msa0JBQWtCLEtBQUsiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxJbnRlcmZhY2VzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NYXBwZXJLaW5kID0gdm9pZCAwO1xudmFyIE1hcHBlcktpbmQ7XG4oZnVuY3Rpb24gKE1hcHBlcktpbmQpIHtcbiAgICBNYXBwZXJLaW5kW1wiVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIlNDQUxBUl9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLlNDQUxBUl9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIkVOVU1fVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5FTlVNX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiQ09NUE9TSVRFX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuQ09NUE9TSVRFX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiT0JKRUNUX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuT0JKRUNUX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5QVVRfT0JKRUNUX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuSU5QVVRfT0JKRUNUX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiQUJTVFJBQ1RfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5BQlNUUkFDVF9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIlVOSU9OX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuVU5JT05fVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlRFUkZBQ0VfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5JTlRFUkZBQ0VfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJST09UX09CSkVDVFwiXSA9IFwiTWFwcGVyS2luZC5ST09UX09CSkVDVFwiO1xuICAgIE1hcHBlcktpbmRbXCJRVUVSWVwiXSA9IFwiTWFwcGVyS2luZC5RVUVSWVwiO1xuICAgIE1hcHBlcktpbmRbXCJNVVRBVElPTlwiXSA9IFwiTWFwcGVyS2luZC5NVVRBVElPTlwiO1xuICAgIE1hcHBlcktpbmRbXCJTVUJTQ1JJUFRJT05cIl0gPSBcIk1hcHBlcktpbmQuU1VCU0NSSVBUSU9OXCI7XG4gICAgTWFwcGVyS2luZFtcIkRJUkVDVElWRVwiXSA9IFwiTWFwcGVyS2luZC5ESVJFQ1RJVkVcIjtcbiAgICBNYXBwZXJLaW5kW1wiRklFTERcIl0gPSBcIk1hcHBlcktpbmQuRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiQ09NUE9TSVRFX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLkNPTVBPU0lURV9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJPQkpFQ1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuT0JKRUNUX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIlJPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJRVUVSWV9ST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLlFVRVJZX1JPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiTVVUQVRJT05fUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5NVVRBVElPTl9ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIlNVQlNDUklQVElPTl9ST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLlNVQlNDUklQVElPTl9ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIklOVEVSRkFDRV9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5JTlRFUkZBQ0VfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5QVVRfT0JKRUNUX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLklOUFVUX09CSkVDVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJBUkdVTUVOVFwiXSA9IFwiTWFwcGVyS2luZC5BUkdVTUVOVFwiO1xuICAgIE1hcHBlcktpbmRbXCJFTlVNX1ZBTFVFXCJdID0gXCJNYXBwZXJLaW5kLkVOVU1fVkFMVUVcIjtcbn0pKE1hcHBlcktpbmQgPSBleHBvcnRzLk1hcHBlcktpbmQgfHwgKGV4cG9ydHMuTWFwcGVyS2luZCA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/Interfaces.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/addTypes.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/addTypes.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// addTypes uses toConfig to create a new schema with a new or replaced\n// type or directive. Rewiring is employed so that the replaced type can be\n// reconnected with the existing types.\n//\n// Rewiring is employed even for new types or directives as a convenience, so\n// that type references within the new type or directive do not have to be to\n// the identical objects within the original schema.\n//\n// In fact, the type references could even be stub types with entirely different\n// fields, as long as the type references share the same name as the desired\n// type within the original schema's type map.\n//\n// This makes it easy to perform simple schema operations (e.g. adding a new\n// type with a fiew fields removed from an existing type) that could normally be\n// performed by using toConfig directly, but is blocked if any intervening\n// more advanced schema operations have caused the types to be recreated via\n// rewiring.\n//\n// Type recreation happens, for example, with every use of mapSchema, as the\n// types are always rewired. If fields are selected and removed using\n// mapSchema, adding those fields to a new type can no longer be simply done\n// by toConfig, as the types are not the identical JavaScript objects, and\n// schema creation will fail with errors referencing multiple types with the\n// same names.\n//\n// enhanceSchema can fill this gap by adding an additional round of rewiring.\n//\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addTypes = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst getObjectTypeFromTypeMap_js_1 = __webpack_require__(/*! ./getObjectTypeFromTypeMap.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getObjectTypeFromTypeMap.js\");\nconst rewire_js_1 = __webpack_require__(/*! ./rewire.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rewire.js\");\nfunction addTypes(schema, newTypesOrDirectives) {\n    const config = schema.toConfig();\n    const originalTypeMap = {};\n    for (const type of config.types) {\n        originalTypeMap[type.name] = type;\n    }\n    const originalDirectiveMap = {};\n    for (const directive of config.directives) {\n        originalDirectiveMap[directive.name] = directive;\n    }\n    for (const newTypeOrDirective of newTypesOrDirectives) {\n        if ((0, graphql_1.isNamedType)(newTypeOrDirective)) {\n            originalTypeMap[newTypeOrDirective.name] = newTypeOrDirective;\n        }\n        else if ((0, graphql_1.isDirective)(newTypeOrDirective)) {\n            originalDirectiveMap[newTypeOrDirective.name] = newTypeOrDirective;\n        }\n    }\n    const { typeMap, directives } = (0, rewire_js_1.rewireTypes)(originalTypeMap, Object.values(originalDirectiveMap));\n    return new graphql_1.GraphQLSchema({\n        ...config,\n        query: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, schema.getQueryType()),\n        mutation: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, schema.getMutationType()),\n        subscription: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, schema.getSubscriptionType()),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nexports.addTypes = addTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvYWRkVHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLHNDQUFzQyxtQkFBTyxDQUFDLGdKQUErQjtBQUM3RSxvQkFBb0IsbUJBQU8sQ0FBQyw0R0FBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHNCQUFzQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGdCQUFnQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXGFkZFR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gYWRkVHlwZXMgdXNlcyB0b0NvbmZpZyB0byBjcmVhdGUgYSBuZXcgc2NoZW1hIHdpdGggYSBuZXcgb3IgcmVwbGFjZWRcbi8vIHR5cGUgb3IgZGlyZWN0aXZlLiBSZXdpcmluZyBpcyBlbXBsb3llZCBzbyB0aGF0IHRoZSByZXBsYWNlZCB0eXBlIGNhbiBiZVxuLy8gcmVjb25uZWN0ZWQgd2l0aCB0aGUgZXhpc3RpbmcgdHlwZXMuXG4vL1xuLy8gUmV3aXJpbmcgaXMgZW1wbG95ZWQgZXZlbiBmb3IgbmV3IHR5cGVzIG9yIGRpcmVjdGl2ZXMgYXMgYSBjb252ZW5pZW5jZSwgc29cbi8vIHRoYXQgdHlwZSByZWZlcmVuY2VzIHdpdGhpbiB0aGUgbmV3IHR5cGUgb3IgZGlyZWN0aXZlIGRvIG5vdCBoYXZlIHRvIGJlIHRvXG4vLyB0aGUgaWRlbnRpY2FsIG9iamVjdHMgd2l0aGluIHRoZSBvcmlnaW5hbCBzY2hlbWEuXG4vL1xuLy8gSW4gZmFjdCwgdGhlIHR5cGUgcmVmZXJlbmNlcyBjb3VsZCBldmVuIGJlIHN0dWIgdHlwZXMgd2l0aCBlbnRpcmVseSBkaWZmZXJlbnRcbi8vIGZpZWxkcywgYXMgbG9uZyBhcyB0aGUgdHlwZSByZWZlcmVuY2VzIHNoYXJlIHRoZSBzYW1lIG5hbWUgYXMgdGhlIGRlc2lyZWRcbi8vIHR5cGUgd2l0aGluIHRoZSBvcmlnaW5hbCBzY2hlbWEncyB0eXBlIG1hcC5cbi8vXG4vLyBUaGlzIG1ha2VzIGl0IGVhc3kgdG8gcGVyZm9ybSBzaW1wbGUgc2NoZW1hIG9wZXJhdGlvbnMgKGUuZy4gYWRkaW5nIGEgbmV3XG4vLyB0eXBlIHdpdGggYSBmaWV3IGZpZWxkcyByZW1vdmVkIGZyb20gYW4gZXhpc3RpbmcgdHlwZSkgdGhhdCBjb3VsZCBub3JtYWxseSBiZVxuLy8gcGVyZm9ybWVkIGJ5IHVzaW5nIHRvQ29uZmlnIGRpcmVjdGx5LCBidXQgaXMgYmxvY2tlZCBpZiBhbnkgaW50ZXJ2ZW5pbmdcbi8vIG1vcmUgYWR2YW5jZWQgc2NoZW1hIG9wZXJhdGlvbnMgaGF2ZSBjYXVzZWQgdGhlIHR5cGVzIHRvIGJlIHJlY3JlYXRlZCB2aWFcbi8vIHJld2lyaW5nLlxuLy9cbi8vIFR5cGUgcmVjcmVhdGlvbiBoYXBwZW5zLCBmb3IgZXhhbXBsZSwgd2l0aCBldmVyeSB1c2Ugb2YgbWFwU2NoZW1hLCBhcyB0aGVcbi8vIHR5cGVzIGFyZSBhbHdheXMgcmV3aXJlZC4gSWYgZmllbGRzIGFyZSBzZWxlY3RlZCBhbmQgcmVtb3ZlZCB1c2luZ1xuLy8gbWFwU2NoZW1hLCBhZGRpbmcgdGhvc2UgZmllbGRzIHRvIGEgbmV3IHR5cGUgY2FuIG5vIGxvbmdlciBiZSBzaW1wbHkgZG9uZVxuLy8gYnkgdG9Db25maWcsIGFzIHRoZSB0eXBlcyBhcmUgbm90IHRoZSBpZGVudGljYWwgSmF2YVNjcmlwdCBvYmplY3RzLCBhbmRcbi8vIHNjaGVtYSBjcmVhdGlvbiB3aWxsIGZhaWwgd2l0aCBlcnJvcnMgcmVmZXJlbmNpbmcgbXVsdGlwbGUgdHlwZXMgd2l0aCB0aGVcbi8vIHNhbWUgbmFtZXMuXG4vL1xuLy8gZW5oYW5jZVNjaGVtYSBjYW4gZmlsbCB0aGlzIGdhcCBieSBhZGRpbmcgYW4gYWRkaXRpb25hbCByb3VuZCBvZiByZXdpcmluZy5cbi8vXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFkZFR5cGVzID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5jb25zdCBnZXRPYmplY3RUeXBlRnJvbVR5cGVNYXBfanNfMSA9IHJlcXVpcmUoXCIuL2dldE9iamVjdFR5cGVGcm9tVHlwZU1hcC5qc1wiKTtcbmNvbnN0IHJld2lyZV9qc18xID0gcmVxdWlyZShcIi4vcmV3aXJlLmpzXCIpO1xuZnVuY3Rpb24gYWRkVHlwZXMoc2NoZW1hLCBuZXdUeXBlc09yRGlyZWN0aXZlcykge1xuICAgIGNvbnN0IGNvbmZpZyA9IHNjaGVtYS50b0NvbmZpZygpO1xuICAgIGNvbnN0IG9yaWdpbmFsVHlwZU1hcCA9IHt9O1xuICAgIGZvciAoY29uc3QgdHlwZSBvZiBjb25maWcudHlwZXMpIHtcbiAgICAgICAgb3JpZ2luYWxUeXBlTWFwW3R5cGUubmFtZV0gPSB0eXBlO1xuICAgIH1cbiAgICBjb25zdCBvcmlnaW5hbERpcmVjdGl2ZU1hcCA9IHt9O1xuICAgIGZvciAoY29uc3QgZGlyZWN0aXZlIG9mIGNvbmZpZy5kaXJlY3RpdmVzKSB7XG4gICAgICAgIG9yaWdpbmFsRGlyZWN0aXZlTWFwW2RpcmVjdGl2ZS5uYW1lXSA9IGRpcmVjdGl2ZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBuZXdUeXBlT3JEaXJlY3RpdmUgb2YgbmV3VHlwZXNPckRpcmVjdGl2ZXMpIHtcbiAgICAgICAgaWYgKCgwLCBncmFwaHFsXzEuaXNOYW1lZFR5cGUpKG5ld1R5cGVPckRpcmVjdGl2ZSkpIHtcbiAgICAgICAgICAgIG9yaWdpbmFsVHlwZU1hcFtuZXdUeXBlT3JEaXJlY3RpdmUubmFtZV0gPSBuZXdUeXBlT3JEaXJlY3RpdmU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoKDAsIGdyYXBocWxfMS5pc0RpcmVjdGl2ZSkobmV3VHlwZU9yRGlyZWN0aXZlKSkge1xuICAgICAgICAgICAgb3JpZ2luYWxEaXJlY3RpdmVNYXBbbmV3VHlwZU9yRGlyZWN0aXZlLm5hbWVdID0gbmV3VHlwZU9yRGlyZWN0aXZlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHsgdHlwZU1hcCwgZGlyZWN0aXZlcyB9ID0gKDAsIHJld2lyZV9qc18xLnJld2lyZVR5cGVzKShvcmlnaW5hbFR5cGVNYXAsIE9iamVjdC52YWx1ZXMob3JpZ2luYWxEaXJlY3RpdmVNYXApKTtcbiAgICByZXR1cm4gbmV3IGdyYXBocWxfMS5HcmFwaFFMU2NoZW1hKHtcbiAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICBxdWVyeTogKDAsIGdldE9iamVjdFR5cGVGcm9tVHlwZU1hcF9qc18xLmdldE9iamVjdFR5cGVGcm9tVHlwZU1hcCkodHlwZU1hcCwgc2NoZW1hLmdldFF1ZXJ5VHlwZSgpKSxcbiAgICAgICAgbXV0YXRpb246ICgwLCBnZXRPYmplY3RUeXBlRnJvbVR5cGVNYXBfanNfMS5nZXRPYmplY3RUeXBlRnJvbVR5cGVNYXApKHR5cGVNYXAsIHNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKSksXG4gICAgICAgIHN1YnNjcmlwdGlvbjogKDAsIGdldE9iamVjdFR5cGVGcm9tVHlwZU1hcF9qc18xLmdldE9iamVjdFR5cGVGcm9tVHlwZU1hcCkodHlwZU1hcCwgc2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKSksXG4gICAgICAgIHR5cGVzOiBPYmplY3QudmFsdWVzKHR5cGVNYXApLFxuICAgICAgICBkaXJlY3RpdmVzLFxuICAgIH0pO1xufVxuZXhwb3J0cy5hZGRUeXBlcyA9IGFkZFR5cGVzO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/addTypes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromType.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromType.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.astFromType = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst inspect_js_1 = __webpack_require__(/*! ./inspect.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/inspect.js\");\nfunction astFromType(type) {\n    if ((0, graphql_1.isNonNullType)(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === graphql_1.Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${(0, inspect_js_1.inspect)(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: graphql_1.Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if ((0, graphql_1.isListType)(type)) {\n        return {\n            kind: graphql_1.Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: graphql_1.Kind.NAMED_TYPE,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n    };\n}\nexports.astFromType = astFromType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvYXN0RnJvbVR5cGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLHFCQUFxQixtQkFBTyxDQUFDLDhHQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGdDQUFnQztBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxhc3RGcm9tVHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXN0RnJvbVR5cGUgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmNvbnN0IGluc3BlY3RfanNfMSA9IHJlcXVpcmUoXCIuL2luc3BlY3QuanNcIik7XG5mdW5jdGlvbiBhc3RGcm9tVHlwZSh0eXBlKSB7XG4gICAgaWYgKCgwLCBncmFwaHFsXzEuaXNOb25OdWxsVHlwZSkodHlwZSkpIHtcbiAgICAgICAgY29uc3QgaW5uZXJUeXBlID0gYXN0RnJvbVR5cGUodHlwZS5vZlR5cGUpO1xuICAgICAgICBpZiAoaW5uZXJUeXBlLmtpbmQgPT09IGdyYXBocWxfMS5LaW5kLk5PTl9OVUxMX1RZUEUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0eXBlIG5vZGUgJHsoMCwgaW5zcGVjdF9qc18xLmluc3BlY3QpKHR5cGUpfS4gSW5uZXIgdHlwZSBvZiBub24tbnVsbCB0eXBlIGNhbm5vdCBiZSBhIG5vbi1udWxsIHR5cGUuYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLk5PTl9OVUxMX1RZUEUsXG4gICAgICAgICAgICB0eXBlOiBpbm5lclR5cGUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKCgwLCBncmFwaHFsXzEuaXNMaXN0VHlwZSkodHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLkxJU1RfVFlQRSxcbiAgICAgICAgICAgIHR5cGU6IGFzdEZyb21UeXBlKHR5cGUub2ZUeXBlKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuTkFNRURfVFlQRSxcbiAgICAgICAgbmFtZToge1xuICAgICAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuTkFNRSxcbiAgICAgICAgICAgIHZhbHVlOiB0eXBlLm5hbWUsXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMuYXN0RnJvbVR5cGUgPSBhc3RGcm9tVHlwZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromValueUntyped.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromValueUntyped.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.astFromValueUntyped = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using the following mapping.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String               |\n * | Number        | Int / Float          |\n * | null          | NullValue            |\n *\n */\nfunction astFromValueUntyped(value) {\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql_1.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (Array.isArray(value)) {\n        const valuesNodes = [];\n        for (const item of value) {\n            const itemNode = astFromValueUntyped(item);\n            if (itemNode != null) {\n                valuesNodes.push(itemNode);\n            }\n        }\n        return { kind: graphql_1.Kind.LIST, values: valuesNodes };\n    }\n    if (typeof value === 'object') {\n        const fieldNodes = [];\n        for (const fieldName in value) {\n            const fieldValue = value[fieldName];\n            const ast = astFromValueUntyped(fieldValue);\n            if (ast) {\n                fieldNodes.push({\n                    kind: graphql_1.Kind.OBJECT_FIELD,\n                    name: { kind: graphql_1.Kind.NAME, value: fieldName },\n                    value: ast,\n                });\n            }\n        }\n        return { kind: graphql_1.Kind.OBJECT, fields: fieldNodes };\n    }\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof value === 'boolean') {\n        return { kind: graphql_1.Kind.BOOLEAN, value };\n    }\n    // JavaScript numbers can be Int or Float values.\n    if (typeof value === 'number' && isFinite(value)) {\n        const stringNum = String(value);\n        return integerStringRegExp.test(stringNum)\n            ? { kind: graphql_1.Kind.INT, value: stringNum }\n            : { kind: graphql_1.Kind.FLOAT, value: stringNum };\n    }\n    if (typeof value === 'string') {\n        return { kind: graphql_1.Kind.STRING, value };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${value}.`);\n}\nexports.astFromValueUntyped = astFromValueUntyped;\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvYXN0RnJvbVZhbHVlVW50eXBlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0Isa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsNkNBQTZDO0FBQ3pFO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSx3REFBd0QsTUFBTTtBQUM5RDtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxhc3RGcm9tVmFsdWVVbnR5cGVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hc3RGcm9tVmFsdWVVbnR5cGVkID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG4vKipcbiAqIFByb2R1Y2VzIGEgR3JhcGhRTCBWYWx1ZSBBU1QgZ2l2ZW4gYSBKYXZhU2NyaXB0IG9iamVjdC5cbiAqIEZ1bmN0aW9uIHdpbGwgbWF0Y2ggSmF2YVNjcmlwdC9KU09OIHZhbHVlcyB0byBHcmFwaFFMIEFTVCBzY2hlbWEgZm9ybWF0XG4gKiBieSB1c2luZyB0aGUgZm9sbG93aW5nIG1hcHBpbmcuXG4gKlxuICogfCBKU09OIFZhbHVlICAgIHwgR3JhcGhRTCBWYWx1ZSAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBPYmplY3QgICAgICAgIHwgSW5wdXQgT2JqZWN0ICAgICAgICAgfFxuICogfCBBcnJheSAgICAgICAgIHwgTGlzdCAgICAgICAgICAgICAgICAgfFxuICogfCBCb29sZWFuICAgICAgIHwgQm9vbGVhbiAgICAgICAgICAgICAgfFxuICogfCBTdHJpbmcgICAgICAgIHwgU3RyaW5nICAgICAgICAgICAgICAgfFxuICogfCBOdW1iZXIgICAgICAgIHwgSW50IC8gRmxvYXQgICAgICAgICAgfFxuICogfCBudWxsICAgICAgICAgIHwgTnVsbFZhbHVlICAgICAgICAgICAgfFxuICpcbiAqL1xuZnVuY3Rpb24gYXN0RnJvbVZhbHVlVW50eXBlZCh2YWx1ZSkge1xuICAgIC8vIG9ubHkgZXhwbGljaXQgbnVsbCwgbm90IHVuZGVmaW5lZCwgTmFOXG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IGdyYXBocWxfMS5LaW5kLk5VTEwgfTtcbiAgICB9XG4gICAgLy8gdW5kZWZpbmVkXG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIENvbnZlcnQgSmF2YVNjcmlwdCBhcnJheSB0byBHcmFwaFFMIGxpc3QuIElmIHRoZSBHcmFwaFFMVHlwZSBpcyBhIGxpc3QsIGJ1dFxuICAgIC8vIHRoZSB2YWx1ZSBpcyBub3QgYW4gYXJyYXksIGNvbnZlcnQgdGhlIHZhbHVlIHVzaW5nIHRoZSBsaXN0J3MgaXRlbSB0eXBlLlxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICBjb25zdCB2YWx1ZXNOb2RlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZW1Ob2RlID0gYXN0RnJvbVZhbHVlVW50eXBlZChpdGVtKTtcbiAgICAgICAgICAgIGlmIChpdGVtTm9kZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzTm9kZXMucHVzaChpdGVtTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsga2luZDogZ3JhcGhxbF8xLktpbmQuTElTVCwgdmFsdWVzOiB2YWx1ZXNOb2RlcyB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICBjb25zdCBmaWVsZE5vZGVzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIHZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZFZhbHVlID0gdmFsdWVbZmllbGROYW1lXTtcbiAgICAgICAgICAgIGNvbnN0IGFzdCA9IGFzdEZyb21WYWx1ZVVudHlwZWQoZmllbGRWYWx1ZSk7XG4gICAgICAgICAgICBpZiAoYXN0KSB7XG4gICAgICAgICAgICAgICAgZmllbGROb2Rlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuT0JKRUNUX0ZJRUxELFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiB7IGtpbmQ6IGdyYXBocWxfMS5LaW5kLk5BTUUsIHZhbHVlOiBmaWVsZE5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGFzdCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBraW5kOiBncmFwaHFsXzEuS2luZC5PQkpFQ1QsIGZpZWxkczogZmllbGROb2RlcyB9O1xuICAgIH1cbiAgICAvLyBPdGhlcnMgc2VyaWFsaXplIGJhc2VkIG9uIHRoZWlyIGNvcnJlc3BvbmRpbmcgSmF2YVNjcmlwdCBzY2FsYXIgdHlwZXMuXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IGdyYXBocWxfMS5LaW5kLkJPT0xFQU4sIHZhbHVlIH07XG4gICAgfVxuICAgIC8vIEphdmFTY3JpcHQgbnVtYmVycyBjYW4gYmUgSW50IG9yIEZsb2F0IHZhbHVlcy5cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiBpc0Zpbml0ZSh2YWx1ZSkpIHtcbiAgICAgICAgY29uc3Qgc3RyaW5nTnVtID0gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIGludGVnZXJTdHJpbmdSZWdFeHAudGVzdChzdHJpbmdOdW0pXG4gICAgICAgICAgICA/IHsga2luZDogZ3JhcGhxbF8xLktpbmQuSU5ULCB2YWx1ZTogc3RyaW5nTnVtIH1cbiAgICAgICAgICAgIDogeyBraW5kOiBncmFwaHFsXzEuS2luZC5GTE9BVCwgdmFsdWU6IHN0cmluZ051bSB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4geyBraW5kOiBncmFwaHFsXzEuS2luZC5TVFJJTkcsIHZhbHVlIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYENhbm5vdCBjb252ZXJ0IHZhbHVlIHRvIEFTVDogJHt2YWx1ZX0uYCk7XG59XG5leHBvcnRzLmFzdEZyb21WYWx1ZVVudHlwZWQgPSBhc3RGcm9tVmFsdWVVbnR5cGVkO1xuLyoqXG4gKiBJbnRWYWx1ZTpcbiAqICAgLSBOZWdhdGl2ZVNpZ24/IDBcbiAqICAgLSBOZWdhdGl2ZVNpZ24/IE5vblplcm9EaWdpdCAoIERpZ2l0KyApP1xuICovXG5jb25zdCBpbnRlZ2VyU3RyaW5nUmVnRXhwID0gL14tPyg/OjB8WzEtOV1bMC05XSopJC87XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromValueUntyped.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/build-operation-for-field.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/build-operation-for-field.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildOperationNodeForField = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst rootTypes_js_1 = __webpack_require__(/*! ./rootTypes.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rootTypes.js\");\nlet operationVariables = [];\nlet fieldTypeMap = new Map();\nfunction addOperationVariable(variable) {\n    operationVariables.push(variable);\n}\nfunction resetOperationVariables() {\n    operationVariables = [];\n}\nfunction resetFieldMap() {\n    fieldTypeMap = new Map();\n}\nfunction buildOperationNodeForField({ schema, kind, field, models, ignore = [], depthLimit, circularReferenceDepth, argNames, selectedFields = true, }) {\n    resetOperationVariables();\n    resetFieldMap();\n    const rootTypeNames = (0, rootTypes_js_1.getRootTypeNames)(schema);\n    const operationNode = buildOperationAndCollectVariables({\n        schema,\n        fieldName: field,\n        kind,\n        models: models || [],\n        ignore,\n        depthLimit: depthLimit || Infinity,\n        circularReferenceDepth: circularReferenceDepth || 1,\n        argNames,\n        selectedFields,\n        rootTypeNames,\n    });\n    // attach variables\n    operationNode.variableDefinitions = [...operationVariables];\n    resetOperationVariables();\n    resetFieldMap();\n    return operationNode;\n}\nexports.buildOperationNodeForField = buildOperationNodeForField;\nfunction buildOperationAndCollectVariables({ schema, fieldName, kind, models, ignore, depthLimit, circularReferenceDepth, argNames, selectedFields, rootTypeNames, }) {\n    const type = (0, rootTypes_js_1.getDefinedRootType)(schema, kind);\n    const field = type.getFields()[fieldName];\n    const operationName = `${fieldName}_${kind}`;\n    if (field.args) {\n        for (const arg of field.args) {\n            const argName = arg.name;\n            if (!argNames || argNames.includes(argName)) {\n                addOperationVariable(resolveVariable(arg, argName));\n            }\n        }\n    }\n    return {\n        kind: graphql_1.Kind.OPERATION_DEFINITION,\n        operation: kind,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: operationName,\n        },\n        variableDefinitions: [],\n        selectionSet: {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: [\n                resolveField({\n                    type,\n                    field,\n                    models,\n                    firstCall: true,\n                    path: [],\n                    ancestors: [],\n                    ignore,\n                    depthLimit,\n                    circularReferenceDepth,\n                    schema,\n                    depth: 0,\n                    argNames,\n                    selectedFields,\n                    rootTypeNames,\n                }),\n            ],\n        },\n    };\n}\nfunction resolveSelectionSet({ parent, type, models, firstCall, path, ancestors, ignore, depthLimit, circularReferenceDepth, schema, depth, argNames, selectedFields, rootTypeNames, }) {\n    if (typeof selectedFields === 'boolean' && depth > depthLimit) {\n        return;\n    }\n    if ((0, graphql_1.isUnionType)(type)) {\n        const types = type.getTypes();\n        return {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: types\n                .filter(t => !hasCircularRef([...ancestors, t], {\n                depth: circularReferenceDepth,\n            }))\n                .map(t => {\n                return {\n                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                    typeCondition: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: t.name,\n                        },\n                    },\n                    selectionSet: resolveSelectionSet({\n                        parent: type,\n                        type: t,\n                        models,\n                        path,\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields,\n                        rootTypeNames,\n                    }),\n                };\n            })\n                .filter(fragmentNode => { var _a, _b; return ((_b = (_a = fragmentNode === null || fragmentNode === void 0 ? void 0 : fragmentNode.selectionSet) === null || _a === void 0 ? void 0 : _a.selections) === null || _b === void 0 ? void 0 : _b.length) > 0; }),\n        };\n    }\n    if ((0, graphql_1.isInterfaceType)(type)) {\n        const types = Object.values(schema.getTypeMap()).filter((t) => (0, graphql_1.isObjectType)(t) && t.getInterfaces().includes(type));\n        return {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: types\n                .filter(t => !hasCircularRef([...ancestors, t], {\n                depth: circularReferenceDepth,\n            }))\n                .map(t => {\n                return {\n                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                    typeCondition: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: t.name,\n                        },\n                    },\n                    selectionSet: resolveSelectionSet({\n                        parent: type,\n                        type: t,\n                        models,\n                        path,\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields,\n                        rootTypeNames,\n                    }),\n                };\n            })\n                .filter(fragmentNode => { var _a, _b; return ((_b = (_a = fragmentNode === null || fragmentNode === void 0 ? void 0 : fragmentNode.selectionSet) === null || _a === void 0 ? void 0 : _a.selections) === null || _b === void 0 ? void 0 : _b.length) > 0; }),\n        };\n    }\n    if ((0, graphql_1.isObjectType)(type) && !rootTypeNames.has(type.name)) {\n        const isIgnored = ignore.includes(type.name) || ignore.includes(`${parent.name}.${path[path.length - 1]}`);\n        const isModel = models.includes(type.name);\n        if (!firstCall && isModel && !isIgnored) {\n            return {\n                kind: graphql_1.Kind.SELECTION_SET,\n                selections: [\n                    {\n                        kind: graphql_1.Kind.FIELD,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: 'id',\n                        },\n                    },\n                ],\n            };\n        }\n        const fields = type.getFields();\n        return {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: Object.keys(fields)\n                .filter(fieldName => {\n                return !hasCircularRef([...ancestors, (0, graphql_1.getNamedType)(fields[fieldName].type)], {\n                    depth: circularReferenceDepth,\n                });\n            })\n                .map(fieldName => {\n                const selectedSubFields = typeof selectedFields === 'object' ? selectedFields[fieldName] : true;\n                if (selectedSubFields) {\n                    return resolveField({\n                        type,\n                        field: fields[fieldName],\n                        models,\n                        path: [...path, fieldName],\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields: selectedSubFields,\n                        rootTypeNames,\n                    });\n                }\n                return null;\n            })\n                .filter((f) => {\n                var _a, _b;\n                if (f == null) {\n                    return false;\n                }\n                else if ('selectionSet' in f) {\n                    return !!((_b = (_a = f.selectionSet) === null || _a === void 0 ? void 0 : _a.selections) === null || _b === void 0 ? void 0 : _b.length);\n                }\n                return true;\n            }),\n        };\n    }\n}\nfunction resolveVariable(arg, name) {\n    function resolveVariableType(type) {\n        if ((0, graphql_1.isListType)(type)) {\n            return {\n                kind: graphql_1.Kind.LIST_TYPE,\n                type: resolveVariableType(type.ofType),\n            };\n        }\n        if ((0, graphql_1.isNonNullType)(type)) {\n            return {\n                kind: graphql_1.Kind.NON_NULL_TYPE,\n                // for v16 compatibility\n                type: resolveVariableType(type.ofType),\n            };\n        }\n        return {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type.name,\n            },\n        };\n    }\n    return {\n        kind: graphql_1.Kind.VARIABLE_DEFINITION,\n        variable: {\n            kind: graphql_1.Kind.VARIABLE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: name || arg.name,\n            },\n        },\n        type: resolveVariableType(arg.type),\n    };\n}\nfunction getArgumentName(name, path) {\n    return [...path, name].join('_');\n}\nfunction resolveField({ type, field, models, firstCall, path, ancestors, ignore, depthLimit, circularReferenceDepth, schema, depth, argNames, selectedFields, rootTypeNames, }) {\n    const namedType = (0, graphql_1.getNamedType)(field.type);\n    let args = [];\n    let removeField = false;\n    if (field.args && field.args.length) {\n        args = field.args\n            .map(arg => {\n            const argumentName = getArgumentName(arg.name, path);\n            if (argNames && !argNames.includes(argumentName)) {\n                if ((0, graphql_1.isNonNullType)(arg.type)) {\n                    removeField = true;\n                }\n                return null;\n            }\n            if (!firstCall) {\n                addOperationVariable(resolveVariable(arg, argumentName));\n            }\n            return {\n                kind: graphql_1.Kind.ARGUMENT,\n                name: {\n                    kind: graphql_1.Kind.NAME,\n                    value: arg.name,\n                },\n                value: {\n                    kind: graphql_1.Kind.VARIABLE,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: getArgumentName(arg.name, path),\n                    },\n                },\n            };\n        })\n            .filter(Boolean);\n    }\n    if (removeField) {\n        return null;\n    }\n    const fieldPath = [...path, field.name];\n    const fieldPathStr = fieldPath.join('.');\n    let fieldName = field.name;\n    if (fieldTypeMap.has(fieldPathStr) && fieldTypeMap.get(fieldPathStr) !== field.type.toString()) {\n        fieldName += field.type.toString().replace('!', 'NonNull');\n    }\n    fieldTypeMap.set(fieldPathStr, field.type.toString());\n    if (!(0, graphql_1.isScalarType)(namedType) && !(0, graphql_1.isEnumType)(namedType)) {\n        return {\n            kind: graphql_1.Kind.FIELD,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: field.name,\n            },\n            ...(fieldName !== field.name && { alias: { kind: graphql_1.Kind.NAME, value: fieldName } }),\n            selectionSet: resolveSelectionSet({\n                parent: type,\n                type: namedType,\n                models,\n                firstCall,\n                path: fieldPath,\n                ancestors: [...ancestors, type],\n                ignore,\n                depthLimit,\n                circularReferenceDepth,\n                schema,\n                depth: depth + 1,\n                argNames,\n                selectedFields,\n                rootTypeNames,\n            }) || undefined,\n            arguments: args,\n        };\n    }\n    return {\n        kind: graphql_1.Kind.FIELD,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: field.name,\n        },\n        ...(fieldName !== field.name && { alias: { kind: graphql_1.Kind.NAME, value: fieldName } }),\n        arguments: args,\n    };\n}\nfunction hasCircularRef(types, config = {\n    depth: 1,\n}) {\n    const type = types[types.length - 1];\n    if ((0, graphql_1.isScalarType)(type)) {\n        return false;\n    }\n    const size = types.filter(t => t.name === type.name).length;\n    return size > config.depth;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/build-operation-for-field.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/collectFields.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/collectFields.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.collectSubFields = exports.collectFields = void 0;\nconst memoize_js_1 = __webpack_require__(/*! ./memoize.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/memoize.js\");\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\n// Taken from GraphQL-JS v16 for backwards compat\nfunction collectFields(schema, fragments, variableValues, runtimeType, selectionSet, fields, visitedFragmentNames) {\n    for (const selection of selectionSet.selections) {\n        switch (selection.kind) {\n            case graphql_1.Kind.FIELD: {\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                const name = getFieldEntryKey(selection);\n                const fieldList = fields.get(name);\n                if (fieldList !== undefined) {\n                    fieldList.push(selection);\n                }\n                else {\n                    fields.set(name, [selection]);\n                }\n                break;\n            }\n            case graphql_1.Kind.INLINE_FRAGMENT: {\n                if (!shouldIncludeNode(variableValues, selection) ||\n                    !doesFragmentConditionMatch(schema, selection, runtimeType)) {\n                    continue;\n                }\n                collectFields(schema, fragments, variableValues, runtimeType, selection.selectionSet, fields, visitedFragmentNames);\n                break;\n            }\n            case graphql_1.Kind.FRAGMENT_SPREAD: {\n                const fragName = selection.name.value;\n                if (visitedFragmentNames.has(fragName) || !shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                visitedFragmentNames.add(fragName);\n                const fragment = fragments[fragName];\n                if (!fragment || !doesFragmentConditionMatch(schema, fragment, runtimeType)) {\n                    continue;\n                }\n                collectFields(schema, fragments, variableValues, runtimeType, fragment.selectionSet, fields, visitedFragmentNames);\n                break;\n            }\n        }\n    }\n    return fields;\n}\nexports.collectFields = collectFields;\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\nfunction shouldIncludeNode(variableValues, node) {\n    const skip = (0, graphql_1.getDirectiveValues)(graphql_1.GraphQLSkipDirective, node, variableValues);\n    if ((skip === null || skip === void 0 ? void 0 : skip['if']) === true) {\n        return false;\n    }\n    const include = (0, graphql_1.getDirectiveValues)(graphql_1.GraphQLIncludeDirective, node, variableValues);\n    if ((include === null || include === void 0 ? void 0 : include['if']) === false) {\n        return false;\n    }\n    return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n    const typeConditionNode = fragment.typeCondition;\n    if (!typeConditionNode) {\n        return true;\n    }\n    const conditionalType = (0, graphql_1.typeFromAST)(schema, typeConditionNode);\n    if (conditionalType === type) {\n        return true;\n    }\n    if ((0, graphql_1.isAbstractType)(conditionalType)) {\n        const possibleTypes = schema.getPossibleTypes(conditionalType);\n        return possibleTypes.includes(type);\n    }\n    return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n    return node.alias ? node.alias.value : node.name.value;\n}\nexports.collectSubFields = (0, memoize_js_1.memoize5)(function collectSubFields(schema, fragments, variableValues, type, fieldNodes) {\n    const subFieldNodes = new Map();\n    const visitedFragmentNames = new Set();\n    for (const fieldNode of fieldNodes) {\n        if (fieldNode.selectionSet) {\n            collectFields(schema, fragments, variableValues, type, fieldNode.selectionSet, subFieldNodes, visitedFragmentNames);\n        }\n    }\n    return subFieldNodes;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvY29sbGVjdEZpZWxkcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsR0FBRyxxQkFBcUI7QUFDaEQscUJBQXFCLG1CQUFPLENBQUMsOEdBQWM7QUFDM0Msa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcY29sbGVjdEZpZWxkcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29sbGVjdFN1YkZpZWxkcyA9IGV4cG9ydHMuY29sbGVjdEZpZWxkcyA9IHZvaWQgMDtcbmNvbnN0IG1lbW9pemVfanNfMSA9IHJlcXVpcmUoXCIuL21lbW9pemUuanNcIik7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbi8vIFRha2VuIGZyb20gR3JhcGhRTC1KUyB2MTYgZm9yIGJhY2t3YXJkcyBjb21wYXRcbmZ1bmN0aW9uIGNvbGxlY3RGaWVsZHMoc2NoZW1hLCBmcmFnbWVudHMsIHZhcmlhYmxlVmFsdWVzLCBydW50aW1lVHlwZSwgc2VsZWN0aW9uU2V0LCBmaWVsZHMsIHZpc2l0ZWRGcmFnbWVudE5hbWVzKSB7XG4gICAgZm9yIChjb25zdCBzZWxlY3Rpb24gb2Ygc2VsZWN0aW9uU2V0LnNlbGVjdGlvbnMpIHtcbiAgICAgICAgc3dpdGNoIChzZWxlY3Rpb24ua2luZCkge1xuICAgICAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5GSUVMRDoge1xuICAgICAgICAgICAgICAgIGlmICghc2hvdWxkSW5jbHVkZU5vZGUodmFyaWFibGVWYWx1ZXMsIHNlbGVjdGlvbikpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBnZXRGaWVsZEVudHJ5S2V5KHNlbGVjdGlvbik7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRMaXN0ID0gZmllbGRzLmdldChuYW1lKTtcbiAgICAgICAgICAgICAgICBpZiAoZmllbGRMaXN0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGRMaXN0LnB1c2goc2VsZWN0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkcy5zZXQobmFtZSwgW3NlbGVjdGlvbl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgZ3JhcGhxbF8xLktpbmQuSU5MSU5FX0ZSQUdNRU5UOiB7XG4gICAgICAgICAgICAgICAgaWYgKCFzaG91bGRJbmNsdWRlTm9kZSh2YXJpYWJsZVZhbHVlcywgc2VsZWN0aW9uKSB8fFxuICAgICAgICAgICAgICAgICAgICAhZG9lc0ZyYWdtZW50Q29uZGl0aW9uTWF0Y2goc2NoZW1hLCBzZWxlY3Rpb24sIHJ1bnRpbWVUeXBlKSkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29sbGVjdEZpZWxkcyhzY2hlbWEsIGZyYWdtZW50cywgdmFyaWFibGVWYWx1ZXMsIHJ1bnRpbWVUeXBlLCBzZWxlY3Rpb24uc2VsZWN0aW9uU2V0LCBmaWVsZHMsIHZpc2l0ZWRGcmFnbWVudE5hbWVzKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgZ3JhcGhxbF8xLktpbmQuRlJBR01FTlRfU1BSRUFEOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZnJhZ05hbWUgPSBzZWxlY3Rpb24ubmFtZS52YWx1ZTtcbiAgICAgICAgICAgICAgICBpZiAodmlzaXRlZEZyYWdtZW50TmFtZXMuaGFzKGZyYWdOYW1lKSB8fCAhc2hvdWxkSW5jbHVkZU5vZGUodmFyaWFibGVWYWx1ZXMsIHNlbGVjdGlvbikpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZpc2l0ZWRGcmFnbWVudE5hbWVzLmFkZChmcmFnTmFtZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZnJhZ21lbnQgPSBmcmFnbWVudHNbZnJhZ05hbWVdO1xuICAgICAgICAgICAgICAgIGlmICghZnJhZ21lbnQgfHwgIWRvZXNGcmFnbWVudENvbmRpdGlvbk1hdGNoKHNjaGVtYSwgZnJhZ21lbnQsIHJ1bnRpbWVUeXBlKSkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29sbGVjdEZpZWxkcyhzY2hlbWEsIGZyYWdtZW50cywgdmFyaWFibGVWYWx1ZXMsIHJ1bnRpbWVUeXBlLCBmcmFnbWVudC5zZWxlY3Rpb25TZXQsIGZpZWxkcywgdmlzaXRlZEZyYWdtZW50TmFtZXMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmaWVsZHM7XG59XG5leHBvcnRzLmNvbGxlY3RGaWVsZHMgPSBjb2xsZWN0RmllbGRzO1xuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIGEgZmllbGQgc2hvdWxkIGJlIGluY2x1ZGVkIGJhc2VkIG9uIHRoZSBgQGluY2x1ZGVgIGFuZCBgQHNraXBgXG4gKiBkaXJlY3RpdmVzLCB3aGVyZSBgQHNraXBgIGhhcyBoaWdoZXIgcHJlY2VkZW5jZSB0aGFuIGBAaW5jbHVkZWAuXG4gKi9cbmZ1bmN0aW9uIHNob3VsZEluY2x1ZGVOb2RlKHZhcmlhYmxlVmFsdWVzLCBub2RlKSB7XG4gICAgY29uc3Qgc2tpcCA9ICgwLCBncmFwaHFsXzEuZ2V0RGlyZWN0aXZlVmFsdWVzKShncmFwaHFsXzEuR3JhcGhRTFNraXBEaXJlY3RpdmUsIG5vZGUsIHZhcmlhYmxlVmFsdWVzKTtcbiAgICBpZiAoKHNraXAgPT09IG51bGwgfHwgc2tpcCA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2tpcFsnaWYnXSkgPT09IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBpbmNsdWRlID0gKDAsIGdyYXBocWxfMS5nZXREaXJlY3RpdmVWYWx1ZXMpKGdyYXBocWxfMS5HcmFwaFFMSW5jbHVkZURpcmVjdGl2ZSwgbm9kZSwgdmFyaWFibGVWYWx1ZXMpO1xuICAgIGlmICgoaW5jbHVkZSA9PT0gbnVsbCB8fCBpbmNsdWRlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbmNsdWRlWydpZiddKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiBhIGZyYWdtZW50IGlzIGFwcGxpY2FibGUgdG8gdGhlIGdpdmVuIHR5cGUuXG4gKi9cbmZ1bmN0aW9uIGRvZXNGcmFnbWVudENvbmRpdGlvbk1hdGNoKHNjaGVtYSwgZnJhZ21lbnQsIHR5cGUpIHtcbiAgICBjb25zdCB0eXBlQ29uZGl0aW9uTm9kZSA9IGZyYWdtZW50LnR5cGVDb25kaXRpb247XG4gICAgaWYgKCF0eXBlQ29uZGl0aW9uTm9kZSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3QgY29uZGl0aW9uYWxUeXBlID0gKDAsIGdyYXBocWxfMS50eXBlRnJvbUFTVCkoc2NoZW1hLCB0eXBlQ29uZGl0aW9uTm9kZSk7XG4gICAgaWYgKGNvbmRpdGlvbmFsVHlwZSA9PT0gdHlwZSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKCgwLCBncmFwaHFsXzEuaXNBYnN0cmFjdFR5cGUpKGNvbmRpdGlvbmFsVHlwZSkpIHtcbiAgICAgICAgY29uc3QgcG9zc2libGVUeXBlcyA9IHNjaGVtYS5nZXRQb3NzaWJsZVR5cGVzKGNvbmRpdGlvbmFsVHlwZSk7XG4gICAgICAgIHJldHVybiBwb3NzaWJsZVR5cGVzLmluY2x1ZGVzKHR5cGUpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIEltcGxlbWVudHMgdGhlIGxvZ2ljIHRvIGNvbXB1dGUgdGhlIGtleSBvZiBhIGdpdmVuIGZpZWxkJ3MgZW50cnlcbiAqL1xuZnVuY3Rpb24gZ2V0RmllbGRFbnRyeUtleShub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUuYWxpYXMgPyBub2RlLmFsaWFzLnZhbHVlIDogbm9kZS5uYW1lLnZhbHVlO1xufVxuZXhwb3J0cy5jb2xsZWN0U3ViRmllbGRzID0gKDAsIG1lbW9pemVfanNfMS5tZW1vaXplNSkoZnVuY3Rpb24gY29sbGVjdFN1YkZpZWxkcyhzY2hlbWEsIGZyYWdtZW50cywgdmFyaWFibGVWYWx1ZXMsIHR5cGUsIGZpZWxkTm9kZXMpIHtcbiAgICBjb25zdCBzdWJGaWVsZE5vZGVzID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IHZpc2l0ZWRGcmFnbWVudE5hbWVzID0gbmV3IFNldCgpO1xuICAgIGZvciAoY29uc3QgZmllbGROb2RlIG9mIGZpZWxkTm9kZXMpIHtcbiAgICAgICAgaWYgKGZpZWxkTm9kZS5zZWxlY3Rpb25TZXQpIHtcbiAgICAgICAgICAgIGNvbGxlY3RGaWVsZHMoc2NoZW1hLCBmcmFnbWVudHMsIHZhcmlhYmxlVmFsdWVzLCB0eXBlLCBmaWVsZE5vZGUuc2VsZWN0aW9uU2V0LCBzdWJGaWVsZE5vZGVzLCB2aXNpdGVkRnJhZ21lbnROYW1lcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN1YkZpZWxkTm9kZXM7XG59KTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/collectFields.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/comments.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/comments.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getBlockStringIndentation = exports.dedentBlockStringValue = exports.getLeadingCommentBlock = exports.getComment = exports.getDescription = exports.printWithComments = exports.printComment = exports.pushComment = exports.collectComment = exports.resetComments = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst MAX_LINE_LENGTH = 80;\nlet commentsRegistry = {};\nfunction resetComments() {\n    commentsRegistry = {};\n}\nexports.resetComments = resetComments;\nfunction collectComment(node) {\n    var _a;\n    const entityName = (_a = node.name) === null || _a === void 0 ? void 0 : _a.value;\n    if (entityName == null) {\n        return;\n    }\n    pushComment(node, entityName);\n    switch (node.kind) {\n        case 'EnumTypeDefinition':\n            if (node.values) {\n                for (const value of node.values) {\n                    pushComment(value, entityName, value.name.value);\n                }\n            }\n            break;\n        case 'ObjectTypeDefinition':\n        case 'InputObjectTypeDefinition':\n        case 'InterfaceTypeDefinition':\n            if (node.fields) {\n                for (const field of node.fields) {\n                    pushComment(field, entityName, field.name.value);\n                    if (isFieldDefinitionNode(field) && field.arguments) {\n                        for (const arg of field.arguments) {\n                            pushComment(arg, entityName, field.name.value, arg.name.value);\n                        }\n                    }\n                }\n            }\n            break;\n    }\n}\nexports.collectComment = collectComment;\nfunction pushComment(node, entity, field, argument) {\n    const comment = getComment(node);\n    if (typeof comment !== 'string' || comment.length === 0) {\n        return;\n    }\n    const keys = [entity];\n    if (field) {\n        keys.push(field);\n        if (argument) {\n            keys.push(argument);\n        }\n    }\n    const path = keys.join('.');\n    if (!commentsRegistry[path]) {\n        commentsRegistry[path] = [];\n    }\n    commentsRegistry[path].push(comment);\n}\nexports.pushComment = pushComment;\nfunction printComment(comment) {\n    return '\\n# ' + comment.replace(/\\n/g, '\\n# ');\n}\nexports.printComment = printComment;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * NOTE: ==> This file has been modified just to add comments to the printed AST\n * This is a temp measure, we will move to using the original non modified printer.js ASAP.\n */\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n    return maybeArray ? maybeArray.filter(x => x).join(separator || '') : '';\n}\nfunction hasMultilineItems(maybeArray) {\n    var _a;\n    return (_a = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some(str => str.includes('\\n'))) !== null && _a !== void 0 ? _a : false;\n}\nfunction addDescription(cb) {\n    return (node, _key, _parent, path, ancestors) => {\n        var _a;\n        const keys = [];\n        const parent = path.reduce((prev, key) => {\n            if (['fields', 'arguments', 'values'].includes(key) && prev.name) {\n                keys.push(prev.name.value);\n            }\n            return prev[key];\n        }, ancestors[0]);\n        const key = [...keys, (_a = parent === null || parent === void 0 ? void 0 : parent.name) === null || _a === void 0 ? void 0 : _a.value].filter(Boolean).join('.');\n        const items = [];\n        if (node.kind.includes('Definition') && commentsRegistry[key]) {\n            items.push(...commentsRegistry[key]);\n        }\n        return join([...items.map(printComment), node.description, cb(node, _key, _parent, path, ancestors)], '\\n');\n    };\n}\nfunction indent(maybeString) {\n    return maybeString && `  ${maybeString.replace(/\\n/g, '\\n  ')}`;\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n    return array && array.length !== 0 ? `{\\n${indent(join(array, '\\n'))}\\n}` : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n    return maybeString ? start + maybeString + (end || '') : '';\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription = false) {\n    const escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n    return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1\n        ? `\"\"\"${escaped.replace(/\"$/, '\"\\n')}\"\"\"`\n        : `\"\"\"\\n${isDescription ? escaped : indent(escaped)}\\n\"\"\"`;\n}\nconst printDocASTReducer = {\n    Name: { leave: node => node.value },\n    Variable: { leave: node => '$' + node.name },\n    // Document\n    Document: {\n        leave: node => join(node.definitions, '\\n\\n'),\n    },\n    OperationDefinition: {\n        leave: node => {\n            const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n            const prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' ');\n            // the query short form.\n            return prefix + ' ' + node.selectionSet;\n        },\n    },\n    VariableDefinition: {\n        leave: ({ variable, type, defaultValue, directives }) => variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' ')),\n    },\n    SelectionSet: { leave: ({ selections }) => block(selections) },\n    Field: {\n        leave({ alias, name, arguments: args, directives, selectionSet }) {\n            const prefix = wrap('', alias, ': ') + name;\n            let argsLine = prefix + wrap('(', join(args, ', '), ')');\n            if (argsLine.length > MAX_LINE_LENGTH) {\n                argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n            }\n            return join([argsLine, join(directives, ' '), selectionSet], ' ');\n        },\n    },\n    Argument: { leave: ({ name, value }) => name + ': ' + value },\n    // Fragments\n    FragmentSpread: {\n        leave: ({ name, directives }) => '...' + name + wrap(' ', join(directives, ' ')),\n    },\n    InlineFragment: {\n        leave: ({ typeCondition, directives, selectionSet }) => join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' '),\n    },\n    FragmentDefinition: {\n        leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => \n        // Note: fragment variable definitions are experimental and may be changed\n        // or removed in the future.\n        `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n            `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n            selectionSet,\n    },\n    // Value\n    IntValue: { leave: ({ value }) => value },\n    FloatValue: { leave: ({ value }) => value },\n    StringValue: {\n        leave: ({ value, block: isBlockString }) => {\n            if (isBlockString) {\n                return printBlockString(value);\n            }\n            return JSON.stringify(value);\n        },\n    },\n    BooleanValue: { leave: ({ value }) => (value ? 'true' : 'false') },\n    NullValue: { leave: () => 'null' },\n    EnumValue: { leave: ({ value }) => value },\n    ListValue: { leave: ({ values }) => '[' + join(values, ', ') + ']' },\n    ObjectValue: { leave: ({ fields }) => '{' + join(fields, ', ') + '}' },\n    ObjectField: { leave: ({ name, value }) => name + ': ' + value },\n    // Directive\n    Directive: {\n        leave: ({ name, arguments: args }) => '@' + name + wrap('(', join(args, ', '), ')'),\n    },\n    // Type\n    NamedType: { leave: ({ name }) => name },\n    ListType: { leave: ({ type }) => '[' + type + ']' },\n    NonNullType: { leave: ({ type }) => type + '!' },\n    // Type System Definitions\n    SchemaDefinition: {\n        leave: ({ directives, operationTypes }) => join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    OperationTypeDefinition: {\n        leave: ({ operation, type }) => operation + ': ' + type,\n    },\n    ScalarTypeDefinition: {\n        leave: ({ name, directives }) => join(['scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    FieldDefinition: {\n        leave: ({ name, arguments: args, type, directives }) => name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            ': ' +\n            type +\n            wrap(' ', join(directives, ' ')),\n    },\n    InputValueDefinition: {\n        leave: ({ name, type, defaultValue, directives }) => join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' '),\n    },\n    InterfaceTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    UnionTypeDefinition: {\n        leave: ({ name, directives, types }) => join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeDefinition: {\n        leave: ({ name, directives, values }) => join(['enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    EnumValueDefinition: {\n        leave: ({ name, directives }) => join([name, join(directives, ' ')], ' '),\n    },\n    InputObjectTypeDefinition: {\n        leave: ({ name, directives, fields }) => join(['input', name, join(directives, ' '), block(fields)], ' '),\n    },\n    DirectiveDefinition: {\n        leave: ({ name, arguments: args, repeatable, locations }) => 'directive @' +\n            name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            (repeatable ? ' repeatable' : '') +\n            ' on ' +\n            join(locations, ' | '),\n    },\n    SchemaExtension: {\n        leave: ({ directives, operationTypes }) => join(['extend schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    ScalarTypeExtension: {\n        leave: ({ name, directives }) => join(['extend scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    InterfaceTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    UnionTypeExtension: {\n        leave: ({ name, directives, types }) => join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeExtension: {\n        leave: ({ name, directives, values }) => join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    InputObjectTypeExtension: {\n        leave: ({ name, directives, fields }) => join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n    },\n};\nconst printDocASTReducerWithComments = Object.keys(printDocASTReducer).reduce((prev, key) => ({\n    ...prev,\n    [key]: {\n        leave: addDescription(printDocASTReducer[key].leave),\n    },\n}), {});\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction printWithComments(ast) {\n    return (0, graphql_1.visit)(ast, printDocASTReducerWithComments);\n}\nexports.printWithComments = printWithComments;\nfunction isFieldDefinitionNode(node) {\n    return node.kind === 'FieldDefinition';\n}\n// graphql < v13 and > v15 does not export getDescription\nfunction getDescription(node, options) {\n    if (node.description != null) {\n        return node.description.value;\n    }\n    if (options === null || options === void 0 ? void 0 : options.commentDescriptions) {\n        return getComment(node);\n    }\n}\nexports.getDescription = getDescription;\nfunction getComment(node) {\n    const rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n        return dedentBlockStringValue(`\\n${rawValue}`);\n    }\n}\nexports.getComment = getComment;\nfunction getLeadingCommentBlock(node) {\n    const loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    const comments = [];\n    let token = loc.startToken.prev;\n    while (token != null &&\n        token.kind === graphql_1.TokenKind.COMMENT &&\n        token.next != null &&\n        token.prev != null &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        const value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\nexports.getLeadingCommentBlock = getLeadingCommentBlock;\nfunction dedentBlockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    const lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    const commonIndent = getBlockStringIndentation(lines);\n    if (commonIndent !== 0) {\n        for (let i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\nexports.dedentBlockStringValue = dedentBlockStringValue;\n/**\n * @internal\n */\nfunction getBlockStringIndentation(lines) {\n    let commonIndent = null;\n    for (let i = 1; i < lines.length; i++) {\n        const line = lines[i];\n        const indent = leadingWhitespace(line);\n        if (indent === line.length) {\n            continue; // skip empty lines\n        }\n        if (commonIndent === null || indent < commonIndent) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    return commonIndent === null ? 0 : commonIndent;\n}\nexports.getBlockStringIndentation = getBlockStringIndentation;\nfunction leadingWhitespace(str) {\n    let i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/comments.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/errors.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/errors.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.relocatedError = exports.createGraphQLError = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction createGraphQLError(message, options) {\n    if (graphql_1.versionInfo.major >= 17) {\n        return new graphql_1.GraphQLError(message, options);\n    }\n    return new graphql_1.GraphQLError(message, options === null || options === void 0 ? void 0 : options.nodes, options === null || options === void 0 ? void 0 : options.source, options === null || options === void 0 ? void 0 : options.positions, options === null || options === void 0 ? void 0 : options.path, options === null || options === void 0 ? void 0 : options.originalError, options === null || options === void 0 ? void 0 : options.extensions);\n}\nexports.createGraphQLError = createGraphQLError;\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\nexports.relocatedError = relocatedError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLDBCQUEwQjtBQUNuRCxrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHNCQUFzQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXGVycm9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVsb2NhdGVkRXJyb3IgPSBleHBvcnRzLmNyZWF0ZUdyYXBoUUxFcnJvciA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gY3JlYXRlR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnMpIHtcbiAgICBpZiAoZ3JhcGhxbF8xLnZlcnNpb25JbmZvLm1ham9yID49IDE3KSB7XG4gICAgICAgIHJldHVybiBuZXcgZ3JhcGhxbF8xLkdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBncmFwaHFsXzEuR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5ub2Rlcywgb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnNvdXJjZSwgb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnBvc2l0aW9ucywgb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnBhdGgsIG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5vcmlnaW5hbEVycm9yLCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZXh0ZW5zaW9ucyk7XG59XG5leHBvcnRzLmNyZWF0ZUdyYXBoUUxFcnJvciA9IGNyZWF0ZUdyYXBoUUxFcnJvcjtcbmZ1bmN0aW9uIHJlbG9jYXRlZEVycm9yKG9yaWdpbmFsRXJyb3IsIHBhdGgpIHtcbiAgICByZXR1cm4gY3JlYXRlR3JhcGhRTEVycm9yKG9yaWdpbmFsRXJyb3IubWVzc2FnZSwge1xuICAgICAgICBub2Rlczogb3JpZ2luYWxFcnJvci5ub2RlcyxcbiAgICAgICAgc291cmNlOiBvcmlnaW5hbEVycm9yLnNvdXJjZSxcbiAgICAgICAgcG9zaXRpb25zOiBvcmlnaW5hbEVycm9yLnBvc2l0aW9ucyxcbiAgICAgICAgcGF0aDogcGF0aCA9PSBudWxsID8gb3JpZ2luYWxFcnJvci5wYXRoIDogcGF0aCxcbiAgICAgICAgb3JpZ2luYWxFcnJvcixcbiAgICAgICAgZXh0ZW5zaW9uczogb3JpZ2luYWxFcnJvci5leHRlbnNpb25zLFxuICAgIH0pO1xufVxuZXhwb3J0cy5yZWxvY2F0ZWRFcnJvciA9IHJlbG9jYXRlZEVycm9yO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/executor.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/executor.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZXhlY3V0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxleGVjdXRvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/executor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/fields.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/fields.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.modifyObjectFields = exports.selectObjectFields = exports.removeObjectFields = exports.appendObjectFields = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst Interfaces_js_1 = __webpack_require__(/*! ./Interfaces.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/Interfaces.js\");\nconst mapSchema_js_1 = __webpack_require__(/*! ./mapSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapSchema.js\");\nconst addTypes_js_1 = __webpack_require__(/*! ./addTypes.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/addTypes.js\");\nfunction appendObjectFields(schema, typeName, additionalFields) {\n    if (schema.getType(typeName) == null) {\n        return (0, addTypes_js_1.addTypes)(schema, [\n            new graphql_1.GraphQLObjectType({\n                name: typeName,\n                fields: additionalFields,\n            }),\n        ]);\n    }\n    return (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                const newFieldConfigMap = {};\n                for (const fieldName in originalFieldConfigMap) {\n                    newFieldConfigMap[fieldName] = originalFieldConfigMap[fieldName];\n                }\n                for (const fieldName in additionalFields) {\n                    newFieldConfigMap[fieldName] = additionalFields[fieldName];\n                }\n                return (0, mapSchema_js_1.correctASTNodes)(new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        },\n    });\n}\nexports.appendObjectFields = appendObjectFields;\nfunction removeObjectFields(schema, typeName, testFn) {\n    const removedFields = {};\n    const newSchema = (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                const newFieldConfigMap = {};\n                for (const fieldName in originalFieldConfigMap) {\n                    const originalFieldConfig = originalFieldConfigMap[fieldName];\n                    if (testFn(fieldName, originalFieldConfig)) {\n                        removedFields[fieldName] = originalFieldConfig;\n                    }\n                    else {\n                        newFieldConfigMap[fieldName] = originalFieldConfig;\n                    }\n                }\n                return (0, mapSchema_js_1.correctASTNodes)(new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        },\n    });\n    return [newSchema, removedFields];\n}\nexports.removeObjectFields = removeObjectFields;\nfunction selectObjectFields(schema, typeName, testFn) {\n    const selectedFields = {};\n    (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                for (const fieldName in originalFieldConfigMap) {\n                    const originalFieldConfig = originalFieldConfigMap[fieldName];\n                    if (testFn(fieldName, originalFieldConfig)) {\n                        selectedFields[fieldName] = originalFieldConfig;\n                    }\n                }\n            }\n            return undefined;\n        },\n    });\n    return selectedFields;\n}\nexports.selectObjectFields = selectObjectFields;\nfunction modifyObjectFields(schema, typeName, testFn, newFields) {\n    const removedFields = {};\n    const newSchema = (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                const newFieldConfigMap = {};\n                for (const fieldName in originalFieldConfigMap) {\n                    const originalFieldConfig = originalFieldConfigMap[fieldName];\n                    if (testFn(fieldName, originalFieldConfig)) {\n                        removedFields[fieldName] = originalFieldConfig;\n                    }\n                    else {\n                        newFieldConfigMap[fieldName] = originalFieldConfig;\n                    }\n                }\n                for (const fieldName in newFields) {\n                    const fieldConfig = newFields[fieldName];\n                    newFieldConfigMap[fieldName] = fieldConfig;\n                }\n                return (0, mapSchema_js_1.correctASTNodes)(new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        },\n    });\n    return [newSchema, removedFields];\n}\nexports.modifyObjectFields = modifyObjectFields;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/fields.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/filterSchema.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/filterSchema.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.filterSchema = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst Interfaces_js_1 = __webpack_require__(/*! ./Interfaces.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/Interfaces.js\");\nconst mapSchema_js_1 = __webpack_require__(/*! ./mapSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapSchema.js\");\nfunction filterSchema({ schema, typeFilter = () => true, fieldFilter = undefined, rootFieldFilter = undefined, objectFieldFilter = undefined, interfaceFieldFilter = undefined, inputObjectFieldFilter = undefined, argumentFilter = undefined, }) {\n    const filteredSchema = (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.QUERY]: (type) => filterRootFields(type, 'Query', rootFieldFilter, argumentFilter),\n        [Interfaces_js_1.MapperKind.MUTATION]: (type) => filterRootFields(type, 'Mutation', rootFieldFilter, argumentFilter),\n        [Interfaces_js_1.MapperKind.SUBSCRIPTION]: (type) => filterRootFields(type, 'Subscription', rootFieldFilter, argumentFilter),\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql_1.GraphQLObjectType, type, objectFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [Interfaces_js_1.MapperKind.INTERFACE_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql_1.GraphQLInterfaceType, type, interfaceFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [Interfaces_js_1.MapperKind.INPUT_OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql_1.GraphQLInputObjectType, type, inputObjectFieldFilter || fieldFilter)\n            : null,\n        [Interfaces_js_1.MapperKind.UNION_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n        [Interfaces_js_1.MapperKind.ENUM_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n        [Interfaces_js_1.MapperKind.SCALAR_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n    });\n    return filteredSchema;\n}\nexports.filterSchema = filterSchema;\nfunction filterRootFields(type, operation, rootFieldFilter, argumentFilter) {\n    if (rootFieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (rootFieldFilter && !rootFieldFilter(operation, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && field.args) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(operation, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new graphql_1.GraphQLObjectType(config);\n    }\n    return type;\n}\nfunction filterElementFields(ElementConstructor, type, fieldFilter, argumentFilter) {\n    if (fieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (fieldFilter && !fieldFilter(type.name, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && 'args' in field) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(type.name, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new ElementConstructor(config);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZmlsdGVyU2NoZW1hLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyx3QkFBd0IsbUJBQU8sQ0FBQyxvSEFBaUI7QUFDakQsdUJBQXVCLG1CQUFPLENBQUMsa0hBQWdCO0FBQy9DLHdCQUF3Qix5TkFBeU47QUFDalA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxmaWx0ZXJTY2hlbWEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZpbHRlclNjaGVtYSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgSW50ZXJmYWNlc19qc18xID0gcmVxdWlyZShcIi4vSW50ZXJmYWNlcy5qc1wiKTtcbmNvbnN0IG1hcFNjaGVtYV9qc18xID0gcmVxdWlyZShcIi4vbWFwU2NoZW1hLmpzXCIpO1xuZnVuY3Rpb24gZmlsdGVyU2NoZW1hKHsgc2NoZW1hLCB0eXBlRmlsdGVyID0gKCkgPT4gdHJ1ZSwgZmllbGRGaWx0ZXIgPSB1bmRlZmluZWQsIHJvb3RGaWVsZEZpbHRlciA9IHVuZGVmaW5lZCwgb2JqZWN0RmllbGRGaWx0ZXIgPSB1bmRlZmluZWQsIGludGVyZmFjZUZpZWxkRmlsdGVyID0gdW5kZWZpbmVkLCBpbnB1dE9iamVjdEZpZWxkRmlsdGVyID0gdW5kZWZpbmVkLCBhcmd1bWVudEZpbHRlciA9IHVuZGVmaW5lZCwgfSkge1xuICAgIGNvbnN0IGZpbHRlcmVkU2NoZW1hID0gKDAsIG1hcFNjaGVtYV9qc18xLm1hcFNjaGVtYSkoc2NoZW1hLCB7XG4gICAgICAgIFtJbnRlcmZhY2VzX2pzXzEuTWFwcGVyS2luZC5RVUVSWV06ICh0eXBlKSA9PiBmaWx0ZXJSb290RmllbGRzKHR5cGUsICdRdWVyeScsIHJvb3RGaWVsZEZpbHRlciwgYXJndW1lbnRGaWx0ZXIpLFxuICAgICAgICBbSW50ZXJmYWNlc19qc18xLk1hcHBlcktpbmQuTVVUQVRJT05dOiAodHlwZSkgPT4gZmlsdGVyUm9vdEZpZWxkcyh0eXBlLCAnTXV0YXRpb24nLCByb290RmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKSxcbiAgICAgICAgW0ludGVyZmFjZXNfanNfMS5NYXBwZXJLaW5kLlNVQlNDUklQVElPTl06ICh0eXBlKSA9PiBmaWx0ZXJSb290RmllbGRzKHR5cGUsICdTdWJzY3JpcHRpb24nLCByb290RmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKSxcbiAgICAgICAgW0ludGVyZmFjZXNfanNfMS5NYXBwZXJLaW5kLk9CSkVDVF9UWVBFXTogKHR5cGUpID0+IHR5cGVGaWx0ZXIodHlwZS5uYW1lLCB0eXBlKVxuICAgICAgICAgICAgPyBmaWx0ZXJFbGVtZW50RmllbGRzKGdyYXBocWxfMS5HcmFwaFFMT2JqZWN0VHlwZSwgdHlwZSwgb2JqZWN0RmllbGRGaWx0ZXIgfHwgZmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKVxuICAgICAgICAgICAgOiBudWxsLFxuICAgICAgICBbSW50ZXJmYWNlc19qc18xLk1hcHBlcktpbmQuSU5URVJGQUNFX1RZUEVdOiAodHlwZSkgPT4gdHlwZUZpbHRlcih0eXBlLm5hbWUsIHR5cGUpXG4gICAgICAgICAgICA/IGZpbHRlckVsZW1lbnRGaWVsZHMoZ3JhcGhxbF8xLkdyYXBoUUxJbnRlcmZhY2VUeXBlLCB0eXBlLCBpbnRlcmZhY2VGaWVsZEZpbHRlciB8fCBmaWVsZEZpbHRlciwgYXJndW1lbnRGaWx0ZXIpXG4gICAgICAgICAgICA6IG51bGwsXG4gICAgICAgIFtJbnRlcmZhY2VzX2pzXzEuTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfVFlQRV06ICh0eXBlKSA9PiB0eXBlRmlsdGVyKHR5cGUubmFtZSwgdHlwZSlcbiAgICAgICAgICAgID8gZmlsdGVyRWxlbWVudEZpZWxkcyhncmFwaHFsXzEuR3JhcGhRTElucHV0T2JqZWN0VHlwZSwgdHlwZSwgaW5wdXRPYmplY3RGaWVsZEZpbHRlciB8fCBmaWVsZEZpbHRlcilcbiAgICAgICAgICAgIDogbnVsbCxcbiAgICAgICAgW0ludGVyZmFjZXNfanNfMS5NYXBwZXJLaW5kLlVOSU9OX1RZUEVdOiAodHlwZSkgPT4gKHR5cGVGaWx0ZXIodHlwZS5uYW1lLCB0eXBlKSA/IHVuZGVmaW5lZCA6IG51bGwpLFxuICAgICAgICBbSW50ZXJmYWNlc19qc18xLk1hcHBlcktpbmQuRU5VTV9UWVBFXTogKHR5cGUpID0+ICh0eXBlRmlsdGVyKHR5cGUubmFtZSwgdHlwZSkgPyB1bmRlZmluZWQgOiBudWxsKSxcbiAgICAgICAgW0ludGVyZmFjZXNfanNfMS5NYXBwZXJLaW5kLlNDQUxBUl9UWVBFXTogKHR5cGUpID0+ICh0eXBlRmlsdGVyKHR5cGUubmFtZSwgdHlwZSkgPyB1bmRlZmluZWQgOiBudWxsKSxcbiAgICB9KTtcbiAgICByZXR1cm4gZmlsdGVyZWRTY2hlbWE7XG59XG5leHBvcnRzLmZpbHRlclNjaGVtYSA9IGZpbHRlclNjaGVtYTtcbmZ1bmN0aW9uIGZpbHRlclJvb3RGaWVsZHModHlwZSwgb3BlcmF0aW9uLCByb290RmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKSB7XG4gICAgaWYgKHJvb3RGaWVsZEZpbHRlciB8fCBhcmd1bWVudEZpbHRlcikge1xuICAgICAgICBjb25zdCBjb25maWcgPSB0eXBlLnRvQ29uZmlnKCk7XG4gICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGNvbmZpZy5maWVsZHMpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gY29uZmlnLmZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgaWYgKHJvb3RGaWVsZEZpbHRlciAmJiAhcm9vdEZpZWxkRmlsdGVyKG9wZXJhdGlvbiwgZmllbGROYW1lLCBjb25maWcuZmllbGRzW2ZpZWxkTmFtZV0pKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGNvbmZpZy5maWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGFyZ3VtZW50RmlsdGVyICYmIGZpZWxkLmFyZ3MpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGFyZ05hbWUgaW4gZmllbGQuYXJncykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWFyZ3VtZW50RmlsdGVyKG9wZXJhdGlvbiwgZmllbGROYW1lLCBhcmdOYW1lLCBmaWVsZC5hcmdzW2FyZ05hbWVdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGZpZWxkLmFyZ3NbYXJnTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBncmFwaHFsXzEuR3JhcGhRTE9iamVjdFR5cGUoY29uZmlnKTtcbiAgICB9XG4gICAgcmV0dXJuIHR5cGU7XG59XG5mdW5jdGlvbiBmaWx0ZXJFbGVtZW50RmllbGRzKEVsZW1lbnRDb25zdHJ1Y3RvciwgdHlwZSwgZmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKSB7XG4gICAgaWYgKGZpZWxkRmlsdGVyIHx8IGFyZ3VtZW50RmlsdGVyKSB7XG4gICAgICAgIGNvbnN0IGNvbmZpZyA9IHR5cGUudG9Db25maWcoKTtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gY29uZmlnLmZpZWxkcykge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBjb25maWcuZmllbGRzW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICBpZiAoZmllbGRGaWx0ZXIgJiYgIWZpZWxkRmlsdGVyKHR5cGUubmFtZSwgZmllbGROYW1lLCBjb25maWcuZmllbGRzW2ZpZWxkTmFtZV0pKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGNvbmZpZy5maWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGFyZ3VtZW50RmlsdGVyICYmICdhcmdzJyBpbiBmaWVsZCkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYXJnTmFtZSBpbiBmaWVsZC5hcmdzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghYXJndW1lbnRGaWx0ZXIodHlwZS5uYW1lLCBmaWVsZE5hbWUsIGFyZ05hbWUsIGZpZWxkLmFyZ3NbYXJnTmFtZV0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgZmllbGQuYXJnc1thcmdOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEVsZW1lbnRDb25zdHJ1Y3Rvcihjb25maWcpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/filterSchema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/fixSchemaAst.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/fixSchemaAst.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fixSchemaAst = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst print_schema_with_directives_js_1 = __webpack_require__(/*! ./print-schema-with-directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/print-schema-with-directives.js\");\nfunction buildFixedSchema(schema, options) {\n    const document = (0, print_schema_with_directives_js_1.getDocumentNodeFromSchema)(schema);\n    return (0, graphql_1.buildASTSchema)(document, {\n        ...(options || {}),\n    });\n}\nfunction fixSchemaAst(schema, options) {\n    // eslint-disable-next-line no-undef-init\n    let schemaWithValidAst = undefined;\n    if (!schema.astNode || !schema.extensionASTNodes) {\n        schemaWithValidAst = buildFixedSchema(schema, options);\n    }\n    if (!schema.astNode && (schemaWithValidAst === null || schemaWithValidAst === void 0 ? void 0 : schemaWithValidAst.astNode)) {\n        schema.astNode = schemaWithValidAst.astNode;\n    }\n    if (!schema.extensionASTNodes && (schemaWithValidAst === null || schemaWithValidAst === void 0 ? void 0 : schemaWithValidAst.astNode)) {\n        schema.extensionASTNodes = schemaWithValidAst.extensionASTNodes;\n    }\n    return schema;\n}\nexports.fixSchemaAst = fixSchemaAst;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZml4U2NoZW1hQXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQywwQ0FBMEMsbUJBQU8sQ0FBQyx3SkFBbUM7QUFDckY7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxmaXhTY2hlbWFBc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZpeFNjaGVtYUFzdCA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgcHJpbnRfc2NoZW1hX3dpdGhfZGlyZWN0aXZlc19qc18xID0gcmVxdWlyZShcIi4vcHJpbnQtc2NoZW1hLXdpdGgtZGlyZWN0aXZlcy5qc1wiKTtcbmZ1bmN0aW9uIGJ1aWxkRml4ZWRTY2hlbWEoc2NoZW1hLCBvcHRpb25zKSB7XG4gICAgY29uc3QgZG9jdW1lbnQgPSAoMCwgcHJpbnRfc2NoZW1hX3dpdGhfZGlyZWN0aXZlc19qc18xLmdldERvY3VtZW50Tm9kZUZyb21TY2hlbWEpKHNjaGVtYSk7XG4gICAgcmV0dXJuICgwLCBncmFwaHFsXzEuYnVpbGRBU1RTY2hlbWEpKGRvY3VtZW50LCB7XG4gICAgICAgIC4uLihvcHRpb25zIHx8IHt9KSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGZpeFNjaGVtYUFzdChzY2hlbWEsIG9wdGlvbnMpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYtaW5pdFxuICAgIGxldCBzY2hlbWFXaXRoVmFsaWRBc3QgPSB1bmRlZmluZWQ7XG4gICAgaWYgKCFzY2hlbWEuYXN0Tm9kZSB8fCAhc2NoZW1hLmV4dGVuc2lvbkFTVE5vZGVzKSB7XG4gICAgICAgIHNjaGVtYVdpdGhWYWxpZEFzdCA9IGJ1aWxkRml4ZWRTY2hlbWEoc2NoZW1hLCBvcHRpb25zKTtcbiAgICB9XG4gICAgaWYgKCFzY2hlbWEuYXN0Tm9kZSAmJiAoc2NoZW1hV2l0aFZhbGlkQXN0ID09PSBudWxsIHx8IHNjaGVtYVdpdGhWYWxpZEFzdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2NoZW1hV2l0aFZhbGlkQXN0LmFzdE5vZGUpKSB7XG4gICAgICAgIHNjaGVtYS5hc3ROb2RlID0gc2NoZW1hV2l0aFZhbGlkQXN0LmFzdE5vZGU7XG4gICAgfVxuICAgIGlmICghc2NoZW1hLmV4dGVuc2lvbkFTVE5vZGVzICYmIChzY2hlbWFXaXRoVmFsaWRBc3QgPT09IG51bGwgfHwgc2NoZW1hV2l0aFZhbGlkQXN0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzY2hlbWFXaXRoVmFsaWRBc3QuYXN0Tm9kZSkpIHtcbiAgICAgICAgc2NoZW1hLmV4dGVuc2lvbkFTVE5vZGVzID0gc2NoZW1hV2l0aFZhbGlkQXN0LmV4dGVuc2lvbkFTVE5vZGVzO1xuICAgIH1cbiAgICByZXR1cm4gc2NoZW1hO1xufVxuZXhwb3J0cy5maXhTY2hlbWFBc3QgPSBmaXhTY2hlbWFBc3Q7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/fixSchemaAst.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/forEachDefaultValue.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/forEachDefaultValue.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.forEachDefaultValue = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction forEachDefaultValue(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if (!(0, graphql_1.getNamedType)(type).name.startsWith('__')) {\n            if ((0, graphql_1.isObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    for (const arg of field.args) {\n                        arg.defaultValue = fn(arg.type, arg.defaultValue);\n                    }\n                }\n            }\n            else if ((0, graphql_1.isInputObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    field.defaultValue = fn(field.type, field.defaultValue);\n                }\n            }\n        }\n    }\n}\nexports.forEachDefaultValue = forEachDefaultValue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZm9yRWFjaERlZmF1bHRWYWx1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0Isa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcZm9yRWFjaERlZmF1bHRWYWx1ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZm9yRWFjaERlZmF1bHRWYWx1ZSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gZm9yRWFjaERlZmF1bHRWYWx1ZShzY2hlbWEsIGZuKSB7XG4gICAgY29uc3QgdHlwZU1hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiB0eXBlTWFwKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0eXBlTWFwW3R5cGVOYW1lXTtcbiAgICAgICAgaWYgKCEoMCwgZ3JhcGhxbF8xLmdldE5hbWVkVHlwZSkodHlwZSkubmFtZS5zdGFydHNXaXRoKCdfXycpKSB7XG4gICAgICAgICAgICBpZiAoKDAsIGdyYXBocWxfMS5pc09iamVjdFR5cGUpKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBhcmcgb2YgZmllbGQuYXJncykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJnLmRlZmF1bHRWYWx1ZSA9IGZuKGFyZy50eXBlLCBhcmcuZGVmYXVsdFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKCgwLCBncmFwaHFsXzEuaXNJbnB1dE9iamVjdFR5cGUpKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgZmllbGQuZGVmYXVsdFZhbHVlID0gZm4oZmllbGQudHlwZSwgZmllbGQuZGVmYXVsdFZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLmZvckVhY2hEZWZhdWx0VmFsdWUgPSBmb3JFYWNoRGVmYXVsdFZhbHVlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/forEachDefaultValue.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/forEachField.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/forEachField.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.forEachField = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction forEachField(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        // TODO: maybe have an option to include these?\n        if (!(0, graphql_1.getNamedType)(type).name.startsWith('__') && (0, graphql_1.isObjectType)(type)) {\n            const fields = type.getFields();\n            for (const fieldName in fields) {\n                const field = fields[fieldName];\n                fn(field, typeName, fieldName);\n            }\n        }\n    }\n}\nexports.forEachField = forEachField;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZm9yRWFjaEZpZWxkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcZm9yRWFjaEZpZWxkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mb3JFYWNoRmllbGQgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmZ1bmN0aW9uIGZvckVhY2hGaWVsZChzY2hlbWEsIGZuKSB7XG4gICAgY29uc3QgdHlwZU1hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiB0eXBlTWFwKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0eXBlTWFwW3R5cGVOYW1lXTtcbiAgICAgICAgLy8gVE9ETzogbWF5YmUgaGF2ZSBhbiBvcHRpb24gdG8gaW5jbHVkZSB0aGVzZT9cbiAgICAgICAgaWYgKCEoMCwgZ3JhcGhxbF8xLmdldE5hbWVkVHlwZSkodHlwZSkubmFtZS5zdGFydHNXaXRoKCdfXycpICYmICgwLCBncmFwaHFsXzEuaXNPYmplY3RUeXBlKSh0eXBlKSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgZm4oZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5mb3JFYWNoRmllbGQgPSBmb3JFYWNoRmllbGQ7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/forEachField.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-directives.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-directives.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getDirective = exports.getDirectives = exports.getDirectiveInExtensions = exports.getDirectivesInExtensions = void 0;\nconst getArgumentValues_js_1 = __webpack_require__(/*! ./getArgumentValues.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getArgumentValues.js\");\nfunction getDirectivesInExtensions(node, pathToDirectivesInExtensions = ['directives']) {\n    return pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node === null || node === void 0 ? void 0 : node.extensions);\n}\nexports.getDirectivesInExtensions = getDirectivesInExtensions;\nfunction _getDirectiveInExtensions(directivesInExtensions, directiveName) {\n    const directiveInExtensions = directivesInExtensions.filter(directiveAnnotation => directiveAnnotation.name === directiveName);\n    if (!directiveInExtensions.length) {\n        return undefined;\n    }\n    return directiveInExtensions.map(directive => { var _a; return (_a = directive.args) !== null && _a !== void 0 ? _a : {}; });\n}\nfunction getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node === null || node === void 0 ? void 0 : node.extensions);\n    if (directivesInExtensions === undefined) {\n        return undefined;\n    }\n    if (Array.isArray(directivesInExtensions)) {\n        return _getDirectiveInExtensions(directivesInExtensions, directiveName);\n    }\n    // Support condensed format by converting to longer format\n    // The condensed format does not preserve ordering of directives when  repeatable directives are used.\n    // See https://github.com/ardatan/graphql-tools/issues/2534\n    const reformattedDirectivesInExtensions = [];\n    for (const [name, argsOrArrayOfArgs] of Object.entries(directivesInExtensions)) {\n        if (Array.isArray(argsOrArrayOfArgs)) {\n            for (const args of argsOrArrayOfArgs) {\n                reformattedDirectivesInExtensions.push({ name, args });\n            }\n        }\n        else {\n            reformattedDirectivesInExtensions.push({ name, args: argsOrArrayOfArgs });\n        }\n    }\n    return _getDirectiveInExtensions(reformattedDirectivesInExtensions, directiveName);\n}\nexports.getDirectiveInExtensions = getDirectiveInExtensions;\nfunction getDirectives(schema, node, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = getDirectivesInExtensions(node, pathToDirectivesInExtensions);\n    if (directivesInExtensions != null && directivesInExtensions.length > 0) {\n        return directivesInExtensions;\n    }\n    const schemaDirectives = schema && schema.getDirectives ? schema.getDirectives() : [];\n    const schemaDirectiveMap = schemaDirectives.reduce((schemaDirectiveMap, schemaDirective) => {\n        schemaDirectiveMap[schemaDirective.name] = schemaDirective;\n        return schemaDirectiveMap;\n    }, {});\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                const schemaDirective = schemaDirectiveMap[directiveNode.name.value];\n                if (schemaDirective) {\n                    result.push({ name: directiveNode.name.value, args: (0, getArgumentValues_js_1.getArgumentValues)(schemaDirective, directiveNode) });\n                }\n            }\n        }\n    }\n    return result;\n}\nexports.getDirectives = getDirectives;\nfunction getDirective(schema, node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveInExtensions = getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions);\n    if (directiveInExtensions != null) {\n        return directiveInExtensions;\n    }\n    const schemaDirective = schema && schema.getDirective ? schema.getDirective(directiveName) : undefined;\n    if (schemaDirective == null) {\n        return undefined;\n    }\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                if (directiveNode.name.value === directiveName) {\n                    result.push((0, getArgumentValues_js_1.getArgumentValues)(schemaDirective, directiveNode));\n                }\n            }\n        }\n    }\n    if (!result.length) {\n        return undefined;\n    }\n    return result;\n}\nexports.getDirective = getDirective;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-directives.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-fields-with-directives.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-fields-with-directives.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getFieldsWithDirectives = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction parseDirectiveValue(value) {\n    switch (value.kind) {\n        case graphql_1.Kind.INT:\n            return parseInt(value.value);\n        case graphql_1.Kind.FLOAT:\n            return parseFloat(value.value);\n        case graphql_1.Kind.BOOLEAN:\n            return Boolean(value.value);\n        case graphql_1.Kind.STRING:\n        case graphql_1.Kind.ENUM:\n            return value.value;\n        case graphql_1.Kind.LIST:\n            return value.values.map(v => parseDirectiveValue(v));\n        case graphql_1.Kind.OBJECT:\n            return value.fields.reduce((prev, v) => ({ ...prev, [v.name.value]: parseDirectiveValue(v.value) }), {});\n        case graphql_1.Kind.NULL:\n            return null;\n        default:\n            return null;\n    }\n}\nfunction getFieldsWithDirectives(documentNode, options = {}) {\n    const result = {};\n    let selected = ['ObjectTypeDefinition', 'ObjectTypeExtension'];\n    if (options.includeInputTypes) {\n        selected = [...selected, 'InputObjectTypeDefinition', 'InputObjectTypeExtension'];\n    }\n    const allTypes = documentNode.definitions.filter(obj => selected.includes(obj.kind));\n    for (const type of allTypes) {\n        const typeName = type.name.value;\n        if (type.fields == null) {\n            continue;\n        }\n        for (const field of type.fields) {\n            if (field.directives && field.directives.length > 0) {\n                const fieldName = field.name.value;\n                const key = `${typeName}.${fieldName}`;\n                const directives = field.directives.map(d => ({\n                    name: d.name.value,\n                    args: (d.arguments || []).reduce((prev, arg) => ({ ...prev, [arg.name.value]: parseDirectiveValue(arg.value) }), {}),\n                }));\n                result[key] = directives;\n            }\n        }\n    }\n    return result;\n}\nexports.getFieldsWithDirectives = getFieldsWithDirectives;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZ2V0LWZpZWxkcy13aXRoLWRpcmVjdGl2ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsdURBQXVELEtBQUs7QUFDbkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsU0FBUyxHQUFHLFVBQVU7QUFDckQ7QUFDQTtBQUNBLHVFQUF1RSwyREFBMkQsS0FBSztBQUN2SSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcZ2V0LWZpZWxkcy13aXRoLWRpcmVjdGl2ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldEZpZWxkc1dpdGhEaXJlY3RpdmVzID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5mdW5jdGlvbiBwYXJzZURpcmVjdGl2ZVZhbHVlKHZhbHVlKSB7XG4gICAgc3dpdGNoICh2YWx1ZS5raW5kKSB7XG4gICAgICAgIGNhc2UgZ3JhcGhxbF8xLktpbmQuSU5UOlxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KHZhbHVlLnZhbHVlKTtcbiAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5GTE9BVDpcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHZhbHVlLnZhbHVlKTtcbiAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5CT09MRUFOOlxuICAgICAgICAgICAgcmV0dXJuIEJvb2xlYW4odmFsdWUudmFsdWUpO1xuICAgICAgICBjYXNlIGdyYXBocWxfMS5LaW5kLlNUUklORzpcbiAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5FTlVNOlxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnZhbHVlO1xuICAgICAgICBjYXNlIGdyYXBocWxfMS5LaW5kLkxJU1Q6XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUudmFsdWVzLm1hcCh2ID0+IHBhcnNlRGlyZWN0aXZlVmFsdWUodikpO1xuICAgICAgICBjYXNlIGdyYXBocWxfMS5LaW5kLk9CSkVDVDpcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5maWVsZHMucmVkdWNlKChwcmV2LCB2KSA9PiAoeyAuLi5wcmV2LCBbdi5uYW1lLnZhbHVlXTogcGFyc2VEaXJlY3RpdmVWYWx1ZSh2LnZhbHVlKSB9KSwge30pO1xuICAgICAgICBjYXNlIGdyYXBocWxfMS5LaW5kLk5VTEw6XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGdldEZpZWxkc1dpdGhEaXJlY3RpdmVzKGRvY3VtZW50Tm9kZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgbGV0IHNlbGVjdGVkID0gWydPYmplY3RUeXBlRGVmaW5pdGlvbicsICdPYmplY3RUeXBlRXh0ZW5zaW9uJ107XG4gICAgaWYgKG9wdGlvbnMuaW5jbHVkZUlucHV0VHlwZXMpIHtcbiAgICAgICAgc2VsZWN0ZWQgPSBbLi4uc2VsZWN0ZWQsICdJbnB1dE9iamVjdFR5cGVEZWZpbml0aW9uJywgJ0lucHV0T2JqZWN0VHlwZUV4dGVuc2lvbiddO1xuICAgIH1cbiAgICBjb25zdCBhbGxUeXBlcyA9IGRvY3VtZW50Tm9kZS5kZWZpbml0aW9ucy5maWx0ZXIob2JqID0+IHNlbGVjdGVkLmluY2x1ZGVzKG9iai5raW5kKSk7XG4gICAgZm9yIChjb25zdCB0eXBlIG9mIGFsbFR5cGVzKSB7XG4gICAgICAgIGNvbnN0IHR5cGVOYW1lID0gdHlwZS5uYW1lLnZhbHVlO1xuICAgICAgICBpZiAodHlwZS5maWVsZHMgPT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBmaWVsZCBvZiB0eXBlLmZpZWxkcykge1xuICAgICAgICAgICAgaWYgKGZpZWxkLmRpcmVjdGl2ZXMgJiYgZmllbGQuZGlyZWN0aXZlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGROYW1lID0gZmllbGQubmFtZS52YWx1ZTtcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBgJHt0eXBlTmFtZX0uJHtmaWVsZE5hbWV9YDtcbiAgICAgICAgICAgICAgICBjb25zdCBkaXJlY3RpdmVzID0gZmllbGQuZGlyZWN0aXZlcy5tYXAoZCA9PiAoe1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBkLm5hbWUudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIGFyZ3M6IChkLmFyZ3VtZW50cyB8fCBbXSkucmVkdWNlKChwcmV2LCBhcmcpID0+ICh7IC4uLnByZXYsIFthcmcubmFtZS52YWx1ZV06IHBhcnNlRGlyZWN0aXZlVmFsdWUoYXJnLnZhbHVlKSB9KSwge30pLFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IGRpcmVjdGl2ZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuZ2V0RmllbGRzV2l0aERpcmVjdGl2ZXMgPSBnZXRGaWVsZHNXaXRoRGlyZWN0aXZlcztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-fields-with-directives.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-implementing-types.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-implementing-types.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getImplementingTypes = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction getImplementingTypes(interfaceName, schema) {\n    const allTypesMap = schema.getTypeMap();\n    const result = [];\n    for (const graphqlTypeName in allTypesMap) {\n        const graphqlType = allTypesMap[graphqlTypeName];\n        if ((0, graphql_1.isObjectType)(graphqlType)) {\n            const allInterfaces = graphqlType.getInterfaces();\n            if (allInterfaces.find(int => int.name === interfaceName)) {\n                result.push(graphqlType.name);\n            }\n        }\n    }\n    return result;\n}\nexports.getImplementingTypes = getImplementingTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZ2V0LWltcGxlbWVudGluZy10eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXGdldC1pbXBsZW1lbnRpbmctdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldEltcGxlbWVudGluZ1R5cGVzID0gdm9pZCAwO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5mdW5jdGlvbiBnZXRJbXBsZW1lbnRpbmdUeXBlcyhpbnRlcmZhY2VOYW1lLCBzY2hlbWEpIHtcbiAgICBjb25zdCBhbGxUeXBlc01hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgZm9yIChjb25zdCBncmFwaHFsVHlwZU5hbWUgaW4gYWxsVHlwZXNNYXApIHtcbiAgICAgICAgY29uc3QgZ3JhcGhxbFR5cGUgPSBhbGxUeXBlc01hcFtncmFwaHFsVHlwZU5hbWVdO1xuICAgICAgICBpZiAoKDAsIGdyYXBocWxfMS5pc09iamVjdFR5cGUpKGdyYXBocWxUeXBlKSkge1xuICAgICAgICAgICAgY29uc3QgYWxsSW50ZXJmYWNlcyA9IGdyYXBocWxUeXBlLmdldEludGVyZmFjZXMoKTtcbiAgICAgICAgICAgIGlmIChhbGxJbnRlcmZhY2VzLmZpbmQoaW50ID0+IGludC5uYW1lID09PSBpbnRlcmZhY2VOYW1lKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGdyYXBocWxUeXBlLm5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmdldEltcGxlbWVudGluZ1R5cGVzID0gZ2V0SW1wbGVtZW50aW5nVHlwZXM7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-implementing-types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getArgumentValues.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getArgumentValues.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getArgumentValues = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst errors_js_1 = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/errors.js\");\nconst inspect_js_1 = __webpack_require__(/*! ./inspect.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/inspect.js\");\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues = {}) {\n    var _a;\n    const variableMap = Object.entries(variableValues).reduce((prev, [key, value]) => ({\n        ...prev,\n        [key]: value,\n    }), {});\n    const coercedValues = {};\n    const argumentNodes = (_a = node.arguments) !== null && _a !== void 0 ? _a : [];\n    const argNodeMap = argumentNodes.reduce((prev, arg) => ({\n        ...prev,\n        [arg.name.value]: arg,\n    }), {});\n    for (const { name, type: argType, defaultValue } of def.args) {\n        const argumentNode = argNodeMap[name];\n        if (!argumentNode) {\n            if (defaultValue !== undefined) {\n                coercedValues[name] = defaultValue;\n            }\n            else if ((0, graphql_1.isNonNullType)(argType)) {\n                throw (0, errors_js_1.createGraphQLError)(`Argument \"${name}\" of required type \"${(0, inspect_js_1.inspect)(argType)}\" ` + 'was not provided.', {\n                    nodes: [node],\n                });\n            }\n            continue;\n        }\n        const valueNode = argumentNode.value;\n        let isNull = valueNode.kind === graphql_1.Kind.NULL;\n        if (valueNode.kind === graphql_1.Kind.VARIABLE) {\n            const variableName = valueNode.name.value;\n            if (variableValues == null || variableMap[variableName] == null) {\n                if (defaultValue !== undefined) {\n                    coercedValues[name] = defaultValue;\n                }\n                else if ((0, graphql_1.isNonNullType)(argType)) {\n                    throw (0, errors_js_1.createGraphQLError)(`Argument \"${name}\" of required type \"${(0, inspect_js_1.inspect)(argType)}\" ` +\n                        `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, {\n                        nodes: [valueNode],\n                    });\n                }\n                continue;\n            }\n            isNull = variableValues[variableName] == null;\n        }\n        if (isNull && (0, graphql_1.isNonNullType)(argType)) {\n            throw (0, errors_js_1.createGraphQLError)(`Argument \"${name}\" of non-null type \"${(0, inspect_js_1.inspect)(argType)}\" ` + 'must not be null.', {\n                nodes: [valueNode],\n            });\n        }\n        const coercedValue = (0, graphql_1.valueFromAST)(valueNode, argType, variableValues);\n        if (coercedValue === undefined) {\n            // Note: ValuesOfCorrectTypeRule validation should catch this before\n            // execution. This is a runtime check to ensure execution does not\n            // continue with an invalid argument value.\n            throw (0, errors_js_1.createGraphQLError)(`Argument \"${name}\" has invalid value ${(0, graphql_1.print)(valueNode)}.`, {\n                nodes: [valueNode],\n            });\n        }\n        coercedValues[name] = coercedValue;\n    }\n    return coercedValues;\n}\nexports.getArgumentValues = getArgumentValues;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZ2V0QXJndW1lbnRWYWx1ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDRHQUFhO0FBQ3pDLHFCQUFxQixtQkFBTyxDQUFDLDhHQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQ7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLEtBQUs7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxLQUFLO0FBQ1YsaUJBQWlCLG9DQUFvQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsS0FBSyxzQkFBc0IsbUNBQW1DO0FBQ3JJO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxLQUFLLHNCQUFzQixtQ0FBbUM7QUFDekksdURBQXVELGFBQWE7QUFDcEU7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLEtBQUssc0JBQXNCLG1DQUFtQztBQUNqSTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsS0FBSyxzQkFBc0IsZ0NBQWdDO0FBQzlIO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxnZXRBcmd1bWVudFZhbHVlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0QXJndW1lbnRWYWx1ZXMgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4vZXJyb3JzLmpzXCIpO1xuY29uc3QgaW5zcGVjdF9qc18xID0gcmVxdWlyZShcIi4vaW5zcGVjdC5qc1wiKTtcbi8qKlxuICogUHJlcGFyZXMgYW4gb2JqZWN0IG1hcCBvZiBhcmd1bWVudCB2YWx1ZXMgZ2l2ZW4gYSBsaXN0IG9mIGFyZ3VtZW50XG4gKiBkZWZpbml0aW9ucyBhbmQgbGlzdCBvZiBhcmd1bWVudCBBU1Qgbm9kZXMuXG4gKlxuICogTm90ZTogVGhlIHJldHVybmVkIHZhbHVlIGlzIGEgcGxhaW4gT2JqZWN0IHdpdGggYSBwcm90b3R5cGUsIHNpbmNlIGl0IGlzXG4gKiBleHBvc2VkIHRvIHVzZXIgY29kZS4gQ2FyZSBzaG91bGQgYmUgdGFrZW4gdG8gbm90IHB1bGwgdmFsdWVzIGZyb20gdGhlXG4gKiBPYmplY3QgcHJvdG90eXBlLlxuICovXG5mdW5jdGlvbiBnZXRBcmd1bWVudFZhbHVlcyhkZWYsIG5vZGUsIHZhcmlhYmxlVmFsdWVzID0ge30pIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgdmFyaWFibGVNYXAgPSBPYmplY3QuZW50cmllcyh2YXJpYWJsZVZhbHVlcykucmVkdWNlKChwcmV2LCBba2V5LCB2YWx1ZV0pID0+ICh7XG4gICAgICAgIC4uLnByZXYsXG4gICAgICAgIFtrZXldOiB2YWx1ZSxcbiAgICB9KSwge30pO1xuICAgIGNvbnN0IGNvZXJjZWRWYWx1ZXMgPSB7fTtcbiAgICBjb25zdCBhcmd1bWVudE5vZGVzID0gKF9hID0gbm9kZS5hcmd1bWVudHMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgIGNvbnN0IGFyZ05vZGVNYXAgPSBhcmd1bWVudE5vZGVzLnJlZHVjZSgocHJldiwgYXJnKSA9PiAoe1xuICAgICAgICAuLi5wcmV2LFxuICAgICAgICBbYXJnLm5hbWUudmFsdWVdOiBhcmcsXG4gICAgfSksIHt9KTtcbiAgICBmb3IgKGNvbnN0IHsgbmFtZSwgdHlwZTogYXJnVHlwZSwgZGVmYXVsdFZhbHVlIH0gb2YgZGVmLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgYXJndW1lbnROb2RlID0gYXJnTm9kZU1hcFtuYW1lXTtcbiAgICAgICAgaWYgKCFhcmd1bWVudE5vZGUpIHtcbiAgICAgICAgICAgIGlmIChkZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGNvZXJjZWRWYWx1ZXNbbmFtZV0gPSBkZWZhdWx0VmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICgoMCwgZ3JhcGhxbF8xLmlzTm9uTnVsbFR5cGUpKGFyZ1R5cGUpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgKDAsIGVycm9yc19qc18xLmNyZWF0ZUdyYXBoUUxFcnJvcikoYEFyZ3VtZW50IFwiJHtuYW1lfVwiIG9mIHJlcXVpcmVkIHR5cGUgXCIkeygwLCBpbnNwZWN0X2pzXzEuaW5zcGVjdCkoYXJnVHlwZSl9XCIgYCArICd3YXMgbm90IHByb3ZpZGVkLicsIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZXM6IFtub2RlXSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlTm9kZSA9IGFyZ3VtZW50Tm9kZS52YWx1ZTtcbiAgICAgICAgbGV0IGlzTnVsbCA9IHZhbHVlTm9kZS5raW5kID09PSBncmFwaHFsXzEuS2luZC5OVUxMO1xuICAgICAgICBpZiAodmFsdWVOb2RlLmtpbmQgPT09IGdyYXBocWxfMS5LaW5kLlZBUklBQkxFKSB7XG4gICAgICAgICAgICBjb25zdCB2YXJpYWJsZU5hbWUgPSB2YWx1ZU5vZGUubmFtZS52YWx1ZTtcbiAgICAgICAgICAgIGlmICh2YXJpYWJsZVZhbHVlcyA9PSBudWxsIHx8IHZhcmlhYmxlTWFwW3ZhcmlhYmxlTmFtZV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb2VyY2VkVmFsdWVzW25hbWVdID0gZGVmYXVsdFZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICgoMCwgZ3JhcGhxbF8xLmlzTm9uTnVsbFR5cGUpKGFyZ1R5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93ICgwLCBlcnJvcnNfanNfMS5jcmVhdGVHcmFwaFFMRXJyb3IpKGBBcmd1bWVudCBcIiR7bmFtZX1cIiBvZiByZXF1aXJlZCB0eXBlIFwiJHsoMCwgaW5zcGVjdF9qc18xLmluc3BlY3QpKGFyZ1R5cGUpfVwiIGAgK1xuICAgICAgICAgICAgICAgICAgICAgICAgYHdhcyBwcm92aWRlZCB0aGUgdmFyaWFibGUgXCIkJHt2YXJpYWJsZU5hbWV9XCIgd2hpY2ggd2FzIG5vdCBwcm92aWRlZCBhIHJ1bnRpbWUgdmFsdWUuYCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZXM6IFt2YWx1ZU5vZGVdLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpc051bGwgPSB2YXJpYWJsZVZhbHVlc1t2YXJpYWJsZU5hbWVdID09IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzTnVsbCAmJiAoMCwgZ3JhcGhxbF8xLmlzTm9uTnVsbFR5cGUpKGFyZ1R5cGUpKSB7XG4gICAgICAgICAgICB0aHJvdyAoMCwgZXJyb3JzX2pzXzEuY3JlYXRlR3JhcGhRTEVycm9yKShgQXJndW1lbnQgXCIke25hbWV9XCIgb2Ygbm9uLW51bGwgdHlwZSBcIiR7KDAsIGluc3BlY3RfanNfMS5pbnNwZWN0KShhcmdUeXBlKX1cIiBgICsgJ211c3Qgbm90IGJlIG51bGwuJywge1xuICAgICAgICAgICAgICAgIG5vZGVzOiBbdmFsdWVOb2RlXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvZXJjZWRWYWx1ZSA9ICgwLCBncmFwaHFsXzEudmFsdWVGcm9tQVNUKSh2YWx1ZU5vZGUsIGFyZ1R5cGUsIHZhcmlhYmxlVmFsdWVzKTtcbiAgICAgICAgaWYgKGNvZXJjZWRWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyBOb3RlOiBWYWx1ZXNPZkNvcnJlY3RUeXBlUnVsZSB2YWxpZGF0aW9uIHNob3VsZCBjYXRjaCB0aGlzIGJlZm9yZVxuICAgICAgICAgICAgLy8gZXhlY3V0aW9uLiBUaGlzIGlzIGEgcnVudGltZSBjaGVjayB0byBlbnN1cmUgZXhlY3V0aW9uIGRvZXMgbm90XG4gICAgICAgICAgICAvLyBjb250aW51ZSB3aXRoIGFuIGludmFsaWQgYXJndW1lbnQgdmFsdWUuXG4gICAgICAgICAgICB0aHJvdyAoMCwgZXJyb3JzX2pzXzEuY3JlYXRlR3JhcGhRTEVycm9yKShgQXJndW1lbnQgXCIke25hbWV9XCIgaGFzIGludmFsaWQgdmFsdWUgJHsoMCwgZ3JhcGhxbF8xLnByaW50KSh2YWx1ZU5vZGUpfS5gLCB7XG4gICAgICAgICAgICAgICAgbm9kZXM6IFt2YWx1ZU5vZGVdLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29lcmNlZFZhbHVlc1tuYW1lXSA9IGNvZXJjZWRWYWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZWRWYWx1ZXM7XG59XG5leHBvcnRzLmdldEFyZ3VtZW50VmFsdWVzID0gZ2V0QXJndW1lbnRWYWx1ZXM7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getArgumentValues.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getObjectTypeFromTypeMap.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getObjectTypeFromTypeMap.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getObjectTypeFromTypeMap = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if ((0, graphql_1.isObjectType)(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\nexports.getObjectTypeFromTypeMap = getObjectTypeFromTypeMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQztBQUNoQyxrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmZ1bmN0aW9uIGdldE9iamVjdFR5cGVGcm9tVHlwZU1hcCh0eXBlTWFwLCB0eXBlKSB7XG4gICAgaWYgKHR5cGUpIHtcbiAgICAgICAgY29uc3QgbWF5YmVPYmplY3RUeXBlID0gdHlwZU1hcFt0eXBlLm5hbWVdO1xuICAgICAgICBpZiAoKDAsIGdyYXBocWxfMS5pc09iamVjdFR5cGUpKG1heWJlT2JqZWN0VHlwZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBtYXliZU9iamVjdFR5cGU7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLmdldE9iamVjdFR5cGVGcm9tVHlwZU1hcCA9IGdldE9iamVjdFR5cGVGcm9tVHlwZU1hcDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getObjectTypeFromTypeMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getOperationASTFromRequest.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getOperationASTFromRequest.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getOperationASTFromRequest = exports.getOperationASTFromDocument = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst memoize_js_1 = __webpack_require__(/*! ./memoize.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/memoize.js\");\nfunction getOperationASTFromDocument(documentNode, operationName) {\n    const doc = (0, graphql_1.getOperationAST)(documentNode, operationName);\n    if (!doc) {\n        throw new Error(`Cannot infer operation ${operationName || ''}`);\n    }\n    return doc;\n}\nexports.getOperationASTFromDocument = getOperationASTFromDocument;\nexports.getOperationASTFromRequest = (0, memoize_js_1.memoize1)(function getOperationASTFromRequest(request) {\n    return getOperationASTFromDocument(request.document, request.operationName);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDLEdBQUcsbUNBQW1DO0FBQ3hFLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLHFCQUFxQixtQkFBTyxDQUFDLDhHQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxvQkFBb0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DLGtDQUFrQztBQUNsQztBQUNBLENBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxnZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QgPSBleHBvcnRzLmdldE9wZXJhdGlvbkFTVEZyb21Eb2N1bWVudCA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgbWVtb2l6ZV9qc18xID0gcmVxdWlyZShcIi4vbWVtb2l6ZS5qc1wiKTtcbmZ1bmN0aW9uIGdldE9wZXJhdGlvbkFTVEZyb21Eb2N1bWVudChkb2N1bWVudE5vZGUsIG9wZXJhdGlvbk5hbWUpIHtcbiAgICBjb25zdCBkb2MgPSAoMCwgZ3JhcGhxbF8xLmdldE9wZXJhdGlvbkFTVCkoZG9jdW1lbnROb2RlLCBvcGVyYXRpb25OYW1lKTtcbiAgICBpZiAoIWRvYykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBpbmZlciBvcGVyYXRpb24gJHtvcGVyYXRpb25OYW1lIHx8ICcnfWApO1xuICAgIH1cbiAgICByZXR1cm4gZG9jO1xufVxuZXhwb3J0cy5nZXRPcGVyYXRpb25BU1RGcm9tRG9jdW1lbnQgPSBnZXRPcGVyYXRpb25BU1RGcm9tRG9jdW1lbnQ7XG5leHBvcnRzLmdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0ID0gKDAsIG1lbW9pemVfanNfMS5tZW1vaXplMSkoZnVuY3Rpb24gZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QocmVxdWVzdCkge1xuICAgIHJldHVybiBnZXRPcGVyYXRpb25BU1RGcm9tRG9jdW1lbnQocmVxdWVzdC5kb2N1bWVudCwgcmVxdWVzdC5vcGVyYXRpb25OYW1lKTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getOperationASTFromRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getResolversFromSchema.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getResolversFromSchema.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getResolversFromSchema = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction getResolversFromSchema(schema, \n// Include default merged resolvers\nincludeDefaultMergedResolver) {\n    var _a, _b;\n    const resolvers = Object.create(null);\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        if (!typeName.startsWith('__')) {\n            const type = typeMap[typeName];\n            if ((0, graphql_1.isScalarType)(type)) {\n                if (!(0, graphql_1.isSpecifiedScalarType)(type)) {\n                    const config = type.toConfig();\n                    delete config.astNode; // avoid AST duplication elsewhere\n                    resolvers[typeName] = new graphql_1.GraphQLScalarType(config);\n                }\n            }\n            else if ((0, graphql_1.isEnumType)(type)) {\n                resolvers[typeName] = {};\n                const values = type.getValues();\n                for (const value of values) {\n                    resolvers[typeName][value.name] = value.value;\n                }\n            }\n            else if ((0, graphql_1.isInterfaceType)(type)) {\n                if (type.resolveType != null) {\n                    resolvers[typeName] = {\n                        __resolveType: type.resolveType,\n                    };\n                }\n            }\n            else if ((0, graphql_1.isUnionType)(type)) {\n                if (type.resolveType != null) {\n                    resolvers[typeName] = {\n                        __resolveType: type.resolveType,\n                    };\n                }\n            }\n            else if ((0, graphql_1.isObjectType)(type)) {\n                resolvers[typeName] = {};\n                if (type.isTypeOf != null) {\n                    resolvers[typeName].__isTypeOf = type.isTypeOf;\n                }\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    if (field.subscribe != null) {\n                        resolvers[typeName][fieldName] = resolvers[typeName][fieldName] || {};\n                        resolvers[typeName][fieldName].subscribe = field.subscribe;\n                    }\n                    if (field.resolve != null && ((_a = field.resolve) === null || _a === void 0 ? void 0 : _a.name) !== 'defaultFieldResolver') {\n                        switch ((_b = field.resolve) === null || _b === void 0 ? void 0 : _b.name) {\n                            case 'defaultMergedResolver':\n                                if (!includeDefaultMergedResolver) {\n                                    continue;\n                                }\n                                break;\n                            case 'defaultFieldResolver':\n                                continue;\n                        }\n                        resolvers[typeName][fieldName] = resolvers[typeName][fieldName] || {};\n                        resolvers[typeName][fieldName].resolve = field.resolve;\n                    }\n                }\n            }\n        }\n    }\n    return resolvers;\n}\nexports.getResolversFromSchema = getResolversFromSchema;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZ2V0UmVzb2x2ZXJzRnJvbVNjaGVtYS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUIsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcZ2V0UmVzb2x2ZXJzRnJvbVNjaGVtYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0UmVzb2x2ZXJzRnJvbVNjaGVtYSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gZ2V0UmVzb2x2ZXJzRnJvbVNjaGVtYShzY2hlbWEsIFxuLy8gSW5jbHVkZSBkZWZhdWx0IG1lcmdlZCByZXNvbHZlcnNcbmluY2x1ZGVEZWZhdWx0TWVyZ2VkUmVzb2x2ZXIpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHJlc29sdmVycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgY29uc3QgdHlwZU1hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiB0eXBlTWFwKSB7XG4gICAgICAgIGlmICghdHlwZU5hbWUuc3RhcnRzV2l0aCgnX18nKSkge1xuICAgICAgICAgICAgY29uc3QgdHlwZSA9IHR5cGVNYXBbdHlwZU5hbWVdO1xuICAgICAgICAgICAgaWYgKCgwLCBncmFwaHFsXzEuaXNTY2FsYXJUeXBlKSh0eXBlKSkge1xuICAgICAgICAgICAgICAgIGlmICghKDAsIGdyYXBocWxfMS5pc1NwZWNpZmllZFNjYWxhclR5cGUpKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IHR5cGUudG9Db25maWcoKTtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGNvbmZpZy5hc3ROb2RlOyAvLyBhdm9pZCBBU1QgZHVwbGljYXRpb24gZWxzZXdoZXJlXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlTmFtZV0gPSBuZXcgZ3JhcGhxbF8xLkdyYXBoUUxTY2FsYXJUeXBlKGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoKDAsIGdyYXBocWxfMS5pc0VudW1UeXBlKSh0eXBlKSkge1xuICAgICAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlTmFtZV0gPSB7fTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZXMgPSB0eXBlLmdldFZhbHVlcygpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlTmFtZV1bdmFsdWUubmFtZV0gPSB2YWx1ZS52YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICgoMCwgZ3JhcGhxbF8xLmlzSW50ZXJmYWNlVHlwZSkodHlwZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZS5yZXNvbHZlVHlwZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfX3Jlc29sdmVUeXBlOiB0eXBlLnJlc29sdmVUeXBlLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKCgwLCBncmFwaHFsXzEuaXNVbmlvblR5cGUpKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGUucmVzb2x2ZVR5cGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgX19yZXNvbHZlVHlwZTogdHlwZS5yZXNvbHZlVHlwZSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICgoMCwgZ3JhcGhxbF8xLmlzT2JqZWN0VHlwZSkodHlwZSkpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdID0ge307XG4gICAgICAgICAgICAgICAgaWYgKHR5cGUuaXNUeXBlT2YgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdLl9faXNUeXBlT2YgPSB0eXBlLmlzVHlwZU9mO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGQuc3Vic2NyaWJlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlTmFtZV1bZmllbGROYW1lXSA9IHJlc29sdmVyc1t0eXBlTmFtZV1bZmllbGROYW1lXSB8fCB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlTmFtZV1bZmllbGROYW1lXS5zdWJzY3JpYmUgPSBmaWVsZC5zdWJzY3JpYmU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkLnJlc29sdmUgIT0gbnVsbCAmJiAoKF9hID0gZmllbGQucmVzb2x2ZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5hbWUpICE9PSAnZGVmYXVsdEZpZWxkUmVzb2x2ZXInKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKChfYiA9IGZpZWxkLnJlc29sdmUpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5uYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnZGVmYXVsdE1lcmdlZFJlc29sdmVyJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpbmNsdWRlRGVmYXVsdE1lcmdlZFJlc29sdmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdkZWZhdWx0RmllbGRSZXNvbHZlcic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZXJzW3R5cGVOYW1lXVtmaWVsZE5hbWVdID0gcmVzb2x2ZXJzW3R5cGVOYW1lXVtmaWVsZE5hbWVdIHx8IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZXJzW3R5cGVOYW1lXVtmaWVsZE5hbWVdLnJlc29sdmUgPSBmaWVsZC5yZXNvbHZlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXNvbHZlcnM7XG59XG5leHBvcnRzLmdldFJlc29sdmVyc0Zyb21TY2hlbWEgPSBnZXRSZXNvbHZlcnNGcm9tU2NoZW1hO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getResolversFromSchema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getResponseKeyFromInfo.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getResponseKeyFromInfo.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getResponseKeyFromInfo = void 0;\n/**\n * Get the key under which the result of this resolver will be placed in the response JSON. Basically, just\n * resolves aliases.\n * @param info The info argument to the resolver.\n */\nfunction getResponseKeyFromInfo(info) {\n    return info.fieldNodes[0].alias != null ? info.fieldNodes[0].alias.value : info.fieldName;\n}\nexports.getResponseKeyFromInfo = getResponseKeyFromInfo;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvZ2V0UmVzcG9uc2VLZXlGcm9tSW5mby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXGdldFJlc3BvbnNlS2V5RnJvbUluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFJlc3BvbnNlS2V5RnJvbUluZm8gPSB2b2lkIDA7XG4vKipcbiAqIEdldCB0aGUga2V5IHVuZGVyIHdoaWNoIHRoZSByZXN1bHQgb2YgdGhpcyByZXNvbHZlciB3aWxsIGJlIHBsYWNlZCBpbiB0aGUgcmVzcG9uc2UgSlNPTi4gQmFzaWNhbGx5LCBqdXN0XG4gKiByZXNvbHZlcyBhbGlhc2VzLlxuICogQHBhcmFtIGluZm8gVGhlIGluZm8gYXJndW1lbnQgdG8gdGhlIHJlc29sdmVyLlxuICovXG5mdW5jdGlvbiBnZXRSZXNwb25zZUtleUZyb21JbmZvKGluZm8pIHtcbiAgICByZXR1cm4gaW5mby5maWVsZE5vZGVzWzBdLmFsaWFzICE9IG51bGwgPyBpbmZvLmZpZWxkTm9kZXNbMF0uYWxpYXMudmFsdWUgOiBpbmZvLmZpZWxkTmFtZTtcbn1cbmV4cG9ydHMuZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbyA9IGdldFJlc3BvbnNlS2V5RnJvbUluZm87XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getResponseKeyFromInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/heal.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/heal.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.healTypes = exports.healSchema = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\n// Update any references to named schema types that disagree with the named\n// types found in schema.getTypeMap().\n//\n// healSchema and its callers (visitSchema/visitSchemaDirectives) all modify the schema in place.\n// Therefore, private variables (such as the stored implementation map and the proper root types)\n// are not updated.\n//\n// If this causes issues, the schema could be more aggressively healed as follows:\n//\n// healSchema(schema);\n// const config = schema.toConfig()\n// const healedSchema = new GraphQLSchema({\n//   ...config,\n//   query: schema.getType('<desired new root query type name>'),\n//   mutation: schema.getType('<desired new root mutation type name>'),\n//   subscription: schema.getType('<desired new root subscription type name>'),\n// });\n//\n// One can then also -- if necessary --  assign the correct private variables to the initial schema\n// as follows:\n// Object.assign(schema, healedSchema);\n//\n// These steps are not taken automatically to preserve backwards compatibility with graphql-tools v4.\n// See https://github.com/ardatan/graphql-tools/issues/1462\n//\n// They were briefly taken in v5, but can now be phased out as they were only required when other\n// areas of the codebase were using healSchema and visitSchema more extensively.\n//\nfunction healSchema(schema) {\n    healTypes(schema.getTypeMap(), schema.getDirectives());\n    return schema;\n}\nexports.healSchema = healSchema;\nfunction healTypes(originalTypeMap, directives) {\n    const actualNamedTypeMap = Object.create(null);\n    // If any of the .name properties of the GraphQLNamedType objects in\n    // schema.getTypeMap() have changed, the keys of the type map need to\n    // be updated accordingly.\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const actualName = namedType.name;\n        if (actualName.startsWith('__')) {\n            continue;\n        }\n        if (actualName in actualNamedTypeMap) {\n            throw new Error(`Duplicate schema type name ${actualName}`);\n        }\n        actualNamedTypeMap[actualName] = namedType;\n        // Note: we are deliberately leaving namedType in the schema by its\n        // original name (which might be different from actualName), so that\n        // references by that name can be healed.\n    }\n    // Now add back every named type by its actual name.\n    for (const typeName in actualNamedTypeMap) {\n        const namedType = actualNamedTypeMap[typeName];\n        originalTypeMap[typeName] = namedType;\n    }\n    // Directive declaration argument types can refer to named types.\n    for (const decl of directives) {\n        decl.args = decl.args.filter(arg => {\n            arg.type = healType(arg.type);\n            return arg.type !== null;\n        });\n    }\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        // Heal all named types, except for dangling references, kept only to redirect.\n        if (!typeName.startsWith('__') && typeName in actualNamedTypeMap) {\n            if (namedType != null) {\n                healNamedType(namedType);\n            }\n        }\n    }\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__') && !(typeName in actualNamedTypeMap)) {\n            delete originalTypeMap[typeName];\n        }\n    }\n    function healNamedType(type) {\n        if ((0, graphql_1.isObjectType)(type)) {\n            healFields(type);\n            healInterfaces(type);\n            return;\n        }\n        else if ((0, graphql_1.isInterfaceType)(type)) {\n            healFields(type);\n            if ('getInterfaces' in type) {\n                healInterfaces(type);\n            }\n            return;\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            healUnderlyingTypes(type);\n            return;\n        }\n        else if ((0, graphql_1.isInputObjectType)(type)) {\n            healInputFields(type);\n            return;\n        }\n        else if ((0, graphql_1.isLeafType)(type)) {\n            return;\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function healFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.args\n                .map(arg => {\n                arg.type = healType(arg.type);\n                return arg.type === null ? null : arg;\n            })\n                .filter(Boolean);\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healInterfaces(type) {\n        if ('getInterfaces' in type) {\n            const interfaces = type.getInterfaces();\n            interfaces.push(...interfaces\n                .splice(0)\n                .map(iface => healType(iface))\n                .filter(Boolean));\n        }\n    }\n    function healInputFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healUnderlyingTypes(type) {\n        const types = type.getTypes();\n        types.push(...types\n            .splice(0)\n            .map(t => healType(t))\n            .filter(Boolean));\n    }\n    function healType(type) {\n        // Unwrap the two known wrapper types\n        if ((0, graphql_1.isListType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql_1.GraphQLList(healedType) : null;\n        }\n        else if ((0, graphql_1.isNonNullType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql_1.GraphQLNonNull(healedType) : null;\n        }\n        else if ((0, graphql_1.isNamedType)(type)) {\n            // If a type annotation on a field or an argument or a union member is\n            // any `GraphQLNamedType` with a `name`, then it must end up identical\n            // to `schema.getType(name)`, since `schema.getTypeMap()` is the source\n            // of truth for all named schema types.\n            // Note that new types can still be simply added by adding a field, as\n            // the official type will be undefined, not null.\n            const officialType = originalTypeMap[type.name];\n            if (officialType && type !== officialType) {\n                return officialType;\n            }\n        }\n        return type;\n    }\n}\nexports.healTypes = healTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/heal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/helpers.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/helpers.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertSome = exports.isSome = exports.compareNodes = exports.nodeToString = exports.compareStrings = exports.isValidPath = exports.isDocumentString = exports.asArray = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nexports.asArray = asArray;\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0, graphql_1.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nexports.isDocumentString = isDocumentString;\nconst invalidPathRegex = /[‘“!%^<=>`]/;\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nexports.isValidPath = isValidPath;\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nexports.compareStrings = compareStrings;\nfunction nodeToString(a) {\n    var _a, _b;\n    let name;\n    if ('alias' in a) {\n        name = (_a = a.alias) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    if (name == null && 'name' in a) {\n        name = (_b = a.name) === null || _b === void 0 ? void 0 : _b.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nexports.nodeToString = nodeToString;\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nexports.compareNodes = compareNodes;\nfunction isSome(input) {\n    return input != null;\n}\nexports.isSome = isSome;\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\nexports.assertSome = assertSome;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxjQUFjLEdBQUcsb0JBQW9CLEdBQUcsb0JBQW9CLEdBQUcsc0JBQXNCLEdBQUcsbUJBQW1CLEdBQUcsd0JBQXdCLEdBQUcsZUFBZTtBQUM3SyxrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQztBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxoZWxwZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hc3NlcnRTb21lID0gZXhwb3J0cy5pc1NvbWUgPSBleHBvcnRzLmNvbXBhcmVOb2RlcyA9IGV4cG9ydHMubm9kZVRvU3RyaW5nID0gZXhwb3J0cy5jb21wYXJlU3RyaW5ncyA9IGV4cG9ydHMuaXNWYWxpZFBhdGggPSBleHBvcnRzLmlzRG9jdW1lbnRTdHJpbmcgPSBleHBvcnRzLmFzQXJyYXkgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmNvbnN0IGFzQXJyYXkgPSAoZm5zKSA9PiAoQXJyYXkuaXNBcnJheShmbnMpID8gZm5zIDogZm5zID8gW2Zuc10gOiBbXSk7XG5leHBvcnRzLmFzQXJyYXkgPSBhc0FycmF5O1xuY29uc3QgaW52YWxpZERvY1JlZ2V4ID0gL1xcLlthLXowLTldKyQvaTtcbmZ1bmN0aW9uIGlzRG9jdW1lbnRTdHJpbmcoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gWFhYOiBpcy12YWxpZC1wYXRoIG9yIGlzLWdsb2IgdHJlYXQgU0RMIGFzIGEgdmFsaWQgcGF0aFxuICAgIC8vIChgc2NhbGFyIERhdGVgIGZvciBleGFtcGxlKVxuICAgIC8vIHRoaXMgd2h5IGNoZWNraW5nIHRoZSBleHRlbnNpb24gaXMgZmFzdCBlbm91Z2hcbiAgICAvLyBhbmQgcHJldmVudCBmcm9tIHBhcnNpbmcgdGhlIHN0cmluZyBpbiBvcmRlciB0byBmaW5kIG91dFxuICAgIC8vIGlmIHRoZSBzdHJpbmcgaXMgYSBTRExcbiAgICBpZiAoaW52YWxpZERvY1JlZ2V4LnRlc3Qoc3RyKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgICgwLCBncmFwaHFsXzEucGFyc2UpKHN0cik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkgeyB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0cy5pc0RvY3VtZW50U3RyaW5nID0gaXNEb2N1bWVudFN0cmluZztcbmNvbnN0IGludmFsaWRQYXRoUmVnZXggPSAvW+KAmOKAnCElXjw9PmBdLztcbmZ1bmN0aW9uIGlzVmFsaWRQYXRoKHN0cikge1xuICAgIHJldHVybiB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyAmJiAhaW52YWxpZFBhdGhSZWdleC50ZXN0KHN0cik7XG59XG5leHBvcnRzLmlzVmFsaWRQYXRoID0gaXNWYWxpZFBhdGg7XG5mdW5jdGlvbiBjb21wYXJlU3RyaW5ncyhhLCBiKSB7XG4gICAgaWYgKFN0cmluZyhhKSA8IFN0cmluZyhiKSkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIGlmIChTdHJpbmcoYSkgPiBTdHJpbmcoYikpIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuZXhwb3J0cy5jb21wYXJlU3RyaW5ncyA9IGNvbXBhcmVTdHJpbmdzO1xuZnVuY3Rpb24gbm9kZVRvU3RyaW5nKGEpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGxldCBuYW1lO1xuICAgIGlmICgnYWxpYXMnIGluIGEpIHtcbiAgICAgICAgbmFtZSA9IChfYSA9IGEuYWxpYXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS52YWx1ZTtcbiAgICB9XG4gICAgaWYgKG5hbWUgPT0gbnVsbCAmJiAnbmFtZScgaW4gYSkge1xuICAgICAgICBuYW1lID0gKF9iID0gYS5uYW1lKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudmFsdWU7XG4gICAgfVxuICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgICAgbmFtZSA9IGEua2luZDtcbiAgICB9XG4gICAgcmV0dXJuIG5hbWU7XG59XG5leHBvcnRzLm5vZGVUb1N0cmluZyA9IG5vZGVUb1N0cmluZztcbmZ1bmN0aW9uIGNvbXBhcmVOb2RlcyhhLCBiLCBjdXN0b21Gbikge1xuICAgIGNvbnN0IGFTdHIgPSBub2RlVG9TdHJpbmcoYSk7XG4gICAgY29uc3QgYlN0ciA9IG5vZGVUb1N0cmluZyhiKTtcbiAgICBpZiAodHlwZW9mIGN1c3RvbUZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjdXN0b21GbihhU3RyLCBiU3RyKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBhcmVTdHJpbmdzKGFTdHIsIGJTdHIpO1xufVxuZXhwb3J0cy5jb21wYXJlTm9kZXMgPSBjb21wYXJlTm9kZXM7XG5mdW5jdGlvbiBpc1NvbWUoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXQgIT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNTb21lID0gaXNTb21lO1xuZnVuY3Rpb24gYXNzZXJ0U29tZShpbnB1dCwgbWVzc2FnZSA9ICdWYWx1ZSBzaG91bGQgYmUgc29tZXRoaW5nJykge1xuICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9XG59XG5leHBvcnRzLmFzc2VydFNvbWUgPSBhc3NlcnRTb21lO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/implementsAbstractType.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/implementsAbstractType.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.implementsAbstractType = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction implementsAbstractType(schema, typeA, typeB) {\n    if (typeB == null || typeA == null) {\n        return false;\n    }\n    else if (typeA === typeB) {\n        return true;\n    }\n    else if ((0, graphql_1.isCompositeType)(typeA) && (0, graphql_1.isCompositeType)(typeB)) {\n        return (0, graphql_1.doTypesOverlap)(schema, typeA, typeB);\n    }\n    return false;\n}\nexports.implementsAbstractType = implementsAbstractType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvaW1wbGVtZW50c0Fic3RyYWN0VHlwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUIsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcaW1wbGVtZW50c0Fic3RyYWN0VHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaW1wbGVtZW50c0Fic3RyYWN0VHlwZSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gaW1wbGVtZW50c0Fic3RyYWN0VHlwZShzY2hlbWEsIHR5cGVBLCB0eXBlQikge1xuICAgIGlmICh0eXBlQiA9PSBudWxsIHx8IHR5cGVBID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlQSA9PT0gdHlwZUIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKCgwLCBncmFwaHFsXzEuaXNDb21wb3NpdGVUeXBlKSh0eXBlQSkgJiYgKDAsIGdyYXBocWxfMS5pc0NvbXBvc2l0ZVR5cGUpKHR5cGVCKSkge1xuICAgICAgICByZXR1cm4gKDAsIGdyYXBocWxfMS5kb1R5cGVzT3ZlcmxhcCkoc2NoZW1hLCB0eXBlQSwgdHlwZUIpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnRzLmltcGxlbWVudHNBYnN0cmFjdFR5cGUgPSBpbXBsZW1lbnRzQWJzdHJhY3RUeXBlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/implementsAbstractType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./loaders.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/loaders.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./helpers.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/helpers.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./get-directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-directives.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./get-fields-with-directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-fields-with-directives.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./get-implementing-types.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-implementing-types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./print-schema-with-directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/print-schema-with-directives.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./get-fields-with-directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-fields-with-directives.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./validate-documents.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/validate-documents.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./parse-graphql-json.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/parse-graphql-json.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./parse-graphql-sdl.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/parse-graphql-sdl.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./build-operation-for-field.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/build-operation-for-field.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./filterSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/filterSchema.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./heal.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/heal.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./getResolversFromSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getResolversFromSchema.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./forEachField.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/forEachField.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./forEachDefaultValue.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/forEachDefaultValue.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./mapSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapSchema.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./addTypes.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/addTypes.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./rewire.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rewire.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./prune.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/prune.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./mergeDeep.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mergeDeep.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./Interfaces.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/Interfaces.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./stub.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/stub.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./selectionSets.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/selectionSets.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./getResponseKeyFromInfo.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getResponseKeyFromInfo.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./fields.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/fields.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./renameType.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/renameType.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./transformInputValue.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/transformInputValue.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./mapAsyncIterator.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapAsyncIterator.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./updateArgument.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/updateArgument.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./implementsAbstractType.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/implementsAbstractType.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/errors.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./observableToAsyncIterable.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/observableToAsyncIterable.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./visitResult.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/visitResult.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./getArgumentValues.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getArgumentValues.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./valueMatchesCriteria.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/valueMatchesCriteria.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./isAsyncIterable.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/isAsyncIterable.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./isDocumentNode.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/isDocumentNode.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./astFromValueUntyped.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromValueUntyped.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./executor.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/executor.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./withCancel.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/withCancel.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./AggregateError.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/AggregateError.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./rootTypes.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rootTypes.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./comments.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/comments.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./collectFields.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/collectFields.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./inspect.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/inspect.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./memoize.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/memoize.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./fixSchemaAst.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/fixSchemaAst.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./getOperationASTFromRequest.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getOperationASTFromRequest.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsOEdBQWM7QUFDM0MscUJBQXFCLG1CQUFPLENBQUMsOEdBQWM7QUFDM0MscUJBQXFCLG1CQUFPLENBQUMsNEhBQXFCO0FBQ2xELHFCQUFxQixtQkFBTyxDQUFDLG9KQUFpQztBQUM5RCxxQkFBcUIsbUJBQU8sQ0FBQyw0SUFBNkI7QUFDMUQscUJBQXFCLG1CQUFPLENBQUMsd0pBQW1DO0FBQ2hFLHFCQUFxQixtQkFBTyxDQUFDLG9KQUFpQztBQUM5RCxxQkFBcUIsbUJBQU8sQ0FBQyxvSUFBeUI7QUFDdEQscUJBQXFCLG1CQUFPLENBQUMsb0lBQXlCO0FBQ3RELHFCQUFxQixtQkFBTyxDQUFDLGtJQUF3QjtBQUNyRCxxQkFBcUIsbUJBQU8sQ0FBQyxrSkFBZ0M7QUFDN0QscUJBQXFCLG1CQUFPLENBQUMsMEdBQVk7QUFDekMscUJBQXFCLG1CQUFPLENBQUMsd0hBQW1CO0FBQ2hELHFCQUFxQixtQkFBTyxDQUFDLHdHQUFXO0FBQ3hDLHFCQUFxQixtQkFBTyxDQUFDLDRJQUE2QjtBQUMxRCxxQkFBcUIsbUJBQU8sQ0FBQyx3SEFBbUI7QUFDaEQscUJBQXFCLG1CQUFPLENBQUMsc0lBQTBCO0FBQ3ZELHFCQUFxQixtQkFBTyxDQUFDLGtIQUFnQjtBQUM3QyxxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBZTtBQUM1QyxxQkFBcUIsbUJBQU8sQ0FBQyw0R0FBYTtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQywwR0FBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyxrSEFBZ0I7QUFDN0MscUJBQXFCLG1CQUFPLENBQUMsb0hBQWlCO0FBQzlDLHFCQUFxQixtQkFBTyxDQUFDLHdHQUFXO0FBQ3hDLHFCQUFxQixtQkFBTyxDQUFDLDBIQUFvQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyw0SUFBNkI7QUFDMUQscUJBQXFCLG1CQUFPLENBQUMsNEdBQWE7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsb0hBQWlCO0FBQzlDLHFCQUFxQixtQkFBTyxDQUFDLHNJQUEwQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyxnSUFBdUI7QUFDcEQscUJBQXFCLG1CQUFPLENBQUMsNEhBQXFCO0FBQ2xELHFCQUFxQixtQkFBTyxDQUFDLDRJQUE2QjtBQUMxRCxxQkFBcUIsbUJBQU8sQ0FBQyw0R0FBYTtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQyxrSkFBZ0M7QUFDN0QscUJBQXFCLG1CQUFPLENBQUMsc0hBQWtCO0FBQy9DLHFCQUFxQixtQkFBTyxDQUFDLGtJQUF3QjtBQUNyRCxxQkFBcUIsbUJBQU8sQ0FBQyx3SUFBMkI7QUFDeEQscUJBQXFCLG1CQUFPLENBQUMsOEhBQXNCO0FBQ25ELHFCQUFxQixtQkFBTyxDQUFDLDRIQUFxQjtBQUNsRCxxQkFBcUIsbUJBQU8sQ0FBQyxzSUFBMEI7QUFDdkQscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWU7QUFDNUMscUJBQXFCLG1CQUFPLENBQUMsb0hBQWlCO0FBQzlDLHFCQUFxQixtQkFBTyxDQUFDLDRIQUFxQjtBQUNsRCxxQkFBcUIsbUJBQU8sQ0FBQyxrSEFBZ0I7QUFDN0MscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWU7QUFDNUMscUJBQXFCLG1CQUFPLENBQUMsMEhBQW9CO0FBQ2pELHFCQUFxQixtQkFBTyxDQUFDLDhHQUFjO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLDhHQUFjO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLHdIQUFtQjtBQUNoRCxxQkFBcUIsbUJBQU8sQ0FBQyxvSkFBaUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2FkZXJzLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hlbHBlcnMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZ2V0LWRpcmVjdGl2ZXMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZ2V0LWZpZWxkcy13aXRoLWRpcmVjdGl2ZXMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZ2V0LWltcGxlbWVudGluZy10eXBlcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcmludC1zY2hlbWEtd2l0aC1kaXJlY3RpdmVzLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dldC1maWVsZHMtd2l0aC1kaXJlY3RpdmVzLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3ZhbGlkYXRlLWRvY3VtZW50cy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wYXJzZS1ncmFwaHFsLWpzb24uanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGFyc2UtZ3JhcGhxbC1zZGwuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYnVpbGQtb3BlcmF0aW9uLWZvci1maWVsZC5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9maWx0ZXJTY2hlbWEuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaGVhbC5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9nZXRSZXNvbHZlcnNGcm9tU2NoZW1hLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2ZvckVhY2hGaWVsZC5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9mb3JFYWNoRGVmYXVsdFZhbHVlLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21hcFNjaGVtYS5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hZGRUeXBlcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZXdpcmUuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcHJ1bmUuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWVyZ2VEZWVwLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0ludGVyZmFjZXMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc3R1Yi5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zZWxlY3Rpb25TZXRzLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dldFJlc3BvbnNlS2V5RnJvbUluZm8uanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZmllbGRzLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3JlbmFtZVR5cGUuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhbnNmb3JtSW5wdXRWYWx1ZS5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tYXBBc3luY0l0ZXJhdG9yLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VwZGF0ZUFyZ3VtZW50LmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2ltcGxlbWVudHNBYnN0cmFjdFR5cGUuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL29ic2VydmFibGVUb0FzeW5jSXRlcmFibGUuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmlzaXRSZXN1bHQuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZ2V0QXJndW1lbnRWYWx1ZXMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmFsdWVNYXRjaGVzQ3JpdGVyaWEuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaXNBc3luY0l0ZXJhYmxlLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2lzRG9jdW1lbnROb2RlLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FzdEZyb21WYWx1ZVVudHlwZWQuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXhlY3V0b3IuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2l0aENhbmNlbC5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9BZ2dyZWdhdGVFcnJvci5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yb290VHlwZXMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29tbWVudHMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29sbGVjdEZpZWxkcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pbnNwZWN0LmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21lbW9pemUuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZml4U2NoZW1hQXN0LmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0LmpzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/inspect.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/inspect.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Taken from graphql-js\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/inspect.ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.inspect = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst AggregateError_js_1 = __webpack_require__(/*! ./AggregateError.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/AggregateError.js\");\nconst MAX_RECURSIVE_DEPTH = 3;\n/**\n * Used to print values in error messages.\n */\nfunction inspect(value) {\n    return formatValue(value, []);\n}\nexports.inspect = inspect;\nfunction formatValue(value, seenValues) {\n    switch (typeof value) {\n        case 'string':\n            return JSON.stringify(value);\n        case 'function':\n            return value.name ? `[function ${value.name}]` : '[function]';\n        case 'object':\n            return formatObjectValue(value, seenValues);\n        default:\n            return String(value);\n    }\n}\nfunction formatError(value) {\n    if (value instanceof graphql_1.GraphQLError) {\n        return value.toString();\n    }\n    return `${value.name}: ${value.message};\\n ${value.stack}`;\n}\nfunction formatObjectValue(value, previouslySeenValues) {\n    if (value === null) {\n        return 'null';\n    }\n    if (value instanceof Error) {\n        if ((0, AggregateError_js_1.isAggregateError)(value)) {\n            return formatError(value) + '\\n' + formatArray(value.errors, previouslySeenValues);\n        }\n        return formatError(value);\n    }\n    if (previouslySeenValues.includes(value)) {\n        return '[Circular]';\n    }\n    const seenValues = [...previouslySeenValues, value];\n    if (isJSONable(value)) {\n        const jsonValue = value.toJSON();\n        // check for infinite recursion\n        if (jsonValue !== value) {\n            return typeof jsonValue === 'string' ? jsonValue : formatValue(jsonValue, seenValues);\n        }\n    }\n    else if (Array.isArray(value)) {\n        return formatArray(value, seenValues);\n    }\n    return formatObject(value, seenValues);\n}\nfunction isJSONable(value) {\n    return typeof value.toJSON === 'function';\n}\nfunction formatObject(object, seenValues) {\n    const entries = Object.entries(object);\n    if (entries.length === 0) {\n        return '{}';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[' + getObjectTag(object) + ']';\n    }\n    const properties = entries.map(([key, value]) => key + ': ' + formatValue(value, seenValues));\n    return '{ ' + properties.join(', ') + ' }';\n}\nfunction formatArray(array, seenValues) {\n    if (array.length === 0) {\n        return '[]';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[Array]';\n    }\n    const len = array.length;\n    const remaining = array.length;\n    const items = [];\n    for (let i = 0; i < len; ++i) {\n        items.push(formatValue(array[i], seenValues));\n    }\n    if (remaining === 1) {\n        items.push('... 1 more item');\n    }\n    else if (remaining > 1) {\n        items.push(`... ${remaining} more items`);\n    }\n    return '[' + items.join(', ') + ']';\n}\nfunction getObjectTag(object) {\n    const tag = Object.prototype.toString\n        .call(object)\n        .replace(/^\\[object /, '')\n        .replace(/]$/, '');\n    if (tag === 'Object' && typeof object.constructor === 'function') {\n        const name = object.constructor.name;\n        if (typeof name === 'string' && name !== '') {\n            return name;\n        }\n    }\n    return tag;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvaW5zcGVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLDRCQUE0QixtQkFBTyxDQUFDLDRIQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLFdBQVc7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFdBQVcsSUFBSSxlQUFlLEtBQUssWUFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsK0JBQStCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsV0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXGluc3BlY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBUYWtlbiBmcm9tIGdyYXBocWwtanNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2dyYXBocWwtanMvYmxvYi9tYWluL3NyYy9qc3V0aWxzL2luc3BlY3QudHNcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaW5zcGVjdCA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgQWdncmVnYXRlRXJyb3JfanNfMSA9IHJlcXVpcmUoXCIuL0FnZ3JlZ2F0ZUVycm9yLmpzXCIpO1xuY29uc3QgTUFYX1JFQ1VSU0lWRV9ERVBUSCA9IDM7XG4vKipcbiAqIFVzZWQgdG8gcHJpbnQgdmFsdWVzIGluIGVycm9yIG1lc3NhZ2VzLlxuICovXG5mdW5jdGlvbiBpbnNwZWN0KHZhbHVlKSB7XG4gICAgcmV0dXJuIGZvcm1hdFZhbHVlKHZhbHVlLCBbXSk7XG59XG5leHBvcnRzLmluc3BlY3QgPSBpbnNwZWN0O1xuZnVuY3Rpb24gZm9ybWF0VmFsdWUodmFsdWUsIHNlZW5WYWx1ZXMpIHtcbiAgICBzd2l0Y2ggKHR5cGVvZiB2YWx1ZSkge1xuICAgICAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICAgICAgY2FzZSAnZnVuY3Rpb24nOlxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLm5hbWUgPyBgW2Z1bmN0aW9uICR7dmFsdWUubmFtZX1dYCA6ICdbZnVuY3Rpb25dJztcbiAgICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAgICAgIHJldHVybiBmb3JtYXRPYmplY3RWYWx1ZSh2YWx1ZSwgc2VlblZhbHVlcyk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBmb3JtYXRFcnJvcih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIGdyYXBocWxfMS5HcmFwaFFMRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHJldHVybiBgJHt2YWx1ZS5uYW1lfTogJHt2YWx1ZS5tZXNzYWdlfTtcXG4gJHt2YWx1ZS5zdGFja31gO1xufVxuZnVuY3Rpb24gZm9ybWF0T2JqZWN0VmFsdWUodmFsdWUsIHByZXZpb3VzbHlTZWVuVmFsdWVzKSB7XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAnbnVsbCc7XG4gICAgfVxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIGlmICgoMCwgQWdncmVnYXRlRXJyb3JfanNfMS5pc0FnZ3JlZ2F0ZUVycm9yKSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmb3JtYXRFcnJvcih2YWx1ZSkgKyAnXFxuJyArIGZvcm1hdEFycmF5KHZhbHVlLmVycm9ycywgcHJldmlvdXNseVNlZW5WYWx1ZXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3JtYXRFcnJvcih2YWx1ZSk7XG4gICAgfVxuICAgIGlmIChwcmV2aW91c2x5U2VlblZhbHVlcy5pbmNsdWRlcyh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuICdbQ2lyY3VsYXJdJztcbiAgICB9XG4gICAgY29uc3Qgc2VlblZhbHVlcyA9IFsuLi5wcmV2aW91c2x5U2VlblZhbHVlcywgdmFsdWVdO1xuICAgIGlmIChpc0pTT05hYmxlKHZhbHVlKSkge1xuICAgICAgICBjb25zdCBqc29uVmFsdWUgPSB2YWx1ZS50b0pTT04oKTtcbiAgICAgICAgLy8gY2hlY2sgZm9yIGluZmluaXRlIHJlY3Vyc2lvblxuICAgICAgICBpZiAoanNvblZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiBqc29uVmFsdWUgPT09ICdzdHJpbmcnID8ganNvblZhbHVlIDogZm9ybWF0VmFsdWUoanNvblZhbHVlLCBzZWVuVmFsdWVzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gZm9ybWF0QXJyYXkodmFsdWUsIHNlZW5WYWx1ZXMpO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybWF0T2JqZWN0KHZhbHVlLCBzZWVuVmFsdWVzKTtcbn1cbmZ1bmN0aW9uIGlzSlNPTmFibGUodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlLnRvSlNPTiA9PT0gJ2Z1bmN0aW9uJztcbn1cbmZ1bmN0aW9uIGZvcm1hdE9iamVjdChvYmplY3QsIHNlZW5WYWx1ZXMpIHtcbiAgICBjb25zdCBlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMob2JqZWN0KTtcbiAgICBpZiAoZW50cmllcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuICd7fSc7XG4gICAgfVxuICAgIGlmIChzZWVuVmFsdWVzLmxlbmd0aCA+IE1BWF9SRUNVUlNJVkVfREVQVEgpIHtcbiAgICAgICAgcmV0dXJuICdbJyArIGdldE9iamVjdFRhZyhvYmplY3QpICsgJ10nO1xuICAgIH1cbiAgICBjb25zdCBwcm9wZXJ0aWVzID0gZW50cmllcy5tYXAoKFtrZXksIHZhbHVlXSkgPT4ga2V5ICsgJzogJyArIGZvcm1hdFZhbHVlKHZhbHVlLCBzZWVuVmFsdWVzKSk7XG4gICAgcmV0dXJuICd7ICcgKyBwcm9wZXJ0aWVzLmpvaW4oJywgJykgKyAnIH0nO1xufVxuZnVuY3Rpb24gZm9ybWF0QXJyYXkoYXJyYXksIHNlZW5WYWx1ZXMpIHtcbiAgICBpZiAoYXJyYXkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiAnW10nO1xuICAgIH1cbiAgICBpZiAoc2VlblZhbHVlcy5sZW5ndGggPiBNQVhfUkVDVVJTSVZFX0RFUFRIKSB7XG4gICAgICAgIHJldHVybiAnW0FycmF5XSc7XG4gICAgfVxuICAgIGNvbnN0IGxlbiA9IGFycmF5Lmxlbmd0aDtcbiAgICBjb25zdCByZW1haW5pbmcgPSBhcnJheS5sZW5ndGg7XG4gICAgY29uc3QgaXRlbXMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgIGl0ZW1zLnB1c2goZm9ybWF0VmFsdWUoYXJyYXlbaV0sIHNlZW5WYWx1ZXMpKTtcbiAgICB9XG4gICAgaWYgKHJlbWFpbmluZyA9PT0gMSkge1xuICAgICAgICBpdGVtcy5wdXNoKCcuLi4gMSBtb3JlIGl0ZW0nKTtcbiAgICB9XG4gICAgZWxzZSBpZiAocmVtYWluaW5nID4gMSkge1xuICAgICAgICBpdGVtcy5wdXNoKGAuLi4gJHtyZW1haW5pbmd9IG1vcmUgaXRlbXNgKTtcbiAgICB9XG4gICAgcmV0dXJuICdbJyArIGl0ZW1zLmpvaW4oJywgJykgKyAnXSc7XG59XG5mdW5jdGlvbiBnZXRPYmplY3RUYWcob2JqZWN0KSB7XG4gICAgY29uc3QgdGFnID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ1xuICAgICAgICAuY2FsbChvYmplY3QpXG4gICAgICAgIC5yZXBsYWNlKC9eXFxbb2JqZWN0IC8sICcnKVxuICAgICAgICAucmVwbGFjZSgvXSQvLCAnJyk7XG4gICAgaWYgKHRhZyA9PT0gJ09iamVjdCcgJiYgdHlwZW9mIG9iamVjdC5jb25zdHJ1Y3RvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBjb25zdCBuYW1lID0gb2JqZWN0LmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycgJiYgbmFtZSAhPT0gJycpIHtcbiAgICAgICAgICAgIHJldHVybiBuYW1lO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0YWc7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/inspect.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/isAsyncIterable.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/isAsyncIterable.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isAsyncIterable = void 0;\nfunction isAsyncIterable(value) {\n    return (typeof value === 'object' &&\n        value != null &&\n        Symbol.asyncIterator in value &&\n        typeof value[Symbol.asyncIterator] === 'function');\n}\nexports.isAsyncIterable = isAsyncIterable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvaXNBc3luY0l0ZXJhYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxpc0FzeW5jSXRlcmFibGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzQXN5bmNJdGVyYWJsZSA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzQXN5bmNJdGVyYWJsZSh2YWx1ZSkge1xuICAgIHJldHVybiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJlxuICAgICAgICB2YWx1ZSAhPSBudWxsICYmXG4gICAgICAgIFN5bWJvbC5hc3luY0l0ZXJhdG9yIGluIHZhbHVlICYmXG4gICAgICAgIHR5cGVvZiB2YWx1ZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0gPT09ICdmdW5jdGlvbicpO1xufVxuZXhwb3J0cy5pc0FzeW5jSXRlcmFibGUgPSBpc0FzeW5jSXRlcmFibGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/isAsyncIterable.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/isDocumentNode.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/isDocumentNode.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isDocumentNode = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction isDocumentNode(object) {\n    return object && typeof object === 'object' && 'kind' in object && object.kind === graphql_1.Kind.DOCUMENT;\n}\nexports.isDocumentNode = isDocumentNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvaXNEb2N1bWVudE5vZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXGlzRG9jdW1lbnROb2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0RvY3VtZW50Tm9kZSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gaXNEb2N1bWVudE5vZGUob2JqZWN0KSB7XG4gICAgcmV0dXJuIG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiAna2luZCcgaW4gb2JqZWN0ICYmIG9iamVjdC5raW5kID09PSBncmFwaHFsXzEuS2luZC5ET0NVTUVOVDtcbn1cbmV4cG9ydHMuaXNEb2N1bWVudE5vZGUgPSBpc0RvY3VtZW50Tm9kZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/isDocumentNode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/loaders.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/loaders.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvbG9hZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXGxvYWRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/loaders.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapAsyncIterator.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapAsyncIterator.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mapAsyncIterator = void 0;\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, callback, rejectCallback) {\n    let $return;\n    let abruptClose;\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = (error) => {\n            const rethrow = () => Promise.reject(error);\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n    }\n    let mapReject;\n    if (rejectCallback) {\n        // Capture rejectCallback to ensure it cannot be null.\n        const reject = rejectCallback;\n        mapReject = (error) => asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    }\n    return {\n        next() {\n            return iterator.next().then(mapResult, mapReject);\n        },\n        return() {\n            return $return\n                ? $return.call(iterator).then(mapResult, mapReject)\n                : Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            if (typeof iterator.throw === 'function') {\n                return iterator.throw(error).then(mapResult, mapReject);\n            }\n            return Promise.reject(error).catch(abruptClose);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nexports.mapAsyncIterator = mapAsyncIterator;\nfunction asyncMapValue(value, callback) {\n    return new Promise(resolve => resolve(callback(value)));\n}\nfunction iteratorResult(value) {\n    return { value, done: false };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvbWFwQXN5bmNJdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsOEJBQThCO0FBQ2xFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXG1hcEFzeW5jSXRlcmF0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1hcEFzeW5jSXRlcmF0b3IgPSB2b2lkIDA7XG4vKipcbiAqIEdpdmVuIGFuIEFzeW5jSXRlcmFibGUgYW5kIGEgY2FsbGJhY2sgZnVuY3Rpb24sIHJldHVybiBhbiBBc3luY0l0ZXJhdG9yXG4gKiB3aGljaCBwcm9kdWNlcyB2YWx1ZXMgbWFwcGVkIHZpYSBjYWxsaW5nIHRoZSBjYWxsYmFjayBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gbWFwQXN5bmNJdGVyYXRvcihpdGVyYXRvciwgY2FsbGJhY2ssIHJlamVjdENhbGxiYWNrKSB7XG4gICAgbGV0ICRyZXR1cm47XG4gICAgbGV0IGFicnVwdENsb3NlO1xuICAgIGlmICh0eXBlb2YgaXRlcmF0b3IucmV0dXJuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICRyZXR1cm4gPSBpdGVyYXRvci5yZXR1cm47XG4gICAgICAgIGFicnVwdENsb3NlID0gKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXRocm93ID0gKCkgPT4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuICRyZXR1cm4uY2FsbChpdGVyYXRvcikudGhlbihyZXRocm93LCByZXRocm93KTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gbWFwUmVzdWx0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQgOiBhc3luY01hcFZhbHVlKHJlc3VsdC52YWx1ZSwgY2FsbGJhY2spLnRoZW4oaXRlcmF0b3JSZXN1bHQsIGFicnVwdENsb3NlKTtcbiAgICB9XG4gICAgbGV0IG1hcFJlamVjdDtcbiAgICBpZiAocmVqZWN0Q2FsbGJhY2spIHtcbiAgICAgICAgLy8gQ2FwdHVyZSByZWplY3RDYWxsYmFjayB0byBlbnN1cmUgaXQgY2Fubm90IGJlIG51bGwuXG4gICAgICAgIGNvbnN0IHJlamVjdCA9IHJlamVjdENhbGxiYWNrO1xuICAgICAgICBtYXBSZWplY3QgPSAoZXJyb3IpID0+IGFzeW5jTWFwVmFsdWUoZXJyb3IsIHJlamVjdCkudGhlbihpdGVyYXRvclJlc3VsdCwgYWJydXB0Q2xvc2UpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBuZXh0KCkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLm5leHQoKS50aGVuKG1hcFJlc3VsdCwgbWFwUmVqZWN0KTtcbiAgICAgICAgfSxcbiAgICAgICAgcmV0dXJuKCkge1xuICAgICAgICAgICAgcmV0dXJuICRyZXR1cm5cbiAgICAgICAgICAgICAgICA/ICRyZXR1cm4uY2FsbChpdGVyYXRvcikudGhlbihtYXBSZXN1bHQsIG1hcFJlamVjdClcbiAgICAgICAgICAgICAgICA6IFByb21pc2UucmVzb2x2ZSh7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHRocm93KGVycm9yKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGl0ZXJhdG9yLnRocm93ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLnRocm93KGVycm9yKS50aGVuKG1hcFJlc3VsdCwgbWFwUmVqZWN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcikuY2F0Y2goYWJydXB0Q2xvc2UpO1xuICAgICAgICB9LFxuICAgICAgICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMubWFwQXN5bmNJdGVyYXRvciA9IG1hcEFzeW5jSXRlcmF0b3I7XG5mdW5jdGlvbiBhc3luY01hcFZhbHVlKHZhbHVlLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHJlc29sdmUoY2FsbGJhY2sodmFsdWUpKSk7XG59XG5mdW5jdGlvbiBpdGVyYXRvclJlc3VsdCh2YWx1ZSkge1xuICAgIHJldHVybiB7IHZhbHVlLCBkb25lOiBmYWxzZSB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapAsyncIterator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapSchema.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapSchema.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.correctASTNodes = exports.mapSchema = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst getObjectTypeFromTypeMap_js_1 = __webpack_require__(/*! ./getObjectTypeFromTypeMap.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getObjectTypeFromTypeMap.js\");\nconst Interfaces_js_1 = __webpack_require__(/*! ./Interfaces.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/Interfaces.js\");\nconst rewire_js_1 = __webpack_require__(/*! ./rewire.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rewire.js\");\nconst transformInputValue_js_1 = __webpack_require__(/*! ./transformInputValue.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/transformInputValue.js\");\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, transformInputValue_js_1.serializeInputValue), schema, schemaMapper, type => (0, graphql_1.isLeafType)(type)), schema, schemaMapper), schema, transformInputValue_js_1.parseInputValue), schema, schemaMapper, type => !(0, graphql_1.isLeafType)(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = (0, rewire_js_1.rewireTypes)(newTypeMap, newDirectives);\n    return new graphql_1.GraphQLSchema({\n        ...schema.toConfig(),\n        query: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(newTypeMap, schema.getQueryType())),\n        mutation: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(newTypeMap, schema.getMutationType())),\n        subscription: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nexports.mapSchema = mapSchema;\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [Interfaces_js_1.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql_1.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => (0, graphql_1.isEnumType)(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [Interfaces_js_1.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [Interfaces_js_1.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if ((0, graphql_1.isListType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql_1.GraphQLList(newType) : null;\n    }\n    else if ((0, graphql_1.isNonNullType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql_1.GraphQLNonNull(newType) : null;\n    }\n    else if ((0, graphql_1.isNamedType)(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0, graphql_1.isObjectType)(originalType) && !(0, graphql_1.isInterfaceType)(originalType) && !(0, graphql_1.isInputObjectType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] = newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if ((0, graphql_1.isObjectType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if ((0, graphql_1.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql_1.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql_1.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0, graphql_1.isObjectType)(originalType) && !(0, graphql_1.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if ((0, graphql_1.isObjectType)(originalType)) {\n                newTypeMap[typeName] = new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if ((0, graphql_1.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = new graphql_1.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql_1.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    var _a, _b, _c;\n    const type = schema.getType(typeName);\n    const specifiers = [Interfaces_js_1.MapperKind.TYPE];\n    if ((0, graphql_1.isObjectType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_TYPE, Interfaces_js_1.MapperKind.OBJECT_TYPE);\n        if (typeName === ((_a = schema.getQueryType()) === null || _a === void 0 ? void 0 : _a.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_OBJECT, Interfaces_js_1.MapperKind.QUERY);\n        }\n        else if (typeName === ((_b = schema.getMutationType()) === null || _b === void 0 ? void 0 : _b.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_OBJECT, Interfaces_js_1.MapperKind.MUTATION);\n        }\n        else if (typeName === ((_c = schema.getSubscriptionType()) === null || _c === void 0 ? void 0 : _c.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_OBJECT, Interfaces_js_1.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if ((0, graphql_1.isInputObjectType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if ((0, graphql_1.isInterfaceType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_TYPE, Interfaces_js_1.MapperKind.ABSTRACT_TYPE, Interfaces_js_1.MapperKind.INTERFACE_TYPE);\n    }\n    else if ((0, graphql_1.isUnionType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_TYPE, Interfaces_js_1.MapperKind.ABSTRACT_TYPE, Interfaces_js_1.MapperKind.UNION_TYPE);\n    }\n    else if ((0, graphql_1.isEnumType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.ENUM_TYPE);\n    }\n    else if ((0, graphql_1.isScalarType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    var _a, _b, _c;\n    const type = schema.getType(typeName);\n    const specifiers = [Interfaces_js_1.MapperKind.FIELD];\n    if ((0, graphql_1.isObjectType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_FIELD, Interfaces_js_1.MapperKind.OBJECT_FIELD);\n        if (typeName === ((_a = schema.getQueryType()) === null || _a === void 0 ? void 0 : _a.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_FIELD, Interfaces_js_1.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === ((_b = schema.getMutationType()) === null || _b === void 0 ? void 0 : _b.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_FIELD, Interfaces_js_1.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === ((_c = schema.getSubscriptionType()) === null || _c === void 0 ? void 0 : _c.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_FIELD, Interfaces_js_1.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if ((0, graphql_1.isInterfaceType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_FIELD, Interfaces_js_1.MapperKind.INTERFACE_FIELD);\n    }\n    else if ((0, graphql_1.isInputObjectType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper !== null && fieldMapper !== void 0 ? fieldMapper : null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[Interfaces_js_1.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[Interfaces_js_1.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[Interfaces_js_1.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if ((0, graphql_1.isObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql_1.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql_1.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql_1.GraphQLObjectType(config);\n    }\n    else if ((0, graphql_1.isInterfaceType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql_1.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql_1.GraphQLInterfaceType(config);\n    }\n    else if ((0, graphql_1.isInputObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql_1.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql_1.GraphQLInputObjectType(config);\n    }\n    else if ((0, graphql_1.isEnumType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql_1.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\nexports.correctASTNodes = correctASTNodes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapSchema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/memoize.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/memoize.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.memoize2of4 = exports.memoize5 = exports.memoize4 = exports.memoize3 = exports.memoize2 = exports.memoize1 = void 0;\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize1 = memoize1;\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize2 = memoize2;\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize3 = memoize3;\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize4 = memoize4;\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize5 = memoize5;\nconst memoize2of4cache = new WeakMap();\nfunction memoize2of4(fn) {\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize2of4 = memoize2of4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/memoize.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mergeDeep.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mergeDeep.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeDeep = void 0;\nconst helpers_js_1 = __webpack_require__(/*! ./helpers.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/helpers.js\");\nfunction mergeDeep(sources, respectPrototype = false) {\n    const target = sources[0] || {};\n    const output = {};\n    if (respectPrototype) {\n        Object.setPrototypeOf(output, Object.create(Object.getPrototypeOf(target)));\n    }\n    for (const source of sources) {\n        if (isObject(target) && isObject(source)) {\n            if (respectPrototype) {\n                const outputPrototype = Object.getPrototypeOf(output);\n                const sourcePrototype = Object.getPrototypeOf(source);\n                if (sourcePrototype) {\n                    for (const key of Object.getOwnPropertyNames(sourcePrototype)) {\n                        const descriptor = Object.getOwnPropertyDescriptor(sourcePrototype, key);\n                        if ((0, helpers_js_1.isSome)(descriptor)) {\n                            Object.defineProperty(outputPrototype, key, descriptor);\n                        }\n                    }\n                }\n            }\n            for (const key in source) {\n                if (isObject(source[key])) {\n                    if (!(key in output)) {\n                        Object.assign(output, { [key]: source[key] });\n                    }\n                    else {\n                        output[key] = mergeDeep([output[key], source[key]], respectPrototype);\n                    }\n                }\n                else {\n                    Object.assign(output, { [key]: source[key] });\n                }\n            }\n        }\n    }\n    return output;\n}\nexports.mergeDeep = mergeDeep;\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvbWVyZ2VEZWVwLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixxQkFBcUIsbUJBQU8sQ0FBQyw4R0FBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELG9CQUFvQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsb0JBQW9CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxtZXJnZURlZXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lcmdlRGVlcCA9IHZvaWQgMDtcbmNvbnN0IGhlbHBlcnNfanNfMSA9IHJlcXVpcmUoXCIuL2hlbHBlcnMuanNcIik7XG5mdW5jdGlvbiBtZXJnZURlZXAoc291cmNlcywgcmVzcGVjdFByb3RvdHlwZSA9IGZhbHNlKSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gc291cmNlc1swXSB8fCB7fTtcbiAgICBjb25zdCBvdXRwdXQgPSB7fTtcbiAgICBpZiAocmVzcGVjdFByb3RvdHlwZSkge1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2Yob3V0cHV0LCBPYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZih0YXJnZXQpKSk7XG4gICAgfVxuICAgIGZvciAoY29uc3Qgc291cmNlIG9mIHNvdXJjZXMpIHtcbiAgICAgICAgaWYgKGlzT2JqZWN0KHRhcmdldCkgJiYgaXNPYmplY3Qoc291cmNlKSkge1xuICAgICAgICAgICAgaWYgKHJlc3BlY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBvdXRwdXRQcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob3V0cHV0KTtcbiAgICAgICAgICAgICAgICBjb25zdCBzb3VyY2VQcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yoc291cmNlKTtcbiAgICAgICAgICAgICAgICBpZiAoc291cmNlUHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZVByb3RvdHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZVByb3RvdHlwZSwga2V5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoMCwgaGVscGVyc19qc18xLmlzU29tZSkoZGVzY3JpcHRvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob3V0cHV0UHJvdG90eXBlLCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzT2JqZWN0KHNvdXJjZVtrZXldKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShrZXkgaW4gb3V0cHV0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvdXRwdXQsIHsgW2tleV06IHNvdXJjZVtrZXldIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0W2tleV0gPSBtZXJnZURlZXAoW291dHB1dFtrZXldLCBzb3VyY2Vba2V5XV0sIHJlc3BlY3RQcm90b3R5cGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKG91dHB1dCwgeyBba2V5XTogc291cmNlW2tleV0gfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvdXRwdXQ7XG59XG5leHBvcnRzLm1lcmdlRGVlcCA9IG1lcmdlRGVlcDtcbmZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgICByZXR1cm4gaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mergeDeep.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/observableToAsyncIterable.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/observableToAsyncIterable.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.observableToAsyncIterable = void 0;\nfunction observableToAsyncIterable(observable) {\n    const pullQueue = [];\n    const pushQueue = [];\n    let listening = true;\n    const pushValue = (value) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value, done: false });\n        }\n        else {\n            pushQueue.push({ value, done: false });\n        }\n    };\n    const pushError = (error) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value: { errors: [error] }, done: false });\n        }\n        else {\n            pushQueue.push({ value: { errors: [error] }, done: false });\n        }\n    };\n    const pushDone = () => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ done: true });\n        }\n        else {\n            pushQueue.push({ done: true });\n        }\n    };\n    const pullValue = () => new Promise(resolve => {\n        if (pushQueue.length !== 0) {\n            const element = pushQueue.shift();\n            // either {value: {errors: [...]}} or {value: ...}\n            resolve(element);\n        }\n        else {\n            pullQueue.push(resolve);\n        }\n    });\n    const subscription = observable.subscribe({\n        next(value) {\n            pushValue(value);\n        },\n        error(err) {\n            pushError(err);\n        },\n        complete() {\n            pushDone();\n        },\n    });\n    const emptyQueue = () => {\n        if (listening) {\n            listening = false;\n            subscription.unsubscribe();\n            for (const resolve of pullQueue) {\n                resolve({ value: undefined, done: true });\n            }\n            pullQueue.length = 0;\n            pushQueue.length = 0;\n        }\n    };\n    return {\n        next() {\n            // return is a defined method, so it is safe to call it.\n            return listening ? pullValue() : this.return();\n        },\n        return() {\n            emptyQueue();\n            return Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            emptyQueue();\n            return Promise.reject(error);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nexports.observableToAsyncIterable = observableToAsyncIterable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvb2JzZXJ2YWJsZVRvQXN5bmNJdGVyYWJsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msb0JBQW9CO0FBQ3BEO0FBQ0E7QUFDQSw2QkFBNkIsb0JBQW9CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsU0FBUyxpQkFBaUIsZUFBZTtBQUN6RTtBQUNBO0FBQ0EsNkJBQTZCLFNBQVMsaUJBQWlCLGVBQWU7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxZQUFZO0FBQzVDO0FBQ0E7QUFDQSw2QkFBNkIsWUFBWTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLFFBQVEsZ0JBQWdCLElBQUk7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhCQUE4QjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFDQUFxQyw4QkFBOEI7QUFDbkUsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxvYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5vYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlID0gdm9pZCAwO1xuZnVuY3Rpb24gb2JzZXJ2YWJsZVRvQXN5bmNJdGVyYWJsZShvYnNlcnZhYmxlKSB7XG4gICAgY29uc3QgcHVsbFF1ZXVlID0gW107XG4gICAgY29uc3QgcHVzaFF1ZXVlID0gW107XG4gICAgbGV0IGxpc3RlbmluZyA9IHRydWU7XG4gICAgY29uc3QgcHVzaFZhbHVlID0gKHZhbHVlKSA9PiB7XG4gICAgICAgIGlmIChwdWxsUXVldWUubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAvLyBJdCBpcyBzYWZlIHRvIHVzZSB0aGUgISBvcGVyYXRvciBoZXJlIGFzIHdlIGNoZWNrIHRoZSBsZW5ndGguXG4gICAgICAgICAgICBwdWxsUXVldWUuc2hpZnQoKSh7IHZhbHVlLCBkb25lOiBmYWxzZSB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHB1c2hRdWV1ZS5wdXNoKHsgdmFsdWUsIGRvbmU6IGZhbHNlIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBwdXNoRXJyb3IgPSAoZXJyb3IpID0+IHtcbiAgICAgICAgaWYgKHB1bGxRdWV1ZS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIC8vIEl0IGlzIHNhZmUgdG8gdXNlIHRoZSAhIG9wZXJhdG9yIGhlcmUgYXMgd2UgY2hlY2sgdGhlIGxlbmd0aC5cbiAgICAgICAgICAgIHB1bGxRdWV1ZS5zaGlmdCgpKHsgdmFsdWU6IHsgZXJyb3JzOiBbZXJyb3JdIH0sIGRvbmU6IGZhbHNlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHVzaFF1ZXVlLnB1c2goeyB2YWx1ZTogeyBlcnJvcnM6IFtlcnJvcl0gfSwgZG9uZTogZmFsc2UgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHB1c2hEb25lID0gKCkgPT4ge1xuICAgICAgICBpZiAocHVsbFF1ZXVlLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgLy8gSXQgaXMgc2FmZSB0byB1c2UgdGhlICEgb3BlcmF0b3IgaGVyZSBhcyB3ZSBjaGVjayB0aGUgbGVuZ3RoLlxuICAgICAgICAgICAgcHVsbFF1ZXVlLnNoaWZ0KCkoeyBkb25lOiB0cnVlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHVzaFF1ZXVlLnB1c2goeyBkb25lOiB0cnVlIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBwdWxsVmFsdWUgPSAoKSA9PiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgaWYgKHB1c2hRdWV1ZS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBwdXNoUXVldWUuc2hpZnQoKTtcbiAgICAgICAgICAgIC8vIGVpdGhlciB7dmFsdWU6IHtlcnJvcnM6IFsuLi5dfX0gb3Ige3ZhbHVlOiAuLi59XG4gICAgICAgICAgICByZXNvbHZlKGVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHVsbFF1ZXVlLnB1c2gocmVzb2x2ZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBvYnNlcnZhYmxlLnN1YnNjcmliZSh7XG4gICAgICAgIG5leHQodmFsdWUpIHtcbiAgICAgICAgICAgIHB1c2hWYWx1ZSh2YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yKGVycikge1xuICAgICAgICAgICAgcHVzaEVycm9yKGVycik7XG4gICAgICAgIH0sXG4gICAgICAgIGNvbXBsZXRlKCkge1xuICAgICAgICAgICAgcHVzaERvbmUoKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zdCBlbXB0eVF1ZXVlID0gKCkgPT4ge1xuICAgICAgICBpZiAobGlzdGVuaW5nKSB7XG4gICAgICAgICAgICBsaXN0ZW5pbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgZm9yIChjb25zdCByZXNvbHZlIG9mIHB1bGxRdWV1ZSkge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoeyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcHVsbFF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgICAgICAgICBwdXNoUXVldWUubGVuZ3RoID0gMDtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV4dCgpIHtcbiAgICAgICAgICAgIC8vIHJldHVybiBpcyBhIGRlZmluZWQgbWV0aG9kLCBzbyBpdCBpcyBzYWZlIHRvIGNhbGwgaXQuXG4gICAgICAgICAgICByZXR1cm4gbGlzdGVuaW5nID8gcHVsbFZhbHVlKCkgOiB0aGlzLnJldHVybigpO1xuICAgICAgICB9LFxuICAgICAgICByZXR1cm4oKSB7XG4gICAgICAgICAgICBlbXB0eVF1ZXVlKCk7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgdGhyb3coZXJyb3IpIHtcbiAgICAgICAgICAgIGVtcHR5UXVldWUoKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgICAgIH0sXG4gICAgICAgIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5vYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlID0gb2JzZXJ2YWJsZVRvQXN5bmNJdGVyYWJsZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/observableToAsyncIterable.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/parse-graphql-json.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/parse-graphql-json.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseGraphQLJSON = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction stripBOM(content) {\n    content = content.toString();\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (content.charCodeAt(0) === 0xfeff) {\n        content = content.slice(1);\n    }\n    return content;\n}\nfunction parseBOM(content) {\n    return JSON.parse(stripBOM(content));\n}\nfunction parseGraphQLJSON(location, jsonContent, options) {\n    let parsedJson = parseBOM(jsonContent);\n    if (parsedJson.data) {\n        parsedJson = parsedJson.data;\n    }\n    if (parsedJson.kind === 'Document') {\n        return {\n            location,\n            document: parsedJson,\n        };\n    }\n    else if (parsedJson.__schema) {\n        const schema = (0, graphql_1.buildClientSchema)(parsedJson, options);\n        return {\n            location,\n            schema,\n        };\n    }\n    else if (typeof parsedJson === 'string') {\n        return {\n            location,\n            rawSDL: parsedJson,\n        };\n    }\n    throw new Error(`Not valid JSON content`);\n}\nexports.parseGraphQLJSON = parseGraphQLJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvcGFyc2UtZ3JhcGhxbC1qc29uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxwYXJzZS1ncmFwaHFsLWpzb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnBhcnNlR3JhcGhRTEpTT04gPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmZ1bmN0aW9uIHN0cmlwQk9NKGNvbnRlbnQpIHtcbiAgICBjb250ZW50ID0gY29udGVudC50b1N0cmluZygpO1xuICAgIC8vIFJlbW92ZSBieXRlIG9yZGVyIG1hcmtlci4gVGhpcyBjYXRjaGVzIEVGIEJCIEJGICh0aGUgVVRGLTggQk9NKVxuICAgIC8vIGJlY2F1c2UgdGhlIGJ1ZmZlci10by1zdHJpbmcgY29udmVyc2lvbiBpbiBgZnMucmVhZEZpbGVTeW5jKClgXG4gICAgLy8gdHJhbnNsYXRlcyBpdCB0byBGRUZGLCB0aGUgVVRGLTE2IEJPTS5cbiAgICBpZiAoY29udGVudC5jaGFyQ29kZUF0KDApID09PSAweGZlZmYpIHtcbiAgICAgICAgY29udGVudCA9IGNvbnRlbnQuc2xpY2UoMSk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZW50O1xufVxuZnVuY3Rpb24gcGFyc2VCT00oY29udGVudCkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHN0cmlwQk9NKGNvbnRlbnQpKTtcbn1cbmZ1bmN0aW9uIHBhcnNlR3JhcGhRTEpTT04obG9jYXRpb24sIGpzb25Db250ZW50LCBvcHRpb25zKSB7XG4gICAgbGV0IHBhcnNlZEpzb24gPSBwYXJzZUJPTShqc29uQ29udGVudCk7XG4gICAgaWYgKHBhcnNlZEpzb24uZGF0YSkge1xuICAgICAgICBwYXJzZWRKc29uID0gcGFyc2VkSnNvbi5kYXRhO1xuICAgIH1cbiAgICBpZiAocGFyc2VkSnNvbi5raW5kID09PSAnRG9jdW1lbnQnKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBsb2NhdGlvbixcbiAgICAgICAgICAgIGRvY3VtZW50OiBwYXJzZWRKc29uLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChwYXJzZWRKc29uLl9fc2NoZW1hKSB7XG4gICAgICAgIGNvbnN0IHNjaGVtYSA9ICgwLCBncmFwaHFsXzEuYnVpbGRDbGllbnRTY2hlbWEpKHBhcnNlZEpzb24sIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbG9jYXRpb24sXG4gICAgICAgICAgICBzY2hlbWEsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBwYXJzZWRKc29uID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbG9jYXRpb24sXG4gICAgICAgICAgICByYXdTREw6IHBhcnNlZEpzb24sXG4gICAgICAgIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgTm90IHZhbGlkIEpTT04gY29udGVudGApO1xufVxuZXhwb3J0cy5wYXJzZUdyYXBoUUxKU09OID0gcGFyc2VHcmFwaFFMSlNPTjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/parse-graphql-json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/parse-graphql-sdl.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/parse-graphql-sdl.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isDescribable = exports.transformCommentsToDescriptions = exports.parseGraphQLSDL = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst comments_js_1 = __webpack_require__(/*! ./comments.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/comments.js\");\nfunction parseGraphQLSDL(location, rawSDL, options = {}) {\n    let document;\n    try {\n        if (options.commentDescriptions && rawSDL.includes('#')) {\n            document = transformCommentsToDescriptions(rawSDL, options);\n            // If noLocation=true, we need to make sure to print and parse it again, to remove locations,\n            // since `transformCommentsToDescriptions` must have locations set in order to transform the comments\n            // into descriptions.\n            if (options.noLocation) {\n                document = (0, graphql_1.parse)((0, graphql_1.print)(document), options);\n            }\n        }\n        else {\n            document = (0, graphql_1.parse)(new graphql_1.Source(rawSDL, location), options);\n        }\n    }\n    catch (e) {\n        if (e.message.includes('EOF') && rawSDL.replace(/(\\#[^*]*)/g, '').trim() === '') {\n            document = {\n                kind: graphql_1.Kind.DOCUMENT,\n                definitions: [],\n            };\n        }\n        else {\n            throw e;\n        }\n    }\n    return {\n        location,\n        document,\n    };\n}\nexports.parseGraphQLSDL = parseGraphQLSDL;\nfunction transformCommentsToDescriptions(sourceSdl, options = {}) {\n    const parsedDoc = (0, graphql_1.parse)(sourceSdl, {\n        ...options,\n        noLocation: false,\n    });\n    const modifiedDoc = (0, graphql_1.visit)(parsedDoc, {\n        leave: (node) => {\n            if (isDescribable(node)) {\n                const rawValue = (0, comments_js_1.getLeadingCommentBlock)(node);\n                if (rawValue !== undefined) {\n                    const commentsBlock = (0, comments_js_1.dedentBlockStringValue)('\\n' + rawValue);\n                    const isBlock = commentsBlock.includes('\\n');\n                    if (!node.description) {\n                        return {\n                            ...node,\n                            description: {\n                                kind: graphql_1.Kind.STRING,\n                                value: commentsBlock,\n                                block: isBlock,\n                            },\n                        };\n                    }\n                    else {\n                        return {\n                            ...node,\n                            description: {\n                                ...node.description,\n                                value: node.description.value + '\\n' + commentsBlock,\n                                block: true,\n                            },\n                        };\n                    }\n                }\n            }\n        },\n    });\n    return modifiedDoc;\n}\nexports.transformCommentsToDescriptions = transformCommentsToDescriptions;\nfunction isDescribable(node) {\n    return ((0, graphql_1.isTypeSystemDefinitionNode)(node) ||\n        node.kind === graphql_1.Kind.FIELD_DEFINITION ||\n        node.kind === graphql_1.Kind.INPUT_VALUE_DEFINITION ||\n        node.kind === graphql_1.Kind.ENUM_VALUE_DEFINITION);\n}\nexports.isDescribable = isDescribable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvcGFyc2UtZ3JhcGhxbC1zZGwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsdUNBQXVDLEdBQUcsdUJBQXVCO0FBQ3pGLGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLHNCQUFzQixtQkFBTyxDQUFDLGdIQUFlO0FBQzdDLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXHBhcnNlLWdyYXBocWwtc2RsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0Rlc2NyaWJhYmxlID0gZXhwb3J0cy50cmFuc2Zvcm1Db21tZW50c1RvRGVzY3JpcHRpb25zID0gZXhwb3J0cy5wYXJzZUdyYXBoUUxTREwgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmNvbnN0IGNvbW1lbnRzX2pzXzEgPSByZXF1aXJlKFwiLi9jb21tZW50cy5qc1wiKTtcbmZ1bmN0aW9uIHBhcnNlR3JhcGhRTFNETChsb2NhdGlvbiwgcmF3U0RMLCBvcHRpb25zID0ge30pIHtcbiAgICBsZXQgZG9jdW1lbnQ7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKG9wdGlvbnMuY29tbWVudERlc2NyaXB0aW9ucyAmJiByYXdTREwuaW5jbHVkZXMoJyMnKSkge1xuICAgICAgICAgICAgZG9jdW1lbnQgPSB0cmFuc2Zvcm1Db21tZW50c1RvRGVzY3JpcHRpb25zKHJhd1NETCwgb3B0aW9ucyk7XG4gICAgICAgICAgICAvLyBJZiBub0xvY2F0aW9uPXRydWUsIHdlIG5lZWQgdG8gbWFrZSBzdXJlIHRvIHByaW50IGFuZCBwYXJzZSBpdCBhZ2FpbiwgdG8gcmVtb3ZlIGxvY2F0aW9ucyxcbiAgICAgICAgICAgIC8vIHNpbmNlIGB0cmFuc2Zvcm1Db21tZW50c1RvRGVzY3JpcHRpb25zYCBtdXN0IGhhdmUgbG9jYXRpb25zIHNldCBpbiBvcmRlciB0byB0cmFuc2Zvcm0gdGhlIGNvbW1lbnRzXG4gICAgICAgICAgICAvLyBpbnRvIGRlc2NyaXB0aW9ucy5cbiAgICAgICAgICAgIGlmIChvcHRpb25zLm5vTG9jYXRpb24pIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudCA9ICgwLCBncmFwaHFsXzEucGFyc2UpKCgwLCBncmFwaHFsXzEucHJpbnQpKGRvY3VtZW50KSwgb3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkb2N1bWVudCA9ICgwLCBncmFwaHFsXzEucGFyc2UpKG5ldyBncmFwaHFsXzEuU291cmNlKHJhd1NETCwgbG9jYXRpb24pLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoZS5tZXNzYWdlLmluY2x1ZGVzKCdFT0YnKSAmJiByYXdTREwucmVwbGFjZSgvKFxcI1teKl0qKS9nLCAnJykudHJpbSgpID09PSAnJykge1xuICAgICAgICAgICAgZG9jdW1lbnQgPSB7XG4gICAgICAgICAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuRE9DVU1FTlQsXG4gICAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IFtdLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbG9jYXRpb24sXG4gICAgICAgIGRvY3VtZW50LFxuICAgIH07XG59XG5leHBvcnRzLnBhcnNlR3JhcGhRTFNETCA9IHBhcnNlR3JhcGhRTFNETDtcbmZ1bmN0aW9uIHRyYW5zZm9ybUNvbW1lbnRzVG9EZXNjcmlwdGlvbnMoc291cmNlU2RsLCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCBwYXJzZWREb2MgPSAoMCwgZ3JhcGhxbF8xLnBhcnNlKShzb3VyY2VTZGwsIHtcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgbm9Mb2NhdGlvbjogZmFsc2UsXG4gICAgfSk7XG4gICAgY29uc3QgbW9kaWZpZWREb2MgPSAoMCwgZ3JhcGhxbF8xLnZpc2l0KShwYXJzZWREb2MsIHtcbiAgICAgICAgbGVhdmU6IChub2RlKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXNEZXNjcmliYWJsZShub2RlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJhd1ZhbHVlID0gKDAsIGNvbW1lbnRzX2pzXzEuZ2V0TGVhZGluZ0NvbW1lbnRCbG9jaykobm9kZSk7XG4gICAgICAgICAgICAgICAgaWYgKHJhd1ZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29tbWVudHNCbG9jayA9ICgwLCBjb21tZW50c19qc18xLmRlZGVudEJsb2NrU3RyaW5nVmFsdWUpKCdcXG4nICsgcmF3VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpc0Jsb2NrID0gY29tbWVudHNCbG9jay5pbmNsdWRlcygnXFxuJyk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbm9kZS5kZXNjcmlwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLlNUUklORyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNvbW1lbnRzQmxvY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsb2NrOiBpc0Jsb2NrLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLm5vZGUuZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBub2RlLmRlc2NyaXB0aW9uLnZhbHVlICsgJ1xcbicgKyBjb21tZW50c0Jsb2NrLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBibG9jazogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gbW9kaWZpZWREb2M7XG59XG5leHBvcnRzLnRyYW5zZm9ybUNvbW1lbnRzVG9EZXNjcmlwdGlvbnMgPSB0cmFuc2Zvcm1Db21tZW50c1RvRGVzY3JpcHRpb25zO1xuZnVuY3Rpb24gaXNEZXNjcmliYWJsZShub2RlKSB7XG4gICAgcmV0dXJuICgoMCwgZ3JhcGhxbF8xLmlzVHlwZVN5c3RlbURlZmluaXRpb25Ob2RlKShub2RlKSB8fFxuICAgICAgICBub2RlLmtpbmQgPT09IGdyYXBocWxfMS5LaW5kLkZJRUxEX0RFRklOSVRJT04gfHxcbiAgICAgICAgbm9kZS5raW5kID09PSBncmFwaHFsXzEuS2luZC5JTlBVVF9WQUxVRV9ERUZJTklUSU9OIHx8XG4gICAgICAgIG5vZGUua2luZCA9PT0gZ3JhcGhxbF8xLktpbmQuRU5VTV9WQUxVRV9ERUZJTklUSU9OKTtcbn1cbmV4cG9ydHMuaXNEZXNjcmliYWJsZSA9IGlzRGVzY3JpYmFibGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/parse-graphql-sdl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/print-schema-with-directives.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/print-schema-with-directives.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeDirectiveNodes = exports.makeDirectiveNode = exports.makeDeprecatedDirective = exports.astFromEnumValue = exports.astFromInputField = exports.astFromField = exports.astFromScalarType = exports.astFromEnumType = exports.astFromInputObjectType = exports.astFromUnionType = exports.astFromInterfaceType = exports.astFromObjectType = exports.astFromArg = exports.getDeprecatableDirectiveNodes = exports.getDirectiveNodes = exports.astFromDirective = exports.astFromSchema = exports.printSchemaWithDirectives = exports.getDocumentNodeFromSchema = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst astFromType_js_1 = __webpack_require__(/*! ./astFromType.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromType.js\");\nconst get_directives_js_1 = __webpack_require__(/*! ./get-directives.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-directives.js\");\nconst astFromValueUntyped_js_1 = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromValueUntyped.js\");\nconst helpers_js_1 = __webpack_require__(/*! ./helpers.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/helpers.js\");\nconst rootTypes_js_1 = __webpack_require__(/*! ./rootTypes.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rootTypes.js\");\nfunction getDocumentNodeFromSchema(schema, options = {}) {\n    const pathToDirectivesInExtensions = options.pathToDirectivesInExtensions;\n    const typesMap = schema.getTypeMap();\n    const schemaNode = astFromSchema(schema, pathToDirectivesInExtensions);\n    const definitions = schemaNode != null ? [schemaNode] : [];\n    const directives = schema.getDirectives();\n    for (const directive of directives) {\n        if ((0, graphql_1.isSpecifiedDirective)(directive)) {\n            continue;\n        }\n        definitions.push(astFromDirective(directive, schema, pathToDirectivesInExtensions));\n    }\n    for (const typeName in typesMap) {\n        const type = typesMap[typeName];\n        const isPredefinedScalar = (0, graphql_1.isSpecifiedScalarType)(type);\n        const isIntrospection = (0, graphql_1.isIntrospectionType)(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if ((0, graphql_1.isObjectType)(type)) {\n            definitions.push(astFromObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isInterfaceType)(type)) {\n            definitions.push(astFromInterfaceType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            definitions.push(astFromUnionType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isInputObjectType)(type)) {\n            definitions.push(astFromInputObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            definitions.push(astFromEnumType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isScalarType)(type)) {\n            definitions.push(astFromScalarType(type, schema, pathToDirectivesInExtensions));\n        }\n        else {\n            throw new Error(`Unknown type ${type}.`);\n        }\n    }\n    return {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions,\n    };\n}\nexports.getDocumentNodeFromSchema = getDocumentNodeFromSchema;\n// this approach uses the default schema printer rather than a custom solution, so may be more backwards compatible\n// currently does not allow customization of printSchema options having to do with comments.\nfunction printSchemaWithDirectives(schema, options = {}) {\n    const documentNode = getDocumentNodeFromSchema(schema, options);\n    return (0, graphql_1.print)(documentNode);\n}\nexports.printSchemaWithDirectives = printSchemaWithDirectives;\nfunction astFromSchema(schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    const operationTypeMap = new Map([\n        ['query', undefined],\n        ['mutation', undefined],\n        ['subscription', undefined],\n    ]);\n    const nodes = [];\n    if (schema.astNode != null) {\n        nodes.push(schema.astNode);\n    }\n    if (schema.extensionASTNodes != null) {\n        for (const extensionASTNode of schema.extensionASTNodes) {\n            nodes.push(extensionASTNode);\n        }\n    }\n    for (const node of nodes) {\n        if (node.operationTypes) {\n            for (const operationTypeDefinitionNode of node.operationTypes) {\n                operationTypeMap.set(operationTypeDefinitionNode.operation, operationTypeDefinitionNode);\n            }\n        }\n    }\n    const rootTypeMap = (0, rootTypes_js_1.getRootTypeMap)(schema);\n    for (const [operationTypeNode, operationTypeDefinitionNode] of operationTypeMap) {\n        const rootType = rootTypeMap.get(operationTypeNode);\n        if (rootType != null) {\n            const rootTypeAST = (0, astFromType_js_1.astFromType)(rootType);\n            if (operationTypeDefinitionNode != null) {\n                operationTypeDefinitionNode.type = rootTypeAST;\n            }\n            else {\n                operationTypeMap.set(operationTypeNode, {\n                    kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: operationTypeNode,\n                    type: rootTypeAST,\n                });\n            }\n        }\n    }\n    const operationTypes = [...operationTypeMap.values()].filter(helpers_js_1.isSome);\n    const directives = getDirectiveNodes(schema, schema, pathToDirectivesInExtensions);\n    if (!operationTypes.length && !directives.length) {\n        return null;\n    }\n    const schemaNode = {\n        kind: operationTypes != null ? graphql_1.Kind.SCHEMA_DEFINITION : graphql_1.Kind.SCHEMA_EXTENSION,\n        operationTypes,\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n    // This code is so weird because it needs to support GraphQL.js 14\n    // In GraphQL.js 14 there is no `description` value on schemaNode\n    schemaNode.description =\n        ((_b = (_a = schema.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : schema.description != null)\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: schema.description,\n                block: true,\n            }\n            : undefined;\n    return schemaNode;\n}\nexports.astFromSchema = astFromSchema;\nfunction astFromDirective(directive, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c, _d;\n    return {\n        kind: graphql_1.Kind.DIRECTIVE_DEFINITION,\n        description: (_b = (_a = directive.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (directive.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: directive.description,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: directive.name,\n        },\n        arguments: (_c = directive.args) === null || _c === void 0 ? void 0 : _c.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        repeatable: directive.isRepeatable,\n        locations: ((_d = directive.locations) === null || _d === void 0 ? void 0 : _d.map(location => ({\n            kind: graphql_1.Kind.NAME,\n            value: location,\n        }))) || [],\n    };\n}\nexports.astFromDirective = astFromDirective;\nfunction getDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = (0, get_directives_js_1.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let nodes = [];\n    if (entity.astNode != null) {\n        nodes.push(entity.astNode);\n    }\n    if ('extensionASTNodes' in entity && entity.extensionASTNodes != null) {\n        nodes = nodes.concat(entity.extensionASTNodes);\n    }\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = [];\n        for (const node of nodes) {\n            if (node.directives) {\n                directives.push(...node.directives);\n            }\n        }\n    }\n    return directives;\n}\nexports.getDirectiveNodes = getDirectiveNodes;\nfunction getDeprecatableDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    let directiveNodesBesidesDeprecated = [];\n    let deprecatedDirectiveNode = null;\n    const directivesInExtensions = (0, get_directives_js_1.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = (_a = entity.astNode) === null || _a === void 0 ? void 0 : _a.directives;\n    }\n    if (directives != null) {\n        directiveNodesBesidesDeprecated = directives.filter(directive => directive.name.value !== 'deprecated');\n        if (entity.deprecationReason != null) {\n            deprecatedDirectiveNode = (_b = directives.filter(directive => directive.name.value === 'deprecated')) === null || _b === void 0 ? void 0 : _b[0];\n        }\n    }\n    if (entity.deprecationReason != null &&\n        deprecatedDirectiveNode == null) {\n        deprecatedDirectiveNode = makeDeprecatedDirective(entity.deprecationReason);\n    }\n    return deprecatedDirectiveNode == null\n        ? directiveNodesBesidesDeprecated\n        : [deprecatedDirectiveNode].concat(directiveNodesBesidesDeprecated);\n}\nexports.getDeprecatableDirectiveNodes = getDeprecatableDirectiveNodes;\nfunction astFromArg(arg, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    return {\n        kind: graphql_1.Kind.INPUT_VALUE_DEFINITION,\n        description: (_b = (_a = arg.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (arg.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: arg.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: arg.name,\n        },\n        type: (0, astFromType_js_1.astFromType)(arg.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        defaultValue: arg.defaultValue !== undefined ? (_c = (0, graphql_1.astFromValue)(arg.defaultValue, arg.type)) !== null && _c !== void 0 ? _c : undefined : undefined,\n        directives: getDeprecatableDirectiveNodes(arg, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromArg = astFromArg;\nfunction astFromObjectType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.OBJECT_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        interfaces: Object.values(type.getInterfaces()).map(iFace => (0, astFromType_js_1.astFromType)(iFace)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromObjectType = astFromObjectType;\nfunction astFromInterfaceType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    const node = {\n        kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n    if ('getInterfaces' in type) {\n        node.interfaces = Object.values(type.getInterfaces()).map(iFace => (0, astFromType_js_1.astFromType)(iFace));\n    }\n    return node;\n}\nexports.astFromInterfaceType = astFromInterfaceType;\nfunction astFromUnionType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.UNION_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n        types: type.getTypes().map(type => (0, astFromType_js_1.astFromType)(type)),\n    };\n}\nexports.astFromUnionType = astFromUnionType;\nfunction astFromInputObjectType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromInputField(field, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromInputObjectType = astFromInputObjectType;\nfunction astFromEnumType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.ENUM_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        values: Object.values(type.getValues()).map(value => astFromEnumValue(value, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromEnumType = astFromEnumType;\nfunction astFromScalarType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    const directivesInExtensions = (0, get_directives_js_1.getDirectivesInExtensions)(type, pathToDirectivesInExtensions);\n    const directives = directivesInExtensions\n        ? makeDirectiveNodes(schema, directivesInExtensions)\n        : ((_a = type.astNode) === null || _a === void 0 ? void 0 : _a.directives) || [];\n    const specifiedByValue = (type['specifiedByUrl'] || type['specifiedByURL']);\n    if (specifiedByValue && !directives.some(directiveNode => directiveNode.name.value === 'specifiedBy')) {\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        directives.push(makeDirectiveNode('specifiedBy', specifiedByArgs));\n    }\n    return {\n        kind: graphql_1.Kind.SCALAR_TYPE_DEFINITION,\n        description: (_c = (_b = type.astNode) === null || _b === void 0 ? void 0 : _b.description) !== null && _c !== void 0 ? _c : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n}\nexports.astFromScalarType = astFromScalarType;\nfunction astFromField(field, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.FIELD_DEFINITION,\n        description: (_b = (_a = field.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (field.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: field.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: field.name,\n        },\n        arguments: field.args.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        type: (0, astFromType_js_1.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromField = astFromField;\nfunction astFromInputField(field, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    return {\n        kind: graphql_1.Kind.INPUT_VALUE_DEFINITION,\n        description: (_b = (_a = field.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (field.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: field.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: field.name,\n        },\n        type: (0, astFromType_js_1.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n        defaultValue: (_c = (0, graphql_1.astFromValue)(field.defaultValue, field.type)) !== null && _c !== void 0 ? _c : undefined,\n    };\n}\nexports.astFromInputField = astFromInputField;\nfunction astFromEnumValue(value, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.ENUM_VALUE_DEFINITION,\n        description: (_b = (_a = value.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (value.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: value.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: value.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(value, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromEnumValue = astFromEnumValue;\nfunction makeDeprecatedDirective(deprecationReason) {\n    return makeDirectiveNode('deprecated', { reason: deprecationReason }, graphql_1.GraphQLDeprecatedDirective);\n}\nexports.makeDeprecatedDirective = makeDeprecatedDirective;\nfunction makeDirectiveNode(name, args, directive) {\n    const directiveArguments = [];\n    if (directive != null) {\n        for (const arg of directive.args) {\n            const argName = arg.name;\n            const argValue = args[argName];\n            if (argValue !== undefined) {\n                const value = (0, graphql_1.astFromValue)(argValue, arg.type);\n                if (value) {\n                    directiveArguments.push({\n                        kind: graphql_1.Kind.ARGUMENT,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: argName,\n                        },\n                        value,\n                    });\n                }\n            }\n        }\n    }\n    else {\n        for (const argName in args) {\n            const argValue = args[argName];\n            const value = (0, astFromValueUntyped_js_1.astFromValueUntyped)(argValue);\n            if (value) {\n                directiveArguments.push({\n                    kind: graphql_1.Kind.ARGUMENT,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: argName,\n                    },\n                    value,\n                });\n            }\n        }\n    }\n    return {\n        kind: graphql_1.Kind.DIRECTIVE,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: name,\n        },\n        arguments: directiveArguments,\n    };\n}\nexports.makeDirectiveNode = makeDirectiveNode;\nfunction makeDirectiveNodes(schema, directiveValues) {\n    const directiveNodes = [];\n    for (const directiveName in directiveValues) {\n        const arrayOrSingleValue = directiveValues[directiveName];\n        const directive = schema === null || schema === void 0 ? void 0 : schema.getDirective(directiveName);\n        if (Array.isArray(arrayOrSingleValue)) {\n            for (const value of arrayOrSingleValue) {\n                directiveNodes.push(makeDirectiveNode(directiveName, value, directive));\n            }\n        }\n        else {\n            directiveNodes.push(makeDirectiveNode(directiveName, arrayOrSingleValue, directive));\n        }\n    }\n    return directiveNodes;\n}\nexports.makeDirectiveNodes = makeDirectiveNodes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/print-schema-with-directives.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/prune.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/prune.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pruneSchema = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst mapSchema_js_1 = __webpack_require__(/*! ./mapSchema.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/mapSchema.js\");\nconst Interfaces_js_1 = __webpack_require__(/*! ./Interfaces.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/Interfaces.js\");\nconst rootTypes_js_1 = __webpack_require__(/*! ./rootTypes.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rootTypes.js\");\nconst get_implementing_types_js_1 = __webpack_require__(/*! ./get-implementing-types.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/get-implementing-types.js\");\n/**\n * Prunes the provided schema, removing unused and empty types\n * @param schema The schema to prune\n * @param options Additional options for removing unused types from the schema\n */\nfunction pruneSchema(schema, options = {}) {\n    const { skipEmptyCompositeTypePruning, skipEmptyUnionPruning, skipPruning, skipUnimplementedInterfacesPruning, skipUnusedTypesPruning, } = options;\n    let prunedTypes = []; // Pruned types during mapping\n    let prunedSchema = schema;\n    do {\n        let visited = visitSchema(prunedSchema);\n        // Custom pruning  was defined, so we need to pre-emptively revisit the schema accounting for this\n        if (skipPruning) {\n            const revisit = [];\n            for (const typeName in prunedSchema.getTypeMap()) {\n                if (typeName.startsWith('__')) {\n                    continue;\n                }\n                const type = prunedSchema.getType(typeName);\n                // if we want to skip pruning for this type, add it to the list of types to revisit\n                if (type && skipPruning(type)) {\n                    revisit.push(typeName);\n                }\n            }\n            visited = visitQueue(revisit, prunedSchema, visited); // visit again\n        }\n        prunedTypes = [];\n        prunedSchema = (0, mapSchema_js_1.mapSchema)(prunedSchema, {\n            [Interfaces_js_1.MapperKind.TYPE]: type => {\n                if (!visited.has(type.name) && !(0, graphql_1.isSpecifiedScalarType)(type)) {\n                    if ((0, graphql_1.isUnionType)(type) ||\n                        (0, graphql_1.isInputObjectType)(type) ||\n                        (0, graphql_1.isInterfaceType)(type) ||\n                        (0, graphql_1.isObjectType)(type) ||\n                        (0, graphql_1.isScalarType)(type)) {\n                        // skipUnusedTypesPruning: skip pruning unused types\n                        if (skipUnusedTypesPruning) {\n                            return type;\n                        }\n                        // skipEmptyUnionPruning: skip pruning empty unions\n                        if ((0, graphql_1.isUnionType)(type) && skipEmptyUnionPruning && !Object.keys(type.getTypes()).length) {\n                            return type;\n                        }\n                        if ((0, graphql_1.isInputObjectType)(type) || (0, graphql_1.isInterfaceType)(type) || (0, graphql_1.isObjectType)(type)) {\n                            // skipEmptyCompositeTypePruning: skip pruning object types or interfaces with no fields\n                            if (skipEmptyCompositeTypePruning && !Object.keys(type.getFields()).length) {\n                                return type;\n                            }\n                        }\n                        // skipUnimplementedInterfacesPruning: skip pruning interfaces that are not implemented by any other types\n                        if ((0, graphql_1.isInterfaceType)(type) && skipUnimplementedInterfacesPruning) {\n                            return type;\n                        }\n                    }\n                    prunedTypes.push(type.name);\n                    visited.delete(type.name);\n                    return null;\n                }\n                return type;\n            },\n        });\n    } while (prunedTypes.length); // Might have empty types and need to prune again\n    return prunedSchema;\n}\nexports.pruneSchema = pruneSchema;\nfunction visitSchema(schema) {\n    const queue = []; // queue of nodes to visit\n    // Grab the root types and start there\n    for (const type of (0, rootTypes_js_1.getRootTypes)(schema)) {\n        queue.push(type.name);\n    }\n    return visitQueue(queue, schema);\n}\nfunction visitQueue(queue, schema, visited = new Set()) {\n    // Interfaces encountered that are field return types need to be revisited to add their implementations\n    const revisit = new Map();\n    // Navigate all types starting with pre-queued types (root types)\n    while (queue.length) {\n        const typeName = queue.pop();\n        // Skip types we already visited unless it is an interface type that needs revisiting\n        if (visited.has(typeName) && revisit[typeName] !== true) {\n            continue;\n        }\n        const type = schema.getType(typeName);\n        if (type) {\n            // Get types for union\n            if ((0, graphql_1.isUnionType)(type)) {\n                queue.push(...type.getTypes().map(type => type.name));\n            }\n            // If it is an interface and it is a returned type, grab all implementations so we can use proper __typename in fragments\n            if ((0, graphql_1.isInterfaceType)(type) && revisit[typeName] === true) {\n                queue.push(...(0, get_implementing_types_js_1.getImplementingTypes)(type.name, schema));\n                // No need to revisit this interface again\n                revisit[typeName] = false;\n            }\n            // Visit interfaces this type is implementing if they haven't been visited yet\n            if ('getInterfaces' in type) {\n                // Only pushes to queue to visit but not return types\n                queue.push(...type.getInterfaces().map(iface => iface.name));\n            }\n            // If the type has files visit those field types\n            if ('getFields' in type) {\n                const fields = type.getFields();\n                const entries = Object.entries(fields);\n                if (!entries.length) {\n                    continue;\n                }\n                for (const [, field] of entries) {\n                    if ((0, graphql_1.isObjectType)(type)) {\n                        // Visit arg types\n                        queue.push(...field.args.map(arg => (0, graphql_1.getNamedType)(arg.type).name));\n                    }\n                    const namedType = (0, graphql_1.getNamedType)(field.type);\n                    queue.push(namedType.name);\n                    // Interfaces returned on fields need to be revisited to add their implementations\n                    if ((0, graphql_1.isInterfaceType)(namedType) && !(namedType.name in revisit)) {\n                        revisit[namedType.name] = true;\n                    }\n                }\n            }\n            visited.add(typeName); // Mark as visited (and therefore it is used and should be kept)\n        }\n    }\n    return visited;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/prune.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/renameType.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/renameType.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.renameType = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction renameType(type, newTypeName) {\n    if ((0, graphql_1.isObjectType)(type)) {\n        return new graphql_1.GraphQLObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isInterfaceType)(type)) {\n        return new graphql_1.GraphQLInterfaceType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isUnionType)(type)) {\n        return new graphql_1.GraphQLUnionType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isInputObjectType)(type)) {\n        return new graphql_1.GraphQLInputObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isEnumType)(type)) {\n        return new graphql_1.GraphQLEnumType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isScalarType)(type)) {\n        return new graphql_1.GraphQLScalarType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    throw new Error(`Unknown type ${type}.`);\n}\nexports.renameType = renameType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/renameType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rewire.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rewire.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.rewireTypes = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst stub_js_1 = __webpack_require__(/*! ./stub.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/stub.js\");\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            throw new Error(`Duplicate schema type name ${newName}`);\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if ((0, graphql_1.isSpecifiedDirective)(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql_1.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if ((0, graphql_1.isObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql_1.GraphQLObjectType(newConfig);\n        }\n        else if ((0, graphql_1.isInterfaceType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql_1.GraphQLInterfaceType(newConfig);\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql_1.GraphQLUnionType(newConfig);\n        }\n        else if ((0, graphql_1.isInputObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql_1.GraphQLInputObjectType(newConfig);\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql_1.GraphQLEnumType(enumConfig);\n        }\n        else if ((0, graphql_1.isScalarType)(type)) {\n            if ((0, graphql_1.isSpecifiedScalarType)(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql_1.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if ((0, graphql_1.isListType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql_1.GraphQLList(rewiredType) : null;\n        }\n        else if ((0, graphql_1.isNonNullType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql_1.GraphQLNonNull(rewiredType) : null;\n        }\n        else if ((0, graphql_1.isNamedType)(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = (0, stub_js_1.isNamedStub)(type) ? (0, stub_js_1.getBuiltInForStub)(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\nexports.rewireTypes = rewireTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rewire.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rootTypes.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rootTypes.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRootTypeMap = exports.getRootTypes = exports.getRootTypeNames = exports.getDefinedRootType = void 0;\nconst memoize_js_1 = __webpack_require__(/*! ./memoize.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/memoize.js\");\nfunction getDefinedRootType(schema, operation) {\n    const rootTypeMap = (0, exports.getRootTypeMap)(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw new Error(`Root type for operation \"${operation}\" not defined by the given schema.`);\n    }\n    return rootType;\n}\nexports.getDefinedRootType = getDefinedRootType;\nexports.getRootTypeNames = (0, memoize_js_1.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = (0, exports.getRootTypes)(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nexports.getRootTypes = (0, memoize_js_1.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = (0, exports.getRootTypeMap)(schema);\n    return new Set(rootTypeMap.values());\n});\nexports.getRootTypeMap = (0, memoize_js_1.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvcm9vdFR5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLG9CQUFvQixHQUFHLHdCQUF3QixHQUFHLDBCQUEwQjtBQUNyRyxxQkFBcUIsbUJBQU8sQ0FBQyw4R0FBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxVQUFVO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLENBQUM7QUFDRCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxyb290VHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFJvb3RUeXBlTWFwID0gZXhwb3J0cy5nZXRSb290VHlwZXMgPSBleHBvcnRzLmdldFJvb3RUeXBlTmFtZXMgPSBleHBvcnRzLmdldERlZmluZWRSb290VHlwZSA9IHZvaWQgMDtcbmNvbnN0IG1lbW9pemVfanNfMSA9IHJlcXVpcmUoXCIuL21lbW9pemUuanNcIik7XG5mdW5jdGlvbiBnZXREZWZpbmVkUm9vdFR5cGUoc2NoZW1hLCBvcGVyYXRpb24pIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9ICgwLCBleHBvcnRzLmdldFJvb3RUeXBlTWFwKShzY2hlbWEpO1xuICAgIGNvbnN0IHJvb3RUeXBlID0gcm9vdFR5cGVNYXAuZ2V0KG9wZXJhdGlvbik7XG4gICAgaWYgKHJvb3RUeXBlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBSb290IHR5cGUgZm9yIG9wZXJhdGlvbiBcIiR7b3BlcmF0aW9ufVwiIG5vdCBkZWZpbmVkIGJ5IHRoZSBnaXZlbiBzY2hlbWEuYCk7XG4gICAgfVxuICAgIHJldHVybiByb290VHlwZTtcbn1cbmV4cG9ydHMuZ2V0RGVmaW5lZFJvb3RUeXBlID0gZ2V0RGVmaW5lZFJvb3RUeXBlO1xuZXhwb3J0cy5nZXRSb290VHlwZU5hbWVzID0gKDAsIG1lbW9pemVfanNfMS5tZW1vaXplMSkoZnVuY3Rpb24gZ2V0Um9vdFR5cGVOYW1lcyhzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZXMgPSAoMCwgZXhwb3J0cy5nZXRSb290VHlwZXMpKHNjaGVtYSk7XG4gICAgcmV0dXJuIG5ldyBTZXQoWy4uLnJvb3RUeXBlc10ubWFwKHR5cGUgPT4gdHlwZS5uYW1lKSk7XG59KTtcbmV4cG9ydHMuZ2V0Um9vdFR5cGVzID0gKDAsIG1lbW9pemVfanNfMS5tZW1vaXplMSkoZnVuY3Rpb24gZ2V0Um9vdFR5cGVzKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gKDAsIGV4cG9ydHMuZ2V0Um9vdFR5cGVNYXApKHNjaGVtYSk7XG4gICAgcmV0dXJuIG5ldyBTZXQocm9vdFR5cGVNYXAudmFsdWVzKCkpO1xufSk7XG5leHBvcnRzLmdldFJvb3RUeXBlTWFwID0gKDAsIG1lbW9pemVfanNfMS5tZW1vaXplMSkoZnVuY3Rpb24gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBuZXcgTWFwKCk7XG4gICAgY29uc3QgcXVlcnlUeXBlID0gc2NoZW1hLmdldFF1ZXJ5VHlwZSgpO1xuICAgIGlmIChxdWVyeVR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdxdWVyeScsIHF1ZXJ5VHlwZSk7XG4gICAgfVxuICAgIGNvbnN0IG11dGF0aW9uVHlwZSA9IHNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKTtcbiAgICBpZiAobXV0YXRpb25UeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgnbXV0YXRpb24nLCBtdXRhdGlvblR5cGUpO1xuICAgIH1cbiAgICBjb25zdCBzdWJzY3JpcHRpb25UeXBlID0gc2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKTtcbiAgICBpZiAoc3Vic2NyaXB0aW9uVHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ3N1YnNjcmlwdGlvbicsIHN1YnNjcmlwdGlvblR5cGUpO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdFR5cGVNYXA7XG59KTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/rootTypes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/selectionSets.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/selectionSets.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseSelectionSet = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction parseSelectionSet(selectionSet, options) {\n    const query = (0, graphql_1.parse)(selectionSet, options).definitions[0];\n    return query.selectionSet;\n}\nexports.parseSelectionSet = parseSelectionSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvc2VsZWN0aW9uU2V0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFxzZWxlY3Rpb25TZXRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZVNlbGVjdGlvblNldCA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gcGFyc2VTZWxlY3Rpb25TZXQoc2VsZWN0aW9uU2V0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgcXVlcnkgPSAoMCwgZ3JhcGhxbF8xLnBhcnNlKShzZWxlY3Rpb25TZXQsIG9wdGlvbnMpLmRlZmluaXRpb25zWzBdO1xuICAgIHJldHVybiBxdWVyeS5zZWxlY3Rpb25TZXQ7XG59XG5leHBvcnRzLnBhcnNlU2VsZWN0aW9uU2V0ID0gcGFyc2VTZWxlY3Rpb25TZXQ7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/selectionSets.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/stub.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/stub.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getBuiltInForStub = exports.isNamedStub = exports.createStub = exports.createNamedStub = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql_1.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql_1.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql_1.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql_1.GraphQLString,\n            },\n        },\n    });\n}\nexports.createNamedStub = createNamedStub;\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql_1.Kind.LIST_TYPE:\n            return new graphql_1.GraphQLList(createStub(node.type, type));\n        case graphql_1.Kind.NON_NULL_TYPE:\n            return new graphql_1.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nexports.createStub = createStub;\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nexports.isNamedStub = isNamedStub;\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql_1.GraphQLInt.name:\n            return graphql_1.GraphQLInt;\n        case graphql_1.GraphQLFloat.name:\n            return graphql_1.GraphQLFloat;\n        case graphql_1.GraphQLString.name:\n            return graphql_1.GraphQLString;\n        case graphql_1.GraphQLBoolean.name:\n            return graphql_1.GraphQLBoolean;\n        case graphql_1.GraphQLID.name:\n            return graphql_1.GraphQLID;\n        default:\n            return type;\n    }\n}\nexports.getBuiltInForStub = getBuiltInForStub;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvc3R1Yi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyxtQkFBbUIsR0FBRyxrQkFBa0IsR0FBRyx1QkFBdUI7QUFDOUYsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcc3R1Yi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0QnVpbHRJbkZvclN0dWIgPSBleHBvcnRzLmlzTmFtZWRTdHViID0gZXhwb3J0cy5jcmVhdGVTdHViID0gZXhwb3J0cy5jcmVhdGVOYW1lZFN0dWIgPSB2b2lkIDA7XG5jb25zdCBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmZ1bmN0aW9uIGNyZWF0ZU5hbWVkU3R1YihuYW1lLCB0eXBlKSB7XG4gICAgbGV0IGNvbnN0cnVjdG9yO1xuICAgIGlmICh0eXBlID09PSAnb2JqZWN0Jykge1xuICAgICAgICBjb25zdHJ1Y3RvciA9IGdyYXBocWxfMS5HcmFwaFFMT2JqZWN0VHlwZTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZSA9PT0gJ2ludGVyZmFjZScpIHtcbiAgICAgICAgY29uc3RydWN0b3IgPSBncmFwaHFsXzEuR3JhcGhRTEludGVyZmFjZVR5cGU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdHJ1Y3RvciA9IGdyYXBocWxfMS5HcmFwaFFMSW5wdXRPYmplY3RUeXBlO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IGNvbnN0cnVjdG9yKHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgICBfZmFrZToge1xuICAgICAgICAgICAgICAgIHR5cGU6IGdyYXBocWxfMS5HcmFwaFFMU3RyaW5nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmV4cG9ydHMuY3JlYXRlTmFtZWRTdHViID0gY3JlYXRlTmFtZWRTdHViO1xuZnVuY3Rpb24gY3JlYXRlU3R1Yihub2RlLCB0eXBlKSB7XG4gICAgc3dpdGNoIChub2RlLmtpbmQpIHtcbiAgICAgICAgY2FzZSBncmFwaHFsXzEuS2luZC5MSVNUX1RZUEU6XG4gICAgICAgICAgICByZXR1cm4gbmV3IGdyYXBocWxfMS5HcmFwaFFMTGlzdChjcmVhdGVTdHViKG5vZGUudHlwZSwgdHlwZSkpO1xuICAgICAgICBjYXNlIGdyYXBocWxfMS5LaW5kLk5PTl9OVUxMX1RZUEU6XG4gICAgICAgICAgICByZXR1cm4gbmV3IGdyYXBocWxfMS5HcmFwaFFMTm9uTnVsbChjcmVhdGVTdHViKG5vZGUudHlwZSwgdHlwZSkpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdvdXRwdXQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5hbWVkU3R1Yihub2RlLm5hbWUudmFsdWUsICdvYmplY3QnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVOYW1lZFN0dWIobm9kZS5uYW1lLnZhbHVlLCAnaW5wdXQnKTtcbiAgICB9XG59XG5leHBvcnRzLmNyZWF0ZVN0dWIgPSBjcmVhdGVTdHViO1xuZnVuY3Rpb24gaXNOYW1lZFN0dWIodHlwZSkge1xuICAgIGlmICgnZ2V0RmllbGRzJyBpbiB0eXBlKSB7XG4gICAgICAgIGNvbnN0IGZpZWxkcyA9IHR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnJlYWNoYWJsZS1sb29wXG4gICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgIHJldHVybiBmaWVsZC5uYW1lID09PSAnX2Zha2UnO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydHMuaXNOYW1lZFN0dWIgPSBpc05hbWVkU3R1YjtcbmZ1bmN0aW9uIGdldEJ1aWx0SW5Gb3JTdHViKHR5cGUpIHtcbiAgICBzd2l0Y2ggKHR5cGUubmFtZSkge1xuICAgICAgICBjYXNlIGdyYXBocWxfMS5HcmFwaFFMSW50Lm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gZ3JhcGhxbF8xLkdyYXBoUUxJbnQ7XG4gICAgICAgIGNhc2UgZ3JhcGhxbF8xLkdyYXBoUUxGbG9hdC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIGdyYXBocWxfMS5HcmFwaFFMRmxvYXQ7XG4gICAgICAgIGNhc2UgZ3JhcGhxbF8xLkdyYXBoUUxTdHJpbmcubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBncmFwaHFsXzEuR3JhcGhRTFN0cmluZztcbiAgICAgICAgY2FzZSBncmFwaHFsXzEuR3JhcGhRTEJvb2xlYW4ubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBncmFwaHFsXzEuR3JhcGhRTEJvb2xlYW47XG4gICAgICAgIGNhc2UgZ3JhcGhxbF8xLkdyYXBoUUxJRC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIGdyYXBocWxfMS5HcmFwaFFMSUQ7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICB9XG59XG5leHBvcnRzLmdldEJ1aWx0SW5Gb3JTdHViID0gZ2V0QnVpbHRJbkZvclN0dWI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/stub.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/transformInputValue.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/transformInputValue.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseInputValueLiteral = exports.parseInputValue = exports.serializeInputValue = exports.transformInputValue = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0, graphql_1.getNullableType)(type);\n    if ((0, graphql_1.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null ? inputLeafValueTransformer(nullableType, value) : value;\n    }\n    else if ((0, graphql_1.isListType)(nullableType)) {\n        return value.map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0, graphql_1.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null ? inputObjectValueTransformer(nullableType, newValue) : newValue;\n    }\n    // unreachable, no other possible return value\n}\nexports.transformInputValue = transformInputValue;\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch (_a) {\n            return v;\n        }\n    });\n}\nexports.serializeInputValue = serializeInputValue;\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch (_a) {\n            return v;\n        }\n    });\n}\nexports.parseInputValue = parseInputValue;\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\nexports.parseInputValueLiteral = parseInputValueLiteral;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvdHJhbnNmb3JtSW5wdXRWYWx1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEIsR0FBRyx1QkFBdUIsR0FBRywyQkFBMkIsR0FBRywyQkFBMkI7QUFDcEgsa0JBQWtCLG1CQUFPLENBQUMsdURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLDBFQUEwRTtBQUMxRTtBQUNBLDhCQUE4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXHRyYW5zZm9ybUlucHV0VmFsdWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnBhcnNlSW5wdXRWYWx1ZUxpdGVyYWwgPSBleHBvcnRzLnBhcnNlSW5wdXRWYWx1ZSA9IGV4cG9ydHMuc2VyaWFsaXplSW5wdXRWYWx1ZSA9IGV4cG9ydHMudHJhbnNmb3JtSW5wdXRWYWx1ZSA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciA9IG51bGwsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lciA9IG51bGwpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IG51bGxhYmxlVHlwZSA9ICgwLCBncmFwaHFsXzEuZ2V0TnVsbGFibGVUeXBlKSh0eXBlKTtcbiAgICBpZiAoKDAsIGdyYXBocWxfMS5pc0xlYWZUeXBlKShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyICE9IG51bGwgPyBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyKG51bGxhYmxlVHlwZSwgdmFsdWUpIDogdmFsdWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKCgwLCBncmFwaHFsXzEuaXNMaXN0VHlwZSkobnVsbGFibGVUeXBlKSkge1xuICAgICAgICByZXR1cm4gdmFsdWUubWFwKChsaXN0TWVtYmVyKSA9PiB0cmFuc2Zvcm1JbnB1dFZhbHVlKG51bGxhYmxlVHlwZS5vZlR5cGUsIGxpc3RNZW1iZXIsIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lcikpO1xuICAgIH1cbiAgICBlbHNlIGlmICgoMCwgZ3JhcGhxbF8xLmlzSW5wdXRPYmplY3RUeXBlKShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGZpZWxkcyA9IG51bGxhYmxlVHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2tleV07XG4gICAgICAgICAgICBpZiAoZmllbGQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIG5ld1ZhbHVlW2tleV0gPSB0cmFuc2Zvcm1JbnB1dFZhbHVlKGZpZWxkLnR5cGUsIHZhbHVlW2tleV0sIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lciAhPSBudWxsID8gaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKG51bGxhYmxlVHlwZSwgbmV3VmFsdWUpIDogbmV3VmFsdWU7XG4gICAgfVxuICAgIC8vIHVucmVhY2hhYmxlLCBubyBvdGhlciBwb3NzaWJsZSByZXR1cm4gdmFsdWVcbn1cbmV4cG9ydHMudHJhbnNmb3JtSW5wdXRWYWx1ZSA9IHRyYW5zZm9ybUlucHV0VmFsdWU7XG5mdW5jdGlvbiBzZXJpYWxpemVJbnB1dFZhbHVlKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gdC5zZXJpYWxpemUodik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5zZXJpYWxpemVJbnB1dFZhbHVlID0gc2VyaWFsaXplSW5wdXRWYWx1ZTtcbmZ1bmN0aW9uIHBhcnNlSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCAodCwgdikgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHQucGFyc2VWYWx1ZSh2KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnRzLnBhcnNlSW5wdXRWYWx1ZSA9IHBhcnNlSW5wdXRWYWx1ZTtcbmZ1bmN0aW9uIHBhcnNlSW5wdXRWYWx1ZUxpdGVyYWwodHlwZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgKHQsIHYpID0+IHQucGFyc2VMaXRlcmFsKHYsIHt9KSk7XG59XG5leHBvcnRzLnBhcnNlSW5wdXRWYWx1ZUxpdGVyYWwgPSBwYXJzZUlucHV0VmFsdWVMaXRlcmFsO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/transformInputValue.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/types.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/types.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DirectiveLocation = void 0;\nvar DirectiveLocation;\n(function (DirectiveLocation) {\n    /** Request Definitions */\n    DirectiveLocation[\"QUERY\"] = \"QUERY\";\n    DirectiveLocation[\"MUTATION\"] = \"MUTATION\";\n    DirectiveLocation[\"SUBSCRIPTION\"] = \"SUBSCRIPTION\";\n    DirectiveLocation[\"FIELD\"] = \"FIELD\";\n    DirectiveLocation[\"FRAGMENT_DEFINITION\"] = \"FRAGMENT_DEFINITION\";\n    DirectiveLocation[\"FRAGMENT_SPREAD\"] = \"FRAGMENT_SPREAD\";\n    DirectiveLocation[\"INLINE_FRAGMENT\"] = \"INLINE_FRAGMENT\";\n    DirectiveLocation[\"VARIABLE_DEFINITION\"] = \"VARIABLE_DEFINITION\";\n    /** Type System Definitions */\n    DirectiveLocation[\"SCHEMA\"] = \"SCHEMA\";\n    DirectiveLocation[\"SCALAR\"] = \"SCALAR\";\n    DirectiveLocation[\"OBJECT\"] = \"OBJECT\";\n    DirectiveLocation[\"FIELD_DEFINITION\"] = \"FIELD_DEFINITION\";\n    DirectiveLocation[\"ARGUMENT_DEFINITION\"] = \"ARGUMENT_DEFINITION\";\n    DirectiveLocation[\"INTERFACE\"] = \"INTERFACE\";\n    DirectiveLocation[\"UNION\"] = \"UNION\";\n    DirectiveLocation[\"ENUM\"] = \"ENUM\";\n    DirectiveLocation[\"ENUM_VALUE\"] = \"ENUM_VALUE\";\n    DirectiveLocation[\"INPUT_OBJECT\"] = \"INPUT_OBJECT\";\n    DirectiveLocation[\"INPUT_FIELD_DEFINITION\"] = \"INPUT_FIELD_DEFINITION\";\n})(DirectiveLocation = exports.DirectiveLocation || (exports.DirectiveLocation = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9EQUFvRCx5QkFBeUIsS0FBSyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXHR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EaXJlY3RpdmVMb2NhdGlvbiA9IHZvaWQgMDtcbnZhciBEaXJlY3RpdmVMb2NhdGlvbjtcbihmdW5jdGlvbiAoRGlyZWN0aXZlTG9jYXRpb24pIHtcbiAgICAvKiogUmVxdWVzdCBEZWZpbml0aW9ucyAqL1xuICAgIERpcmVjdGl2ZUxvY2F0aW9uW1wiUVVFUllcIl0gPSBcIlFVRVJZXCI7XG4gICAgRGlyZWN0aXZlTG9jYXRpb25bXCJNVVRBVElPTlwiXSA9IFwiTVVUQVRJT05cIjtcbiAgICBEaXJlY3RpdmVMb2NhdGlvbltcIlNVQlNDUklQVElPTlwiXSA9IFwiU1VCU0NSSVBUSU9OXCI7XG4gICAgRGlyZWN0aXZlTG9jYXRpb25bXCJGSUVMRFwiXSA9IFwiRklFTERcIjtcbiAgICBEaXJlY3RpdmVMb2NhdGlvbltcIkZSQUdNRU5UX0RFRklOSVRJT05cIl0gPSBcIkZSQUdNRU5UX0RFRklOSVRJT05cIjtcbiAgICBEaXJlY3RpdmVMb2NhdGlvbltcIkZSQUdNRU5UX1NQUkVBRFwiXSA9IFwiRlJBR01FTlRfU1BSRUFEXCI7XG4gICAgRGlyZWN0aXZlTG9jYXRpb25bXCJJTkxJTkVfRlJBR01FTlRcIl0gPSBcIklOTElORV9GUkFHTUVOVFwiO1xuICAgIERpcmVjdGl2ZUxvY2F0aW9uW1wiVkFSSUFCTEVfREVGSU5JVElPTlwiXSA9IFwiVkFSSUFCTEVfREVGSU5JVElPTlwiO1xuICAgIC8qKiBUeXBlIFN5c3RlbSBEZWZpbml0aW9ucyAqL1xuICAgIERpcmVjdGl2ZUxvY2F0aW9uW1wiU0NIRU1BXCJdID0gXCJTQ0hFTUFcIjtcbiAgICBEaXJlY3RpdmVMb2NhdGlvbltcIlNDQUxBUlwiXSA9IFwiU0NBTEFSXCI7XG4gICAgRGlyZWN0aXZlTG9jYXRpb25bXCJPQkpFQ1RcIl0gPSBcIk9CSkVDVFwiO1xuICAgIERpcmVjdGl2ZUxvY2F0aW9uW1wiRklFTERfREVGSU5JVElPTlwiXSA9IFwiRklFTERfREVGSU5JVElPTlwiO1xuICAgIERpcmVjdGl2ZUxvY2F0aW9uW1wiQVJHVU1FTlRfREVGSU5JVElPTlwiXSA9IFwiQVJHVU1FTlRfREVGSU5JVElPTlwiO1xuICAgIERpcmVjdGl2ZUxvY2F0aW9uW1wiSU5URVJGQUNFXCJdID0gXCJJTlRFUkZBQ0VcIjtcbiAgICBEaXJlY3RpdmVMb2NhdGlvbltcIlVOSU9OXCJdID0gXCJVTklPTlwiO1xuICAgIERpcmVjdGl2ZUxvY2F0aW9uW1wiRU5VTVwiXSA9IFwiRU5VTVwiO1xuICAgIERpcmVjdGl2ZUxvY2F0aW9uW1wiRU5VTV9WQUxVRVwiXSA9IFwiRU5VTV9WQUxVRVwiO1xuICAgIERpcmVjdGl2ZUxvY2F0aW9uW1wiSU5QVVRfT0JKRUNUXCJdID0gXCJJTlBVVF9PQkpFQ1RcIjtcbiAgICBEaXJlY3RpdmVMb2NhdGlvbltcIklOUFVUX0ZJRUxEX0RFRklOSVRJT05cIl0gPSBcIklOUFVUX0ZJRUxEX0RFRklOSVRJT05cIjtcbn0pKERpcmVjdGl2ZUxvY2F0aW9uID0gZXhwb3J0cy5EaXJlY3RpdmVMb2NhdGlvbiB8fCAoZXhwb3J0cy5EaXJlY3RpdmVMb2NhdGlvbiA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/updateArgument.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/updateArgument.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createVariableNameGenerator = exports.updateArgument = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst astFromType_js_1 = __webpack_require__(/*! ./astFromType.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/astFromType.js\");\nfunction updateArgument(argumentNodes, variableDefinitionsMap, variableValues, argName, varName, type, value) {\n    argumentNodes[argName] = {\n        kind: graphql_1.Kind.ARGUMENT,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: argName,\n        },\n        value: {\n            kind: graphql_1.Kind.VARIABLE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: varName,\n            },\n        },\n    };\n    variableDefinitionsMap[varName] = {\n        kind: graphql_1.Kind.VARIABLE_DEFINITION,\n        variable: {\n            kind: graphql_1.Kind.VARIABLE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: varName,\n            },\n        },\n        type: (0, astFromType_js_1.astFromType)(type),\n    };\n    if (value !== undefined) {\n        variableValues[varName] = value;\n        return;\n    }\n    // including the variable in the map with value of `undefined`\n    // will actually be translated by graphql-js into `null`\n    // see https://github.com/graphql/graphql-js/issues/2533\n    if (varName in variableValues) {\n        delete variableValues[varName];\n    }\n}\nexports.updateArgument = updateArgument;\nfunction createVariableNameGenerator(variableDefinitionMap) {\n    let varCounter = 0;\n    return (argName) => {\n        let varName;\n        do {\n            varName = `_v${(varCounter++).toString()}_${argName}`;\n        } while (varName in variableDefinitionMap);\n        return varName;\n    };\n}\nexports.createVariableNameGenerator = createVariableNameGenerator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvdXBkYXRlQXJndW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUNBQW1DLEdBQUcsc0JBQXNCO0FBQzVELGtCQUFrQixtQkFBTyxDQUFDLHVEQUFTO0FBQ25DLHlCQUF5QixtQkFBTyxDQUFDLHNIQUFrQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwwQkFBMEIsR0FBRyxRQUFRO0FBQ2hFLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFx1cGRhdGVBcmd1bWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlVmFyaWFibGVOYW1lR2VuZXJhdG9yID0gZXhwb3J0cy51cGRhdGVBcmd1bWVudCA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgYXN0RnJvbVR5cGVfanNfMSA9IHJlcXVpcmUoXCIuL2FzdEZyb21UeXBlLmpzXCIpO1xuZnVuY3Rpb24gdXBkYXRlQXJndW1lbnQoYXJndW1lbnROb2RlcywgdmFyaWFibGVEZWZpbml0aW9uc01hcCwgdmFyaWFibGVWYWx1ZXMsIGFyZ05hbWUsIHZhck5hbWUsIHR5cGUsIHZhbHVlKSB7XG4gICAgYXJndW1lbnROb2Rlc1thcmdOYW1lXSA9IHtcbiAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuQVJHVU1FTlQsXG4gICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLk5BTUUsXG4gICAgICAgICAgICB2YWx1ZTogYXJnTmFtZSxcbiAgICAgICAgfSxcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLlZBUklBQkxFLFxuICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLk5BTUUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IHZhck5hbWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIH07XG4gICAgdmFyaWFibGVEZWZpbml0aW9uc01hcFt2YXJOYW1lXSA9IHtcbiAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuVkFSSUFCTEVfREVGSU5JVElPTixcbiAgICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLlZBUklBQkxFLFxuICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLk5BTUUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IHZhck5hbWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB0eXBlOiAoMCwgYXN0RnJvbVR5cGVfanNfMS5hc3RGcm9tVHlwZSkodHlwZSksXG4gICAgfTtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB2YXJpYWJsZVZhbHVlc1t2YXJOYW1lXSA9IHZhbHVlO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIGluY2x1ZGluZyB0aGUgdmFyaWFibGUgaW4gdGhlIG1hcCB3aXRoIHZhbHVlIG9mIGB1bmRlZmluZWRgXG4gICAgLy8gd2lsbCBhY3R1YWxseSBiZSB0cmFuc2xhdGVkIGJ5IGdyYXBocWwtanMgaW50byBgbnVsbGBcbiAgICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2dyYXBocWwvZ3JhcGhxbC1qcy9pc3N1ZXMvMjUzM1xuICAgIGlmICh2YXJOYW1lIGluIHZhcmlhYmxlVmFsdWVzKSB7XG4gICAgICAgIGRlbGV0ZSB2YXJpYWJsZVZhbHVlc1t2YXJOYW1lXTtcbiAgICB9XG59XG5leHBvcnRzLnVwZGF0ZUFyZ3VtZW50ID0gdXBkYXRlQXJndW1lbnQ7XG5mdW5jdGlvbiBjcmVhdGVWYXJpYWJsZU5hbWVHZW5lcmF0b3IodmFyaWFibGVEZWZpbml0aW9uTWFwKSB7XG4gICAgbGV0IHZhckNvdW50ZXIgPSAwO1xuICAgIHJldHVybiAoYXJnTmFtZSkgPT4ge1xuICAgICAgICBsZXQgdmFyTmFtZTtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgdmFyTmFtZSA9IGBfdiR7KHZhckNvdW50ZXIrKykudG9TdHJpbmcoKX1fJHthcmdOYW1lfWA7XG4gICAgICAgIH0gd2hpbGUgKHZhck5hbWUgaW4gdmFyaWFibGVEZWZpbml0aW9uTWFwKTtcbiAgICAgICAgcmV0dXJuIHZhck5hbWU7XG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlVmFyaWFibGVOYW1lR2VuZXJhdG9yID0gY3JlYXRlVmFyaWFibGVOYW1lR2VuZXJhdG9yO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/updateArgument.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/validate-documents.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/validate-documents.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDefaultRules = exports.checkValidationErrors = exports.validateGraphQlDocuments = void 0;\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst AggregateError_js_1 = __webpack_require__(/*! ./AggregateError.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/AggregateError.js\");\nasync function validateGraphQlDocuments(schema, documentFiles, effectiveRules = createDefaultRules()) {\n    const allFragmentMap = new Map();\n    const documentFileObjectsToValidate = [];\n    for (const documentFile of documentFiles) {\n        if (documentFile.document) {\n            const definitionsToValidate = [];\n            for (const definitionNode of documentFile.document.definitions) {\n                if (definitionNode.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n                    allFragmentMap.set(definitionNode.name.value, definitionNode);\n                }\n                else {\n                    definitionsToValidate.push(definitionNode);\n                }\n            }\n            documentFileObjectsToValidate.push({\n                location: documentFile.location,\n                document: {\n                    kind: graphql_1.Kind.DOCUMENT,\n                    definitions: definitionsToValidate,\n                },\n            });\n        }\n    }\n    const allErrors = [];\n    const allFragmentsDocument = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: [...allFragmentMap.values()],\n    };\n    await Promise.all(documentFileObjectsToValidate.map(async (documentFile) => {\n        const documentToValidate = (0, graphql_1.concatAST)([allFragmentsDocument, documentFile.document]);\n        const errors = (0, graphql_1.validate)(schema, documentToValidate, effectiveRules);\n        if (errors.length > 0) {\n            allErrors.push({\n                filePath: documentFile.location,\n                errors,\n            });\n        }\n    }));\n    return allErrors;\n}\nexports.validateGraphQlDocuments = validateGraphQlDocuments;\nfunction checkValidationErrors(loadDocumentErrors) {\n    if (loadDocumentErrors.length > 0) {\n        const errors = [];\n        for (const loadDocumentError of loadDocumentErrors) {\n            for (const graphQLError of loadDocumentError.errors) {\n                const error = new Error();\n                error.name = 'GraphQLDocumentError';\n                error.message = `${error.name}: ${graphQLError.message}`;\n                error.stack = error.message;\n                if (graphQLError.locations) {\n                    for (const location of graphQLError.locations) {\n                        error.stack += `\\n    at ${loadDocumentError.filePath}:${location.line}:${location.column}`;\n                    }\n                }\n                errors.push(error);\n            }\n        }\n        throw new AggregateError_js_1.AggregateError(errors, `GraphQL Document Validation failed with ${errors.length} errors;\n  ${errors.map((error, index) => `Error ${index}: ${error.stack}`).join('\\n\\n')}`);\n    }\n}\nexports.checkValidationErrors = checkValidationErrors;\nfunction createDefaultRules() {\n    let ignored = ['NoUnusedFragmentsRule', 'NoUnusedVariablesRule', 'KnownDirectivesRule'];\n    if (graphql_1.versionInfo.major < 15) {\n        ignored = ignored.map(rule => rule.replace(/Rule$/, ''));\n    }\n    return graphql_1.specifiedRules.filter((f) => !ignored.includes(f.name));\n}\nexports.createDefaultRules = createDefaultRules;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvdmFsaWRhdGUtZG9jdW1lbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLDZCQUE2QixHQUFHLGdDQUFnQztBQUM3RixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQyw0QkFBNEIsbUJBQU8sQ0FBQyw0SEFBcUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxXQUFXLElBQUkscUJBQXFCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCwyQkFBMkIsR0FBRyxjQUFjLEdBQUcsZ0JBQWdCO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3R0FBd0csZUFBZTtBQUN2SCxJQUFJLHNDQUFzQyxNQUFNLElBQUksWUFBWSxnQkFBZ0I7QUFDaEY7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxha3NoYVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxTa2lsbGhhdmVuLVxcbm9kZV9tb2R1bGVzXFxhcG9sbG8tc2VydmVyLWNvcmVcXG5vZGVfbW9kdWxlc1xcQGdyYXBocWwtdG9vbHNcXHV0aWxzXFxjanNcXHZhbGlkYXRlLWRvY3VtZW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlRGVmYXVsdFJ1bGVzID0gZXhwb3J0cy5jaGVja1ZhbGlkYXRpb25FcnJvcnMgPSBleHBvcnRzLnZhbGlkYXRlR3JhcGhRbERvY3VtZW50cyA9IHZvaWQgMDtcbmNvbnN0IGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuY29uc3QgQWdncmVnYXRlRXJyb3JfanNfMSA9IHJlcXVpcmUoXCIuL0FnZ3JlZ2F0ZUVycm9yLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gdmFsaWRhdGVHcmFwaFFsRG9jdW1lbnRzKHNjaGVtYSwgZG9jdW1lbnRGaWxlcywgZWZmZWN0aXZlUnVsZXMgPSBjcmVhdGVEZWZhdWx0UnVsZXMoKSkge1xuICAgIGNvbnN0IGFsbEZyYWdtZW50TWFwID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IGRvY3VtZW50RmlsZU9iamVjdHNUb1ZhbGlkYXRlID0gW107XG4gICAgZm9yIChjb25zdCBkb2N1bWVudEZpbGUgb2YgZG9jdW1lbnRGaWxlcykge1xuICAgICAgICBpZiAoZG9jdW1lbnRGaWxlLmRvY3VtZW50KSB7XG4gICAgICAgICAgICBjb25zdCBkZWZpbml0aW9uc1RvVmFsaWRhdGUgPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZGVmaW5pdGlvbk5vZGUgb2YgZG9jdW1lbnRGaWxlLmRvY3VtZW50LmRlZmluaXRpb25zKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRlZmluaXRpb25Ob2RlLmtpbmQgPT09IGdyYXBocWxfMS5LaW5kLkZSQUdNRU5UX0RFRklOSVRJT04pIHtcbiAgICAgICAgICAgICAgICAgICAgYWxsRnJhZ21lbnRNYXAuc2V0KGRlZmluaXRpb25Ob2RlLm5hbWUudmFsdWUsIGRlZmluaXRpb25Ob2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmluaXRpb25zVG9WYWxpZGF0ZS5wdXNoKGRlZmluaXRpb25Ob2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkb2N1bWVudEZpbGVPYmplY3RzVG9WYWxpZGF0ZS5wdXNoKHtcbiAgICAgICAgICAgICAgICBsb2NhdGlvbjogZG9jdW1lbnRGaWxlLmxvY2F0aW9uLFxuICAgICAgICAgICAgICAgIGRvY3VtZW50OiB7XG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLkRPQ1VNRU5ULFxuICAgICAgICAgICAgICAgICAgICBkZWZpbml0aW9uczogZGVmaW5pdGlvbnNUb1ZhbGlkYXRlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBhbGxFcnJvcnMgPSBbXTtcbiAgICBjb25zdCBhbGxGcmFnbWVudHNEb2N1bWVudCA9IHtcbiAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuRE9DVU1FTlQsXG4gICAgICAgIGRlZmluaXRpb25zOiBbLi4uYWxsRnJhZ21lbnRNYXAudmFsdWVzKCldLFxuICAgIH07XG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoZG9jdW1lbnRGaWxlT2JqZWN0c1RvVmFsaWRhdGUubWFwKGFzeW5jIChkb2N1bWVudEZpbGUpID0+IHtcbiAgICAgICAgY29uc3QgZG9jdW1lbnRUb1ZhbGlkYXRlID0gKDAsIGdyYXBocWxfMS5jb25jYXRBU1QpKFthbGxGcmFnbWVudHNEb2N1bWVudCwgZG9jdW1lbnRGaWxlLmRvY3VtZW50XSk7XG4gICAgICAgIGNvbnN0IGVycm9ycyA9ICgwLCBncmFwaHFsXzEudmFsaWRhdGUpKHNjaGVtYSwgZG9jdW1lbnRUb1ZhbGlkYXRlLCBlZmZlY3RpdmVSdWxlcyk7XG4gICAgICAgIGlmIChlcnJvcnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgYWxsRXJyb3JzLnB1c2goe1xuICAgICAgICAgICAgICAgIGZpbGVQYXRoOiBkb2N1bWVudEZpbGUubG9jYXRpb24sXG4gICAgICAgICAgICAgICAgZXJyb3JzLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KSk7XG4gICAgcmV0dXJuIGFsbEVycm9ycztcbn1cbmV4cG9ydHMudmFsaWRhdGVHcmFwaFFsRG9jdW1lbnRzID0gdmFsaWRhdGVHcmFwaFFsRG9jdW1lbnRzO1xuZnVuY3Rpb24gY2hlY2tWYWxpZGF0aW9uRXJyb3JzKGxvYWREb2N1bWVudEVycm9ycykge1xuICAgIGlmIChsb2FkRG9jdW1lbnRFcnJvcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBlcnJvcnMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBsb2FkRG9jdW1lbnRFcnJvciBvZiBsb2FkRG9jdW1lbnRFcnJvcnMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZ3JhcGhRTEVycm9yIG9mIGxvYWREb2N1bWVudEVycm9yLmVycm9ycykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKCk7XG4gICAgICAgICAgICAgICAgZXJyb3IubmFtZSA9ICdHcmFwaFFMRG9jdW1lbnRFcnJvcic7XG4gICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZSA9IGAke2Vycm9yLm5hbWV9OiAke2dyYXBoUUxFcnJvci5tZXNzYWdlfWA7XG4gICAgICAgICAgICAgICAgZXJyb3Iuc3RhY2sgPSBlcnJvci5tZXNzYWdlO1xuICAgICAgICAgICAgICAgIGlmIChncmFwaFFMRXJyb3IubG9jYXRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbG9jYXRpb24gb2YgZ3JhcGhRTEVycm9yLmxvY2F0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3Iuc3RhY2sgKz0gYFxcbiAgICBhdCAke2xvYWREb2N1bWVudEVycm9yLmZpbGVQYXRofToke2xvY2F0aW9uLmxpbmV9OiR7bG9jYXRpb24uY29sdW1ufWA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBBZ2dyZWdhdGVFcnJvcl9qc18xLkFnZ3JlZ2F0ZUVycm9yKGVycm9ycywgYEdyYXBoUUwgRG9jdW1lbnQgVmFsaWRhdGlvbiBmYWlsZWQgd2l0aCAke2Vycm9ycy5sZW5ndGh9IGVycm9ycztcbiAgJHtlcnJvcnMubWFwKChlcnJvciwgaW5kZXgpID0+IGBFcnJvciAke2luZGV4fTogJHtlcnJvci5zdGFja31gKS5qb2luKCdcXG5cXG4nKX1gKTtcbiAgICB9XG59XG5leHBvcnRzLmNoZWNrVmFsaWRhdGlvbkVycm9ycyA9IGNoZWNrVmFsaWRhdGlvbkVycm9ycztcbmZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRSdWxlcygpIHtcbiAgICBsZXQgaWdub3JlZCA9IFsnTm9VbnVzZWRGcmFnbWVudHNSdWxlJywgJ05vVW51c2VkVmFyaWFibGVzUnVsZScsICdLbm93bkRpcmVjdGl2ZXNSdWxlJ107XG4gICAgaWYgKGdyYXBocWxfMS52ZXJzaW9uSW5mby5tYWpvciA8IDE1KSB7XG4gICAgICAgIGlnbm9yZWQgPSBpZ25vcmVkLm1hcChydWxlID0+IHJ1bGUucmVwbGFjZSgvUnVsZSQvLCAnJykpO1xuICAgIH1cbiAgICByZXR1cm4gZ3JhcGhxbF8xLnNwZWNpZmllZFJ1bGVzLmZpbHRlcigoZikgPT4gIWlnbm9yZWQuaW5jbHVkZXMoZi5uYW1lKSk7XG59XG5leHBvcnRzLmNyZWF0ZURlZmF1bHRSdWxlcyA9IGNyZWF0ZURlZmF1bHRSdWxlcztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/validate-documents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/valueMatchesCriteria.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/valueMatchesCriteria.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.valueMatchesCriteria = void 0;\nfunction valueMatchesCriteria(value, criteria) {\n    if (value == null) {\n        return value === criteria;\n    }\n    else if (Array.isArray(value)) {\n        return Array.isArray(criteria) && value.every((val, index) => valueMatchesCriteria(val, criteria[index]));\n    }\n    else if (typeof value === 'object') {\n        return (typeof criteria === 'object' &&\n            criteria &&\n            Object.keys(criteria).every(propertyName => valueMatchesCriteria(value[propertyName], criteria[propertyName])));\n    }\n    else if (criteria instanceof RegExp) {\n        return criteria.test(value);\n    }\n    return value === criteria;\n}\nexports.valueMatchesCriteria = valueMatchesCriteria;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvdmFsdWVNYXRjaGVzQ3JpdGVyaWEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWtzaGFcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcU2tpbGxoYXZlbi1cXG5vZGVfbW9kdWxlc1xcYXBvbGxvLXNlcnZlci1jb3JlXFxub2RlX21vZHVsZXNcXEBncmFwaHFsLXRvb2xzXFx1dGlsc1xcY2pzXFx2YWx1ZU1hdGNoZXNDcml0ZXJpYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudmFsdWVNYXRjaGVzQ3JpdGVyaWEgPSB2b2lkIDA7XG5mdW5jdGlvbiB2YWx1ZU1hdGNoZXNDcml0ZXJpYSh2YWx1ZSwgY3JpdGVyaWEpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWUgPT09IGNyaXRlcmlhO1xuICAgIH1cbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjcml0ZXJpYSkgJiYgdmFsdWUuZXZlcnkoKHZhbCwgaW5kZXgpID0+IHZhbHVlTWF0Y2hlc0NyaXRlcmlhKHZhbCwgY3JpdGVyaWFbaW5kZXhdKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuICh0eXBlb2YgY3JpdGVyaWEgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICBjcml0ZXJpYSAmJlxuICAgICAgICAgICAgT2JqZWN0LmtleXMoY3JpdGVyaWEpLmV2ZXJ5KHByb3BlcnR5TmFtZSA9PiB2YWx1ZU1hdGNoZXNDcml0ZXJpYSh2YWx1ZVtwcm9wZXJ0eU5hbWVdLCBjcml0ZXJpYVtwcm9wZXJ0eU5hbWVdKSkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChjcml0ZXJpYSBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgICAgICByZXR1cm4gY3JpdGVyaWEudGVzdCh2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZSA9PT0gY3JpdGVyaWE7XG59XG5leHBvcnRzLnZhbHVlTWF0Y2hlc0NyaXRlcmlhID0gdmFsdWVNYXRjaGVzQ3JpdGVyaWE7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/valueMatchesCriteria.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/visitResult.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/visitResult.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.visitResult = exports.visitErrors = exports.visitData = void 0;\nconst getOperationASTFromRequest_js_1 = __webpack_require__(/*! ./getOperationASTFromRequest.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/getOperationASTFromRequest.js\");\nconst graphql_1 = __webpack_require__(/*! graphql */ \"(rsc)/./node_modules/graphql/index.mjs\");\nconst collectFields_js_1 = __webpack_require__(/*! ./collectFields.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/collectFields.js\");\nfunction visitData(data, enter, leave) {\n    if (Array.isArray(data)) {\n        return data.map(value => visitData(value, enter, leave));\n    }\n    else if (typeof data === 'object') {\n        const newData = enter != null ? enter(data) : data;\n        if (newData != null) {\n            for (const key in newData) {\n                const value = newData[key];\n                Object.defineProperty(newData, key, {\n                    value: visitData(value, enter, leave),\n                });\n            }\n        }\n        return leave != null ? leave(newData) : newData;\n    }\n    return data;\n}\nexports.visitData = visitData;\nfunction visitErrors(errors, visitor) {\n    return errors.map(error => visitor(error));\n}\nexports.visitErrors = visitErrors;\nfunction visitResult(result, request, schema, resultVisitorMap, errorVisitorMap) {\n    const fragments = request.document.definitions.reduce((acc, def) => {\n        if (def.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n            acc[def.name.value] = def;\n        }\n        return acc;\n    }, {});\n    const variableValues = request.variables || {};\n    const errorInfo = {\n        segmentInfoMap: new Map(),\n        unpathedErrors: new Set(),\n    };\n    const data = result.data;\n    const errors = result.errors;\n    const visitingErrors = errors != null && errorVisitorMap != null;\n    const operationDocumentNode = (0, getOperationASTFromRequest_js_1.getOperationASTFromRequest)(request);\n    if (data != null && operationDocumentNode != null) {\n        result.data = visitRoot(data, operationDocumentNode, schema, fragments, variableValues, resultVisitorMap, visitingErrors ? errors : undefined, errorInfo);\n    }\n    if (errors != null && errorVisitorMap) {\n        result.errors = visitErrorsByType(errors, errorVisitorMap, errorInfo);\n    }\n    return result;\n}\nexports.visitResult = visitResult;\nfunction visitErrorsByType(errors, errorVisitorMap, errorInfo) {\n    const segmentInfoMap = errorInfo.segmentInfoMap;\n    const unpathedErrors = errorInfo.unpathedErrors;\n    const unpathedErrorVisitor = errorVisitorMap['__unpathed'];\n    return errors.map(originalError => {\n        const pathSegmentsInfo = segmentInfoMap.get(originalError);\n        const newError = pathSegmentsInfo == null\n            ? originalError\n            : pathSegmentsInfo.reduceRight((acc, segmentInfo) => {\n                const typeName = segmentInfo.type.name;\n                const typeVisitorMap = errorVisitorMap[typeName];\n                if (typeVisitorMap == null) {\n                    return acc;\n                }\n                const errorVisitor = typeVisitorMap[segmentInfo.fieldName];\n                return errorVisitor == null ? acc : errorVisitor(acc, segmentInfo.pathIndex);\n            }, originalError);\n        if (unpathedErrorVisitor && unpathedErrors.has(originalError)) {\n            return unpathedErrorVisitor(newError);\n        }\n        return newError;\n    });\n}\nfunction getOperationRootType(schema, operationDef) {\n    switch (operationDef.operation) {\n        case 'query':\n            return schema.getQueryType();\n        case 'mutation':\n            return schema.getMutationType();\n        case 'subscription':\n            return schema.getSubscriptionType();\n    }\n}\nfunction visitRoot(root, operation, schema, fragments, variableValues, resultVisitorMap, errors, errorInfo) {\n    const operationRootType = getOperationRootType(schema, operation);\n    const collectedFields = (0, collectFields_js_1.collectFields)(schema, fragments, variableValues, operationRootType, operation.selectionSet, new Map(), new Set());\n    return visitObjectValue(root, operationRootType, collectedFields, schema, fragments, variableValues, resultVisitorMap, 0, errors, errorInfo);\n}\nfunction visitObjectValue(object, type, fieldNodeMap, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    var _a;\n    const fieldMap = type.getFields();\n    const typeVisitorMap = resultVisitorMap === null || resultVisitorMap === void 0 ? void 0 : resultVisitorMap[type.name];\n    const enterObject = typeVisitorMap === null || typeVisitorMap === void 0 ? void 0 : typeVisitorMap.__enter;\n    const newObject = enterObject != null ? enterObject(object) : object;\n    let sortedErrors;\n    let errorMap = null;\n    if (errors != null) {\n        sortedErrors = sortErrorsByPathSegment(errors, pathIndex);\n        errorMap = sortedErrors.errorMap;\n        for (const error of sortedErrors.unpathedErrors) {\n            errorInfo.unpathedErrors.add(error);\n        }\n    }\n    for (const [responseKey, subFieldNodes] of fieldNodeMap) {\n        const fieldName = subFieldNodes[0].name.value;\n        let fieldType = (_a = fieldMap[fieldName]) === null || _a === void 0 ? void 0 : _a.type;\n        if (fieldType == null) {\n            switch (fieldName) {\n                case '__typename':\n                    fieldType = graphql_1.TypeNameMetaFieldDef.type;\n                    break;\n                case '__schema':\n                    fieldType = graphql_1.SchemaMetaFieldDef.type;\n                    break;\n            }\n        }\n        const newPathIndex = pathIndex + 1;\n        let fieldErrors;\n        if (errorMap) {\n            fieldErrors = errorMap[responseKey];\n            if (fieldErrors != null) {\n                delete errorMap[responseKey];\n            }\n            addPathSegmentInfo(type, fieldName, newPathIndex, fieldErrors, errorInfo);\n        }\n        const newValue = visitFieldValue(object[responseKey], fieldType, subFieldNodes, schema, fragments, variableValues, resultVisitorMap, newPathIndex, fieldErrors, errorInfo);\n        updateObject(newObject, responseKey, newValue, typeVisitorMap, fieldName);\n    }\n    const oldTypename = newObject.__typename;\n    if (oldTypename != null) {\n        updateObject(newObject, '__typename', oldTypename, typeVisitorMap, '__typename');\n    }\n    if (errorMap) {\n        for (const errorsKey in errorMap) {\n            const errors = errorMap[errorsKey];\n            for (const error of errors) {\n                errorInfo.unpathedErrors.add(error);\n            }\n        }\n    }\n    const leaveObject = typeVisitorMap === null || typeVisitorMap === void 0 ? void 0 : typeVisitorMap.__leave;\n    return leaveObject != null ? leaveObject(newObject) : newObject;\n}\nfunction updateObject(object, responseKey, newValue, typeVisitorMap, fieldName) {\n    if (typeVisitorMap == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const fieldVisitor = typeVisitorMap[fieldName];\n    if (fieldVisitor == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const visitedValue = fieldVisitor(newValue);\n    if (visitedValue === undefined) {\n        delete object[responseKey];\n        return;\n    }\n    object[responseKey] = visitedValue;\n}\nfunction visitListValue(list, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    return list.map(listMember => visitFieldValue(listMember, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex + 1, errors, errorInfo));\n}\nfunction visitFieldValue(value, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors = [], errorInfo) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0, graphql_1.getNullableType)(returnType);\n    if ((0, graphql_1.isListType)(nullableType)) {\n        return visitListValue(value, nullableType.ofType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if ((0, graphql_1.isAbstractType)(nullableType)) {\n        const finalType = schema.getType(value.__typename);\n        const collectedFields = (0, collectFields_js_1.collectSubFields)(schema, fragments, variableValues, finalType, fieldNodes);\n        return visitObjectValue(value, finalType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if ((0, graphql_1.isObjectType)(nullableType)) {\n        const collectedFields = (0, collectFields_js_1.collectSubFields)(schema, fragments, variableValues, nullableType, fieldNodes);\n        return visitObjectValue(value, nullableType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    const typeVisitorMap = resultVisitorMap === null || resultVisitorMap === void 0 ? void 0 : resultVisitorMap[nullableType.name];\n    if (typeVisitorMap == null) {\n        return value;\n    }\n    const visitedValue = typeVisitorMap(value);\n    return visitedValue === undefined ? value : visitedValue;\n}\nfunction sortErrorsByPathSegment(errors, pathIndex) {\n    var _a;\n    const errorMap = Object.create(null);\n    const unpathedErrors = new Set();\n    for (const error of errors) {\n        const pathSegment = (_a = error.path) === null || _a === void 0 ? void 0 : _a[pathIndex];\n        if (pathSegment == null) {\n            unpathedErrors.add(error);\n            continue;\n        }\n        if (pathSegment in errorMap) {\n            errorMap[pathSegment].push(error);\n        }\n        else {\n            errorMap[pathSegment] = [error];\n        }\n    }\n    return {\n        errorMap,\n        unpathedErrors,\n    };\n}\nfunction addPathSegmentInfo(type, fieldName, pathIndex, errors = [], errorInfo) {\n    for (const error of errors) {\n        const segmentInfo = {\n            type,\n            fieldName,\n            pathIndex,\n        };\n        const pathSegmentsInfo = errorInfo.segmentInfoMap.get(error);\n        if (pathSegmentsInfo == null) {\n            errorInfo.segmentInfoMap.set(error, [segmentInfo]);\n        }\n        else {\n            pathSegmentsInfo.push(segmentInfo);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvdmlzaXRSZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsaUJBQWlCO0FBQzdELHdDQUF3QyxtQkFBTyxDQUFDLG9KQUFpQztBQUNqRixrQkFBa0IsbUJBQU8sQ0FBQyx1REFBUztBQUNuQywyQkFBMkIsbUJBQU8sQ0FBQywwSEFBb0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcdmlzaXRSZXN1bHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZpc2l0UmVzdWx0ID0gZXhwb3J0cy52aXNpdEVycm9ycyA9IGV4cG9ydHMudmlzaXREYXRhID0gdm9pZCAwO1xuY29uc3QgZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3RfanNfMSA9IHJlcXVpcmUoXCIuL2dldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0LmpzXCIpO1xuY29uc3QgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5jb25zdCBjb2xsZWN0RmllbGRzX2pzXzEgPSByZXF1aXJlKFwiLi9jb2xsZWN0RmllbGRzLmpzXCIpO1xuZnVuY3Rpb24gdmlzaXREYXRhKGRhdGEsIGVudGVyLCBsZWF2ZSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgICAgIHJldHVybiBkYXRhLm1hcCh2YWx1ZSA9PiB2aXNpdERhdGEodmFsdWUsIGVudGVyLCBsZWF2ZSkpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgY29uc3QgbmV3RGF0YSA9IGVudGVyICE9IG51bGwgPyBlbnRlcihkYXRhKSA6IGRhdGE7XG4gICAgICAgIGlmIChuZXdEYXRhICE9IG51bGwpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIG5ld0RhdGEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IG5ld0RhdGFba2V5XTtcbiAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3RGF0YSwga2V5LCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2aXNpdERhdGEodmFsdWUsIGVudGVyLCBsZWF2ZSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxlYXZlICE9IG51bGwgPyBsZWF2ZShuZXdEYXRhKSA6IG5ld0RhdGE7XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xufVxuZXhwb3J0cy52aXNpdERhdGEgPSB2aXNpdERhdGE7XG5mdW5jdGlvbiB2aXNpdEVycm9ycyhlcnJvcnMsIHZpc2l0b3IpIHtcbiAgICByZXR1cm4gZXJyb3JzLm1hcChlcnJvciA9PiB2aXNpdG9yKGVycm9yKSk7XG59XG5leHBvcnRzLnZpc2l0RXJyb3JzID0gdmlzaXRFcnJvcnM7XG5mdW5jdGlvbiB2aXNpdFJlc3VsdChyZXN1bHQsIHJlcXVlc3QsIHNjaGVtYSwgcmVzdWx0VmlzaXRvck1hcCwgZXJyb3JWaXNpdG9yTWFwKSB7XG4gICAgY29uc3QgZnJhZ21lbnRzID0gcmVxdWVzdC5kb2N1bWVudC5kZWZpbml0aW9ucy5yZWR1Y2UoKGFjYywgZGVmKSA9PiB7XG4gICAgICAgIGlmIChkZWYua2luZCA9PT0gZ3JhcGhxbF8xLktpbmQuRlJBR01FTlRfREVGSU5JVElPTikge1xuICAgICAgICAgICAgYWNjW2RlZi5uYW1lLnZhbHVlXSA9IGRlZjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbiAgICBjb25zdCB2YXJpYWJsZVZhbHVlcyA9IHJlcXVlc3QudmFyaWFibGVzIHx8IHt9O1xuICAgIGNvbnN0IGVycm9ySW5mbyA9IHtcbiAgICAgICAgc2VnbWVudEluZm9NYXA6IG5ldyBNYXAoKSxcbiAgICAgICAgdW5wYXRoZWRFcnJvcnM6IG5ldyBTZXQoKSxcbiAgICB9O1xuICAgIGNvbnN0IGRhdGEgPSByZXN1bHQuZGF0YTtcbiAgICBjb25zdCBlcnJvcnMgPSByZXN1bHQuZXJyb3JzO1xuICAgIGNvbnN0IHZpc2l0aW5nRXJyb3JzID0gZXJyb3JzICE9IG51bGwgJiYgZXJyb3JWaXNpdG9yTWFwICE9IG51bGw7XG4gICAgY29uc3Qgb3BlcmF0aW9uRG9jdW1lbnROb2RlID0gKDAsIGdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0X2pzXzEuZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QpKHJlcXVlc3QpO1xuICAgIGlmIChkYXRhICE9IG51bGwgJiYgb3BlcmF0aW9uRG9jdW1lbnROb2RlICE9IG51bGwpIHtcbiAgICAgICAgcmVzdWx0LmRhdGEgPSB2aXNpdFJvb3QoZGF0YSwgb3BlcmF0aW9uRG9jdW1lbnROb2RlLCBzY2hlbWEsIGZyYWdtZW50cywgdmFyaWFibGVWYWx1ZXMsIHJlc3VsdFZpc2l0b3JNYXAsIHZpc2l0aW5nRXJyb3JzID8gZXJyb3JzIDogdW5kZWZpbmVkLCBlcnJvckluZm8pO1xuICAgIH1cbiAgICBpZiAoZXJyb3JzICE9IG51bGwgJiYgZXJyb3JWaXNpdG9yTWFwKSB7XG4gICAgICAgIHJlc3VsdC5lcnJvcnMgPSB2aXNpdEVycm9yc0J5VHlwZShlcnJvcnMsIGVycm9yVmlzaXRvck1hcCwgZXJyb3JJbmZvKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMudmlzaXRSZXN1bHQgPSB2aXNpdFJlc3VsdDtcbmZ1bmN0aW9uIHZpc2l0RXJyb3JzQnlUeXBlKGVycm9ycywgZXJyb3JWaXNpdG9yTWFwLCBlcnJvckluZm8pIHtcbiAgICBjb25zdCBzZWdtZW50SW5mb01hcCA9IGVycm9ySW5mby5zZWdtZW50SW5mb01hcDtcbiAgICBjb25zdCB1bnBhdGhlZEVycm9ycyA9IGVycm9ySW5mby51bnBhdGhlZEVycm9ycztcbiAgICBjb25zdCB1bnBhdGhlZEVycm9yVmlzaXRvciA9IGVycm9yVmlzaXRvck1hcFsnX191bnBhdGhlZCddO1xuICAgIHJldHVybiBlcnJvcnMubWFwKG9yaWdpbmFsRXJyb3IgPT4ge1xuICAgICAgICBjb25zdCBwYXRoU2VnbWVudHNJbmZvID0gc2VnbWVudEluZm9NYXAuZ2V0KG9yaWdpbmFsRXJyb3IpO1xuICAgICAgICBjb25zdCBuZXdFcnJvciA9IHBhdGhTZWdtZW50c0luZm8gPT0gbnVsbFxuICAgICAgICAgICAgPyBvcmlnaW5hbEVycm9yXG4gICAgICAgICAgICA6IHBhdGhTZWdtZW50c0luZm8ucmVkdWNlUmlnaHQoKGFjYywgc2VnbWVudEluZm8pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0eXBlTmFtZSA9IHNlZ21lbnRJbmZvLnR5cGUubmFtZTtcbiAgICAgICAgICAgICAgICBjb25zdCB0eXBlVmlzaXRvck1hcCA9IGVycm9yVmlzaXRvck1hcFt0eXBlTmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVWaXNpdG9yTWFwID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3JWaXNpdG9yID0gdHlwZVZpc2l0b3JNYXBbc2VnbWVudEluZm8uZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJyb3JWaXNpdG9yID09IG51bGwgPyBhY2MgOiBlcnJvclZpc2l0b3IoYWNjLCBzZWdtZW50SW5mby5wYXRoSW5kZXgpO1xuICAgICAgICAgICAgfSwgb3JpZ2luYWxFcnJvcik7XG4gICAgICAgIGlmICh1bnBhdGhlZEVycm9yVmlzaXRvciAmJiB1bnBhdGhlZEVycm9ycy5oYXMob3JpZ2luYWxFcnJvcikpIHtcbiAgICAgICAgICAgIHJldHVybiB1bnBhdGhlZEVycm9yVmlzaXRvcihuZXdFcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ld0Vycm9yO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0T3BlcmF0aW9uUm9vdFR5cGUoc2NoZW1hLCBvcGVyYXRpb25EZWYpIHtcbiAgICBzd2l0Y2ggKG9wZXJhdGlvbkRlZi5vcGVyYXRpb24pIHtcbiAgICAgICAgY2FzZSAncXVlcnknOlxuICAgICAgICAgICAgcmV0dXJuIHNjaGVtYS5nZXRRdWVyeVR5cGUoKTtcbiAgICAgICAgY2FzZSAnbXV0YXRpb24nOlxuICAgICAgICAgICAgcmV0dXJuIHNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKTtcbiAgICAgICAgY2FzZSAnc3Vic2NyaXB0aW9uJzpcbiAgICAgICAgICAgIHJldHVybiBzY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHZpc2l0Um9vdChyb290LCBvcGVyYXRpb24sIHNjaGVtYSwgZnJhZ21lbnRzLCB2YXJpYWJsZVZhbHVlcywgcmVzdWx0VmlzaXRvck1hcCwgZXJyb3JzLCBlcnJvckluZm8pIHtcbiAgICBjb25zdCBvcGVyYXRpb25Sb290VHlwZSA9IGdldE9wZXJhdGlvblJvb3RUeXBlKHNjaGVtYSwgb3BlcmF0aW9uKTtcbiAgICBjb25zdCBjb2xsZWN0ZWRGaWVsZHMgPSAoMCwgY29sbGVjdEZpZWxkc19qc18xLmNvbGxlY3RGaWVsZHMpKHNjaGVtYSwgZnJhZ21lbnRzLCB2YXJpYWJsZVZhbHVlcywgb3BlcmF0aW9uUm9vdFR5cGUsIG9wZXJhdGlvbi5zZWxlY3Rpb25TZXQsIG5ldyBNYXAoKSwgbmV3IFNldCgpKTtcbiAgICByZXR1cm4gdmlzaXRPYmplY3RWYWx1ZShyb290LCBvcGVyYXRpb25Sb290VHlwZSwgY29sbGVjdGVkRmllbGRzLCBzY2hlbWEsIGZyYWdtZW50cywgdmFyaWFibGVWYWx1ZXMsIHJlc3VsdFZpc2l0b3JNYXAsIDAsIGVycm9ycywgZXJyb3JJbmZvKTtcbn1cbmZ1bmN0aW9uIHZpc2l0T2JqZWN0VmFsdWUob2JqZWN0LCB0eXBlLCBmaWVsZE5vZGVNYXAsIHNjaGVtYSwgZnJhZ21lbnRzLCB2YXJpYWJsZVZhbHVlcywgcmVzdWx0VmlzaXRvck1hcCwgcGF0aEluZGV4LCBlcnJvcnMsIGVycm9ySW5mbykge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBmaWVsZE1hcCA9IHR5cGUuZ2V0RmllbGRzKCk7XG4gICAgY29uc3QgdHlwZVZpc2l0b3JNYXAgPSByZXN1bHRWaXNpdG9yTWFwID09PSBudWxsIHx8IHJlc3VsdFZpc2l0b3JNYXAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlc3VsdFZpc2l0b3JNYXBbdHlwZS5uYW1lXTtcbiAgICBjb25zdCBlbnRlck9iamVjdCA9IHR5cGVWaXNpdG9yTWFwID09PSBudWxsIHx8IHR5cGVWaXNpdG9yTWFwID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0eXBlVmlzaXRvck1hcC5fX2VudGVyO1xuICAgIGNvbnN0IG5ld09iamVjdCA9IGVudGVyT2JqZWN0ICE9IG51bGwgPyBlbnRlck9iamVjdChvYmplY3QpIDogb2JqZWN0O1xuICAgIGxldCBzb3J0ZWRFcnJvcnM7XG4gICAgbGV0IGVycm9yTWFwID0gbnVsbDtcbiAgICBpZiAoZXJyb3JzICE9IG51bGwpIHtcbiAgICAgICAgc29ydGVkRXJyb3JzID0gc29ydEVycm9yc0J5UGF0aFNlZ21lbnQoZXJyb3JzLCBwYXRoSW5kZXgpO1xuICAgICAgICBlcnJvck1hcCA9IHNvcnRlZEVycm9ycy5lcnJvck1hcDtcbiAgICAgICAgZm9yIChjb25zdCBlcnJvciBvZiBzb3J0ZWRFcnJvcnMudW5wYXRoZWRFcnJvcnMpIHtcbiAgICAgICAgICAgIGVycm9ySW5mby51bnBhdGhlZEVycm9ycy5hZGQoZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3QgW3Jlc3BvbnNlS2V5LCBzdWJGaWVsZE5vZGVzXSBvZiBmaWVsZE5vZGVNYXApIHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gc3ViRmllbGROb2Rlc1swXS5uYW1lLnZhbHVlO1xuICAgICAgICBsZXQgZmllbGRUeXBlID0gKF9hID0gZmllbGRNYXBbZmllbGROYW1lXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnR5cGU7XG4gICAgICAgIGlmIChmaWVsZFR5cGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgc3dpdGNoIChmaWVsZE5hbWUpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdfX3R5cGVuYW1lJzpcbiAgICAgICAgICAgICAgICAgICAgZmllbGRUeXBlID0gZ3JhcGhxbF8xLlR5cGVOYW1lTWV0YUZpZWxkRGVmLnR5cGU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ19fc2NoZW1hJzpcbiAgICAgICAgICAgICAgICAgICAgZmllbGRUeXBlID0gZ3JhcGhxbF8xLlNjaGVtYU1ldGFGaWVsZERlZi50eXBlO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuZXdQYXRoSW5kZXggPSBwYXRoSW5kZXggKyAxO1xuICAgICAgICBsZXQgZmllbGRFcnJvcnM7XG4gICAgICAgIGlmIChlcnJvck1hcCkge1xuICAgICAgICAgICAgZmllbGRFcnJvcnMgPSBlcnJvck1hcFtyZXNwb25zZUtleV07XG4gICAgICAgICAgICBpZiAoZmllbGRFcnJvcnMgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBlcnJvck1hcFtyZXNwb25zZUtleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhZGRQYXRoU2VnbWVudEluZm8odHlwZSwgZmllbGROYW1lLCBuZXdQYXRoSW5kZXgsIGZpZWxkRXJyb3JzLCBlcnJvckluZm8pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gdmlzaXRGaWVsZFZhbHVlKG9iamVjdFtyZXNwb25zZUtleV0sIGZpZWxkVHlwZSwgc3ViRmllbGROb2Rlcywgc2NoZW1hLCBmcmFnbWVudHMsIHZhcmlhYmxlVmFsdWVzLCByZXN1bHRWaXNpdG9yTWFwLCBuZXdQYXRoSW5kZXgsIGZpZWxkRXJyb3JzLCBlcnJvckluZm8pO1xuICAgICAgICB1cGRhdGVPYmplY3QobmV3T2JqZWN0LCByZXNwb25zZUtleSwgbmV3VmFsdWUsIHR5cGVWaXNpdG9yTWFwLCBmaWVsZE5hbWUpO1xuICAgIH1cbiAgICBjb25zdCBvbGRUeXBlbmFtZSA9IG5ld09iamVjdC5fX3R5cGVuYW1lO1xuICAgIGlmIChvbGRUeXBlbmFtZSAhPSBudWxsKSB7XG4gICAgICAgIHVwZGF0ZU9iamVjdChuZXdPYmplY3QsICdfX3R5cGVuYW1lJywgb2xkVHlwZW5hbWUsIHR5cGVWaXNpdG9yTWFwLCAnX190eXBlbmFtZScpO1xuICAgIH1cbiAgICBpZiAoZXJyb3JNYXApIHtcbiAgICAgICAgZm9yIChjb25zdCBlcnJvcnNLZXkgaW4gZXJyb3JNYXApIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9ycyA9IGVycm9yTWFwW2Vycm9yc0tleV07XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGVycm9yIG9mIGVycm9ycykge1xuICAgICAgICAgICAgICAgIGVycm9ySW5mby51bnBhdGhlZEVycm9ycy5hZGQoZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGxlYXZlT2JqZWN0ID0gdHlwZVZpc2l0b3JNYXAgPT09IG51bGwgfHwgdHlwZVZpc2l0b3JNYXAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHR5cGVWaXNpdG9yTWFwLl9fbGVhdmU7XG4gICAgcmV0dXJuIGxlYXZlT2JqZWN0ICE9IG51bGwgPyBsZWF2ZU9iamVjdChuZXdPYmplY3QpIDogbmV3T2JqZWN0O1xufVxuZnVuY3Rpb24gdXBkYXRlT2JqZWN0KG9iamVjdCwgcmVzcG9uc2VLZXksIG5ld1ZhbHVlLCB0eXBlVmlzaXRvck1hcCwgZmllbGROYW1lKSB7XG4gICAgaWYgKHR5cGVWaXNpdG9yTWFwID09IG51bGwpIHtcbiAgICAgICAgb2JqZWN0W3Jlc3BvbnNlS2V5XSA9IG5ld1ZhbHVlO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGZpZWxkVmlzaXRvciA9IHR5cGVWaXNpdG9yTWFwW2ZpZWxkTmFtZV07XG4gICAgaWYgKGZpZWxkVmlzaXRvciA9PSBudWxsKSB7XG4gICAgICAgIG9iamVjdFtyZXNwb25zZUtleV0gPSBuZXdWYWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB2aXNpdGVkVmFsdWUgPSBmaWVsZFZpc2l0b3IobmV3VmFsdWUpO1xuICAgIGlmICh2aXNpdGVkVmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBkZWxldGUgb2JqZWN0W3Jlc3BvbnNlS2V5XTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBvYmplY3RbcmVzcG9uc2VLZXldID0gdmlzaXRlZFZhbHVlO1xufVxuZnVuY3Rpb24gdmlzaXRMaXN0VmFsdWUobGlzdCwgcmV0dXJuVHlwZSwgZmllbGROb2Rlcywgc2NoZW1hLCBmcmFnbWVudHMsIHZhcmlhYmxlVmFsdWVzLCByZXN1bHRWaXNpdG9yTWFwLCBwYXRoSW5kZXgsIGVycm9ycywgZXJyb3JJbmZvKSB7XG4gICAgcmV0dXJuIGxpc3QubWFwKGxpc3RNZW1iZXIgPT4gdmlzaXRGaWVsZFZhbHVlKGxpc3RNZW1iZXIsIHJldHVyblR5cGUsIGZpZWxkTm9kZXMsIHNjaGVtYSwgZnJhZ21lbnRzLCB2YXJpYWJsZVZhbHVlcywgcmVzdWx0VmlzaXRvck1hcCwgcGF0aEluZGV4ICsgMSwgZXJyb3JzLCBlcnJvckluZm8pKTtcbn1cbmZ1bmN0aW9uIHZpc2l0RmllbGRWYWx1ZSh2YWx1ZSwgcmV0dXJuVHlwZSwgZmllbGROb2Rlcywgc2NoZW1hLCBmcmFnbWVudHMsIHZhcmlhYmxlVmFsdWVzLCByZXN1bHRWaXNpdG9yTWFwLCBwYXRoSW5kZXgsIGVycm9ycyA9IFtdLCBlcnJvckluZm8pIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IG51bGxhYmxlVHlwZSA9ICgwLCBncmFwaHFsXzEuZ2V0TnVsbGFibGVUeXBlKShyZXR1cm5UeXBlKTtcbiAgICBpZiAoKDAsIGdyYXBocWxfMS5pc0xpc3RUeXBlKShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiB2aXNpdExpc3RWYWx1ZSh2YWx1ZSwgbnVsbGFibGVUeXBlLm9mVHlwZSwgZmllbGROb2Rlcywgc2NoZW1hLCBmcmFnbWVudHMsIHZhcmlhYmxlVmFsdWVzLCByZXN1bHRWaXNpdG9yTWFwLCBwYXRoSW5kZXgsIGVycm9ycywgZXJyb3JJbmZvKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoKDAsIGdyYXBocWxfMS5pc0Fic3RyYWN0VHlwZSkobnVsbGFibGVUeXBlKSkge1xuICAgICAgICBjb25zdCBmaW5hbFR5cGUgPSBzY2hlbWEuZ2V0VHlwZSh2YWx1ZS5fX3R5cGVuYW1lKTtcbiAgICAgICAgY29uc3QgY29sbGVjdGVkRmllbGRzID0gKDAsIGNvbGxlY3RGaWVsZHNfanNfMS5jb2xsZWN0U3ViRmllbGRzKShzY2hlbWEsIGZyYWdtZW50cywgdmFyaWFibGVWYWx1ZXMsIGZpbmFsVHlwZSwgZmllbGROb2Rlcyk7XG4gICAgICAgIHJldHVybiB2aXNpdE9iamVjdFZhbHVlKHZhbHVlLCBmaW5hbFR5cGUsIGNvbGxlY3RlZEZpZWxkcywgc2NoZW1hLCBmcmFnbWVudHMsIHZhcmlhYmxlVmFsdWVzLCByZXN1bHRWaXNpdG9yTWFwLCBwYXRoSW5kZXgsIGVycm9ycywgZXJyb3JJbmZvKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoKDAsIGdyYXBocWxfMS5pc09iamVjdFR5cGUpKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgY29uc3QgY29sbGVjdGVkRmllbGRzID0gKDAsIGNvbGxlY3RGaWVsZHNfanNfMS5jb2xsZWN0U3ViRmllbGRzKShzY2hlbWEsIGZyYWdtZW50cywgdmFyaWFibGVWYWx1ZXMsIG51bGxhYmxlVHlwZSwgZmllbGROb2Rlcyk7XG4gICAgICAgIHJldHVybiB2aXNpdE9iamVjdFZhbHVlKHZhbHVlLCBudWxsYWJsZVR5cGUsIGNvbGxlY3RlZEZpZWxkcywgc2NoZW1hLCBmcmFnbWVudHMsIHZhcmlhYmxlVmFsdWVzLCByZXN1bHRWaXNpdG9yTWFwLCBwYXRoSW5kZXgsIGVycm9ycywgZXJyb3JJbmZvKTtcbiAgICB9XG4gICAgY29uc3QgdHlwZVZpc2l0b3JNYXAgPSByZXN1bHRWaXNpdG9yTWFwID09PSBudWxsIHx8IHJlc3VsdFZpc2l0b3JNYXAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlc3VsdFZpc2l0b3JNYXBbbnVsbGFibGVUeXBlLm5hbWVdO1xuICAgIGlmICh0eXBlVmlzaXRvck1hcCA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgY29uc3QgdmlzaXRlZFZhbHVlID0gdHlwZVZpc2l0b3JNYXAodmFsdWUpO1xuICAgIHJldHVybiB2aXNpdGVkVmFsdWUgPT09IHVuZGVmaW5lZCA/IHZhbHVlIDogdmlzaXRlZFZhbHVlO1xufVxuZnVuY3Rpb24gc29ydEVycm9yc0J5UGF0aFNlZ21lbnQoZXJyb3JzLCBwYXRoSW5kZXgpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgZXJyb3JNYXAgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGNvbnN0IHVucGF0aGVkRXJyb3JzID0gbmV3IFNldCgpO1xuICAgIGZvciAoY29uc3QgZXJyb3Igb2YgZXJyb3JzKSB7XG4gICAgICAgIGNvbnN0IHBhdGhTZWdtZW50ID0gKF9hID0gZXJyb3IucGF0aCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW3BhdGhJbmRleF07XG4gICAgICAgIGlmIChwYXRoU2VnbWVudCA9PSBudWxsKSB7XG4gICAgICAgICAgICB1bnBhdGhlZEVycm9ycy5hZGQoZXJyb3IpO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhdGhTZWdtZW50IGluIGVycm9yTWFwKSB7XG4gICAgICAgICAgICBlcnJvck1hcFtwYXRoU2VnbWVudF0ucHVzaChlcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBlcnJvck1hcFtwYXRoU2VnbWVudF0gPSBbZXJyb3JdO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGVycm9yTWFwLFxuICAgICAgICB1bnBhdGhlZEVycm9ycyxcbiAgICB9O1xufVxuZnVuY3Rpb24gYWRkUGF0aFNlZ21lbnRJbmZvKHR5cGUsIGZpZWxkTmFtZSwgcGF0aEluZGV4LCBlcnJvcnMgPSBbXSwgZXJyb3JJbmZvKSB7XG4gICAgZm9yIChjb25zdCBlcnJvciBvZiBlcnJvcnMpIHtcbiAgICAgICAgY29uc3Qgc2VnbWVudEluZm8gPSB7XG4gICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgZmllbGROYW1lLFxuICAgICAgICAgICAgcGF0aEluZGV4LFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBwYXRoU2VnbWVudHNJbmZvID0gZXJyb3JJbmZvLnNlZ21lbnRJbmZvTWFwLmdldChlcnJvcik7XG4gICAgICAgIGlmIChwYXRoU2VnbWVudHNJbmZvID09IG51bGwpIHtcbiAgICAgICAgICAgIGVycm9ySW5mby5zZWdtZW50SW5mb01hcC5zZXQoZXJyb3IsIFtzZWdtZW50SW5mb10pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcGF0aFNlZ21lbnRzSW5mby5wdXNoKHNlZ21lbnRJbmZvKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/visitResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/withCancel.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/withCancel.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.withCancel = exports.getAsyncIterableWithCancel = exports.getAsyncIteratorWithCancel = void 0;\nconst memoize_js_1 = __webpack_require__(/*! ./memoize.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/memoize.js\");\nasync function defaultAsyncIteratorReturn(value) {\n    return { value, done: true };\n}\nconst proxyMethodFactory = (0, memoize_js_1.memoize2)(function proxyMethodFactory(target, targetMethod) {\n    return function proxyMethod(...args) {\n        return Reflect.apply(targetMethod, target, args);\n    };\n});\nfunction getAsyncIteratorWithCancel(asyncIterator, onCancel) {\n    return new Proxy(asyncIterator, {\n        has(asyncIterator, prop) {\n            if (prop === 'return') {\n                return true;\n            }\n            return Reflect.has(asyncIterator, prop);\n        },\n        get(asyncIterator, prop, receiver) {\n            const existingPropValue = Reflect.get(asyncIterator, prop, receiver);\n            if (prop === 'return') {\n                const existingReturn = existingPropValue || defaultAsyncIteratorReturn;\n                return async function returnWithCancel(value) {\n                    const returnValue = await onCancel(value);\n                    return Reflect.apply(existingReturn, asyncIterator, [returnValue]);\n                };\n            }\n            else if (typeof existingPropValue === 'function') {\n                return proxyMethodFactory(asyncIterator, existingPropValue);\n            }\n            return existingPropValue;\n        },\n    });\n}\nexports.getAsyncIteratorWithCancel = getAsyncIteratorWithCancel;\nfunction getAsyncIterableWithCancel(asyncIterable, onCancel) {\n    return new Proxy(asyncIterable, {\n        get(asyncIterable, prop, receiver) {\n            const existingPropValue = Reflect.get(asyncIterable, prop, receiver);\n            if (Symbol.asyncIterator === prop) {\n                return function asyncIteratorFactory() {\n                    const asyncIterator = Reflect.apply(existingPropValue, asyncIterable, []);\n                    return getAsyncIteratorWithCancel(asyncIterator, onCancel);\n                };\n            }\n            else if (typeof existingPropValue === 'function') {\n                return proxyMethodFactory(asyncIterable, existingPropValue);\n            }\n            return existingPropValue;\n        },\n    });\n}\nexports.getAsyncIterableWithCancel = getAsyncIterableWithCancel;\nexports.withCancel = getAsyncIterableWithCancel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9janMvd2l0aENhbmNlbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxrQ0FBa0MsR0FBRyxrQ0FBa0M7QUFDNUYscUJBQXFCLG1CQUFPLENBQUMsOEdBQWM7QUFDM0M7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSxrQ0FBa0M7QUFDbEMsa0JBQWtCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFxAZ3JhcGhxbC10b29sc1xcdXRpbHNcXGNqc1xcd2l0aENhbmNlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMud2l0aENhbmNlbCA9IGV4cG9ydHMuZ2V0QXN5bmNJdGVyYWJsZVdpdGhDYW5jZWwgPSBleHBvcnRzLmdldEFzeW5jSXRlcmF0b3JXaXRoQ2FuY2VsID0gdm9pZCAwO1xuY29uc3QgbWVtb2l6ZV9qc18xID0gcmVxdWlyZShcIi4vbWVtb2l6ZS5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGRlZmF1bHRBc3luY0l0ZXJhdG9yUmV0dXJuKHZhbHVlKSB7XG4gICAgcmV0dXJuIHsgdmFsdWUsIGRvbmU6IHRydWUgfTtcbn1cbmNvbnN0IHByb3h5TWV0aG9kRmFjdG9yeSA9ICgwLCBtZW1vaXplX2pzXzEubWVtb2l6ZTIpKGZ1bmN0aW9uIHByb3h5TWV0aG9kRmFjdG9yeSh0YXJnZXQsIHRhcmdldE1ldGhvZCkge1xuICAgIHJldHVybiBmdW5jdGlvbiBwcm94eU1ldGhvZCguLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LmFwcGx5KHRhcmdldE1ldGhvZCwgdGFyZ2V0LCBhcmdzKTtcbiAgICB9O1xufSk7XG5mdW5jdGlvbiBnZXRBc3luY0l0ZXJhdG9yV2l0aENhbmNlbChhc3luY0l0ZXJhdG9yLCBvbkNhbmNlbCkge1xuICAgIHJldHVybiBuZXcgUHJveHkoYXN5bmNJdGVyYXRvciwge1xuICAgICAgICBoYXMoYXN5bmNJdGVyYXRvciwgcHJvcCkge1xuICAgICAgICAgICAgaWYgKHByb3AgPT09ICdyZXR1cm4nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUmVmbGVjdC5oYXMoYXN5bmNJdGVyYXRvciwgcHJvcCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldChhc3luY0l0ZXJhdG9yLCBwcm9wLCByZWNlaXZlcikge1xuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdQcm9wVmFsdWUgPSBSZWZsZWN0LmdldChhc3luY0l0ZXJhdG9yLCBwcm9wLCByZWNlaXZlcik7XG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gJ3JldHVybicpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JldHVybiA9IGV4aXN0aW5nUHJvcFZhbHVlIHx8IGRlZmF1bHRBc3luY0l0ZXJhdG9yUmV0dXJuO1xuICAgICAgICAgICAgICAgIHJldHVybiBhc3luYyBmdW5jdGlvbiByZXR1cm5XaXRoQ2FuY2VsKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJldHVyblZhbHVlID0gYXdhaXQgb25DYW5jZWwodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVmbGVjdC5hcHBseShleGlzdGluZ1JldHVybiwgYXN5bmNJdGVyYXRvciwgW3JldHVyblZhbHVlXSk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBleGlzdGluZ1Byb3BWYWx1ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm94eU1ldGhvZEZhY3RvcnkoYXN5bmNJdGVyYXRvciwgZXhpc3RpbmdQcm9wVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGV4aXN0aW5nUHJvcFZhbHVlO1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuZXhwb3J0cy5nZXRBc3luY0l0ZXJhdG9yV2l0aENhbmNlbCA9IGdldEFzeW5jSXRlcmF0b3JXaXRoQ2FuY2VsO1xuZnVuY3Rpb24gZ2V0QXN5bmNJdGVyYWJsZVdpdGhDYW5jZWwoYXN5bmNJdGVyYWJsZSwgb25DYW5jZWwpIHtcbiAgICByZXR1cm4gbmV3IFByb3h5KGFzeW5jSXRlcmFibGUsIHtcbiAgICAgICAgZ2V0KGFzeW5jSXRlcmFibGUsIHByb3AsIHJlY2VpdmVyKSB7XG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ1Byb3BWYWx1ZSA9IFJlZmxlY3QuZ2V0KGFzeW5jSXRlcmFibGUsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgIGlmIChTeW1ib2wuYXN5bmNJdGVyYXRvciA9PT0gcHJvcCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiBhc3luY0l0ZXJhdG9yRmFjdG9yeSgpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYXN5bmNJdGVyYXRvciA9IFJlZmxlY3QuYXBwbHkoZXhpc3RpbmdQcm9wVmFsdWUsIGFzeW5jSXRlcmFibGUsIFtdKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdldEFzeW5jSXRlcmF0b3JXaXRoQ2FuY2VsKGFzeW5jSXRlcmF0b3IsIG9uQ2FuY2VsKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGV4aXN0aW5nUHJvcFZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3h5TWV0aG9kRmFjdG9yeShhc3luY0l0ZXJhYmxlLCBleGlzdGluZ1Byb3BWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZXhpc3RpbmdQcm9wVmFsdWU7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5leHBvcnRzLmdldEFzeW5jSXRlcmFibGVXaXRoQ2FuY2VsID0gZ2V0QXN5bmNJdGVyYWJsZVdpdGhDYW5jZWw7XG5leHBvcnRzLndpdGhDYW5jZWwgPSBnZXRBc3luY0l0ZXJhYmxlV2l0aENhbmNlbDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/@graphql-tools/utils/cjs/withCancel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/lru-cache/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/lru-cache/index.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = __webpack_require__(/*! yallist */ \"(rsc)/./node_modules/apollo-server-core/node_modules/yallist/yallist.js\")\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/lru-cache/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/yallist/iterator.js":
/*!**************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/yallist/iterator.js ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBvbGxvLXNlcnZlci1jb3JlL25vZGVfbW9kdWxlcy95YWxsaXN0L2l0ZXJhdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFZO0FBQ1o7QUFDQTtBQUNBLGlDQUFpQyxRQUFRO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFrc2hhXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXFNraWxsaGF2ZW4tXFxub2RlX21vZHVsZXNcXGFwb2xsby1zZXJ2ZXItY29yZVxcbm9kZV9tb2R1bGVzXFx5YWxsaXN0XFxpdGVyYXRvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFlhbGxpc3QpIHtcbiAgWWFsbGlzdC5wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKiAoKSB7XG4gICAgZm9yIChsZXQgd2Fsa2VyID0gdGhpcy5oZWFkOyB3YWxrZXI7IHdhbGtlciA9IHdhbGtlci5uZXh0KSB7XG4gICAgICB5aWVsZCB3YWxrZXIudmFsdWVcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/yallist/iterator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/node_modules/yallist/yallist.js":
/*!*************************************************************************!*\
  !*** ./node_modules/apollo-server-core/node_modules/yallist/yallist.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  __webpack_require__(/*! ./iterator.js */ \"(rsc)/./node_modules/apollo-server-core/node_modules/yallist/iterator.js\")(Yallist)\n} catch (er) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apollo-server-core/node_modules/yallist/yallist.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apollo-server-core/package.json":
/*!******************************************************!*\
  !*** ./node_modules/apollo-server-core/package.json ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"name":"apollo-server-core","version":"3.13.0","description":"Core engine for Apollo GraphQL server","main":"dist/index.js","types":"dist/index.d.ts","repository":{"type":"git","url":"https://github.com/apollographql/apollo-server","directory":"packages/apollo-server-core"},"keywords":["GraphQL","Apollo","Server","Javascript"],"author":"Apollo <packages@apollographql.com>","license":"MIT","bugs":{"url":"https://github.com/apollographql/apollo-server/issues"},"homepage":"https://github.com/apollographql/apollo-server#readme","engines":{"node":">=12.0"},"dependencies":{"@apollo/utils.keyvaluecache":"^1.0.1","@apollo/utils.logger":"^1.0.0","@apollo/utils.usagereporting":"^1.0.0","@apollographql/apollo-tools":"^0.5.3","@apollographql/graphql-playground-html":"1.6.29","@graphql-tools/mock":"^8.1.2","@graphql-tools/schema":"^8.0.0","@josephg/resolvable":"^1.0.0","apollo-datasource":"^3.3.2","apollo-reporting-protobuf":"^3.4.0","apollo-server-env":"^4.2.1","apollo-server-errors":"^3.3.1","apollo-server-plugin-base":"^3.7.2","apollo-server-types":"^3.8.0","async-retry":"^1.2.1","fast-json-stable-stringify":"^2.1.0","graphql-tag":"^2.11.0","loglevel":"^1.6.8","lru-cache":"^6.0.0","node-abort-controller":"^3.0.1","sha.js":"^2.4.11","uuid":"^9.0.0","whatwg-mimetype":"^3.0.0"},"peerDependencies":{"graphql":"^15.3.0 || ^16.0.0"},"gitHead":"f93284e853efd6da46d91ae40da47a2dd15b61fe"}');

/***/ })

};
;